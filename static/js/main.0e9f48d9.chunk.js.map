{"version":3,"sources":["store/dashboard/dashboard.types.ts","utils/styles.hook.ts","store/dashboard/dashboard.hooks.ts","store/action-types.ts","store/dashboard/dashboard.actions.ts","component/policy-editor/controls/policy-editor.tabs.tree.tsx","component/dashboard/main.sidebar.component.tsx","component/dashboard/main.appbar.component.tsx","component/dashboard/policy-editor.dashboard.component.tsx","component/application-preset/application-preset.component.tsx","component/policy-editor/controls/policy-editor.tabs.control.tsx","component/policy-editor/policy-editor.component.tsx","component/policy-wizard/policy-wizard.component.tsx","App.tsx","store/dashboard/handler/dashboard-module-set.handler.ts","store/dashboard/dashboard.reducer.ts","store/reducer.base.ts","store/index.ts","storage/session.storage.ts","index.tsx"],"names":["DashboardModuleEnum","drawerWidth","useStyles","makeStyles","theme","console","log","mixins","toolbar","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","title","flexGrow","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","justifyContent","content","overflow","maxWidth","maxHeight","minHeight","minWidth","contentShift","nested","paddingLeft","nested2","ellipsis","textOverflow","sectionButtons","margin","hidden","index","useDashboardState","useSelector","state","dashboardState","DASHBOARD_MODULE_SET","dashboardModuleSet","currentModule","type","PolicyEditorPageEnum","MainSidebarComponent","onDrawerClose","classes","dispatch","useDispatch","className","src","alt","style","Typography","IconButton","onClick","ChevronLeft","Divider","List","text","id","PolicyEditor","icon","Edit","PolicyWizard","Assistant","ApplicationPreset","Apps","map","ListItem","button","selected","ListItemIcon","ListItemText","primary","GetApp","Share","MainAppbarComponent","open","onDrawerOpen","Toolbar","color","aria-label","edge","clsx","variant","noWrap","PolicyEditorDashboardComponent","children","useState","setOpen","CssBaseline","AppBar","position","Drawer","anchor","paper","ApplicationPresetComponent","createLabel","hasSubmenu","Box","verticalAlign","ChevronRight","TabsTree","label","Business","GeneralSettings","BlockingSettings","EditorTabsControl","withStyles","borderBottom","palette","divider","indicator","backgroundColor","main","Tabs","EditorTabControl","textTransform","fontWeight","typography","fontWeightRegular","opacity","fontWeightMedium","props","Tab","disableRipple","PolicyEditorComponent","currentTab","setCurrentTab","value","onChange","_","tab","PolicyWizardComponent","App","uiFactory","dashboardModuleSetHandler","currentState","action","undefined","dashboardStateInit","DashboardReducerHandlerFactory","_currentState","_reducerFactory","processor","this","produce","draft","ApplicationReducers","combineReducers","dashboardReducerHandlerFactory","process","stateVar","SessionStorage","serializedState","sessionStorage","getItem","JSON","parse","e","stringify","setItem","persistedState","loadState","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","subscribe","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e9f48d9.chunk.js","sourcesContent":["import { Action } from \"redux\";\nimport { ReducerHandler } from \"../reducer.base\";\n\nexport enum DashboardModuleEnum {\n  PolicyEditor,\n  PolicyWizard,\n  ApplicationPreset,\n}\n\nexport type DashboardState = {\n  currentModule: DashboardModuleEnum;\n};\n\nexport interface DashboardAction\n  extends Action,\n    Partial<{ currentModule: DashboardModuleEnum }> {}\n\nexport type DashboardDispatch = (args: DashboardAction) => DashboardAction;\nexport type DashboardReducerHandler = ReducerHandler<\n  DashboardAction,\n  DashboardState\n>;\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 340;\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    console.log(theme.mixins.toolbar);\n    return createStyles({\n      root: {\n        display: \"flex\",\n      },\n      appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      title: {\n        flexGrow: 1,\n      },\n      appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      hide: {\n        display: \"none !important\",\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n      },\n      content: {\n        overflow: \"scroll\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create(\"margin\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n        maxWidth: \"100vw\",\n        maxHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n        minWidth: \"720px\",\n      },\n      contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n        maxWidth: `calc(100vw - ${drawerWidth}px)`,\n      },\n      nested: {\n        paddingLeft: theme.spacing(4),\n      },\n      nested2: {\n        paddingLeft: theme.spacing(8),\n      },\n      ellipsis: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n      },\n      sectionButtons: {\n        margin: theme.spacing(2),\n      },\n      hidden: {\n        display: \"none\",\n      },\n    });\n  },\n  { index: 1 }\n);\n","import { DashboardDispatch, DashboardState } from \"./dashboard.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../index\";\n\nexport const useDashboardDispatch = () => useDispatch<DashboardDispatch>();\nexport const useDashboardState: () => DashboardState = () =>\n  useSelector((state: ApplicationState) => state.dashboardState);\n","export const DASHBOARD_MODULE_SET = \"dashboard::module::set\";\n","import { DashboardAction, DashboardModuleEnum } from \"./dashboard.types\";\nimport { DASHBOARD_MODULE_SET } from \"../action-types\";\n\nexport function dashboardModuleSet(\n  currentModule: DashboardModuleEnum\n): Pick<DashboardAction, \"type\" | \"currentModule\"> {\n  return {\n    type: DASHBOARD_MODULE_SET,\n    currentModule,\n  };\n}\n","import { Business, ChevronRight } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction createLabel(hasSubmenu: boolean, text: string, icon: JSX.Element) {\n  return (\n    <React.Fragment>\n      <Box>\n        {icon}\n        <span style={{ verticalAlign: \"middle\" }}>{text}</span>\n        {hasSubmenu && <ChevronRight style={{ verticalAlign: \"middle\" }} />}\n      </Box>\n    </React.Fragment>\n  );\n}\n\nexport enum PolicyEditorPageEnum {\n  GeneralSettings,\n  BlockingSettings,\n}\n\nexport type PolicyEditorPageInfo = {\n  label: JSX.Element;\n  id: PolicyEditorPageEnum;\n};\n\nexport const TabsTree: PolicyEditorPageInfo[] = [\n  {\n    label: createLabel(true, \"General Settings\", <Business />),\n    id: PolicyEditorPageEnum.GeneralSettings,\n  },\n  {\n    label: createLabel(false, \"General Settings\", <Business />),\n    id: PolicyEditorPageEnum.BlockingSettings,\n  },\n];\n","import * as React from \"react\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {\n  Apps,\n  Assistant,\n  ChevronLeft,\n  Edit,\n  GetApp,\n  Share,\n} from \"@material-ui/icons\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n  useDashboardDispatch,\n  useDashboardState,\n} from \"../../store/dashboard/dashboard.hooks\";\nimport { DashboardModuleEnum } from \"../../store/dashboard/dashboard.types\";\nimport { dashboardModuleSet } from \"../../store/dashboard/dashboard.actions\";\nimport { Typography } from \"@material-ui/core\";\n\nexport type MainSidebarProps = Readonly<{ onDrawerClose: any }>;\n\nexport const MainSidebarComponent: React.FunctionComponent<MainSidebarProps> =\n  ({ onDrawerClose }) => {\n    const classes = useStyles();\n    const dispatch = useDashboardDispatch();\n    const state = useDashboardState();\n\n    return (\n      <React.Fragment>\n        <div className={classes.drawerHeader}>\n          <img\n            src=\"https://www.nginx.com/wp-content/uploads/2020/06/NGINX-Logo-White-Endorsement-RGB.svg\"\n            alt=\"Web Server Load Balancing with NGINX Plus\"\n            style={{ width: \"102px\" }}\n          />\n          <Typography style={{ width: \"50%\" }}>[Title]</Typography>\n          <IconButton onClick={onDrawerClose}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\n            {\n              text: \"Policy Editor\",\n              id: DashboardModuleEnum.PolicyEditor,\n              icon: <Edit />,\n              onClick: () => {\n                dispatch(dashboardModuleSet(DashboardModuleEnum.PolicyEditor));\n              },\n            },\n            {\n              text: \"Policy Wizard\",\n              id: DashboardModuleEnum.PolicyWizard,\n              icon: <Assistant />,\n              onClick: () => {\n                dispatch(dashboardModuleSet(DashboardModuleEnum.PolicyWizard));\n              },\n            },\n            {\n              text: \"Application Preset\",\n              id: DashboardModuleEnum.ApplicationPreset,\n              icon: <Apps />,\n              onClick: () => {\n                dispatch(\n                  dashboardModuleSet(DashboardModuleEnum.ApplicationPreset)\n                );\n              },\n            },\n          ].map(({ text, id, icon, onClick }, index) => (\n            <ListItem\n              button\n              key={index}\n              onClick={() => onClick()}\n              selected={id === state.currentModule}\n            >\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[\n            {\n              text: \"Download\",\n              icon: <GetApp />,\n              onClick: () => {},\n            },\n            {\n              text: \"Share\",\n              icon: <Share />,\n              onClick: () => {},\n            },\n          ].map(({ text, icon, onClick }, index) => (\n            <ListItem button key={index} onClick={() => onClick()}>\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  };\n","import * as React from \"react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { Toolbar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport type MainAppbarProps = Readonly<{\n  open: boolean;\n  onDrawerOpen: any;\n}>;\n\nexport const MainAppbarComponent: React.FunctionComponent<MainAppbarProps> = ({\n  open,\n  onDrawerOpen,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={onDrawerOpen}\n        edge=\"start\"\n        className={clsx(classes.menuButton, open && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" noWrap>\n        WAF Policy Editor\n      </Typography>\n    </Toolbar>\n  );\n};\n","import * as React from \"react\";\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport { useState } from \"react\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { MainSidebarComponent } from \"./main.sidebar.component\";\nimport { MainAppbarComponent } from \"./main.appbar.component\";\n\nexport const PolicyEditorDashboardComponent: React.FunctionComponent = ({\n  children,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const onDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const onDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <MainAppbarComponent onDrawerOpen={onDrawerOpen} open={open} />\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <MainSidebarComponent onDrawerClose={onDrawerClose} />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const ApplicationPresetComponent: React.VoidFunctionComponent = () => {\n  return <Typography>Application Preset is under development</Typography>;\n};\n","import withStyles from \"@material-ui/core/styles/withStyles\";\nimport { createStyles, Theme } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport * as React from \"react\";\n\nexport type EditorTabProps = {\n  label: JSX.Element;\n};\n\nexport const EditorTabsControl = withStyles((theme) =>\n  createStyles({\n    root: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    indicator: {\n      backgroundColor: theme.palette.primary.main,\n    },\n  })\n)(Tabs);\n\nexport const EditorTabControl = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textTransform: \"none\",\n      minWidth: 72,\n      fontWeight: theme.typography.fontWeightRegular,\n      marginRight: theme.spacing(4),\n      \"&:hover\": {\n        color: theme.palette.primary.main,\n        opacity: 1,\n      },\n      \"&$selected\": {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n      \"&:focus\": {\n        color: theme.palette.primary.main,\n      },\n    },\n    selected: {},\n  })\n)((props: EditorTabProps) => <Tab disableRipple {...props} />);\n","import * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { useState } from \"react\";\nimport { TabsTree } from \"./controls/policy-editor.tabs.tree\";\nimport {\n  EditorTabControl,\n  EditorTabsControl,\n} from \"./controls/policy-editor.tabs.control\";\n\nexport const PolicyEditorComponent: React.VoidFunctionComponent = () => {\n  const [currentTab, setCurrentTab] = useState<number>(0);\n\n  return (\n    <div>\n      <EditorTabsControl\n        value={currentTab}\n        onChange={(_, tab) => setCurrentTab(tab)}\n      >\n        {TabsTree.map(({ label, id }) => (\n          <EditorTabControl label={label} key={id} />\n        ))}\n      </EditorTabsControl>\n      <Box>\n        <Typography>Policy editor {currentTab}</Typography>\n      </Box>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const PolicyWizardComponent: React.VoidFunctionComponent = () => {\n  return <Typography>Policy Wizard is under development</Typography>;\n};\n","import React from \"react\";\nimport { PolicyEditorDashboardComponent } from \"./component/dashboard/policy-editor.dashboard.component\";\nimport { useDashboardState } from \"./store/dashboard/dashboard.hooks\";\nimport { DashboardModuleEnum } from \"./store/dashboard/dashboard.types\";\nimport { ApplicationPresetComponent } from \"./component/application-preset/application-preset.component\";\nimport { PolicyEditorComponent } from \"./component/policy-editor/policy-editor.component\";\nimport { PolicyWizardComponent } from \"./component/policy-wizard/policy-wizard.component\";\n\nfunction App() {\n  const { currentModule } = useDashboardState();\n\n  const uiFactory: { [key: number]: JSX.Element } = {\n    [DashboardModuleEnum.ApplicationPreset]: <ApplicationPresetComponent />,\n    [DashboardModuleEnum.PolicyEditor]: <PolicyEditorComponent />,\n    [DashboardModuleEnum.PolicyWizard]: <PolicyWizardComponent />,\n  };\n\n  return (\n    <PolicyEditorDashboardComponent>\n      {uiFactory[currentModule]}\n    </PolicyEditorDashboardComponent>\n  );\n}\n\nexport default App;\n","import {\n  DashboardAction,\n  DashboardReducerHandler,\n  DashboardState,\n} from \"../dashboard.types\";\nimport { Draft } from \"immer\";\n\nexport const dashboardModuleSetHandler: DashboardReducerHandler = (\n  currentState: Draft<DashboardState>,\n  action: DashboardAction\n) => {\n  if (action.currentModule === undefined) return currentState;\n\n  currentState.currentModule = action.currentModule;\n\n  return currentState;\n};\n","import {\n  DashboardAction,\n  DashboardModuleEnum,\n  DashboardState,\n} from \"./dashboard.types\";\nimport { ReducerBase } from \"../reducer.base\";\nimport { DASHBOARD_MODULE_SET } from \"../action-types\";\nimport { dashboardModuleSetHandler } from \"./handler/dashboard-module-set.handler\";\n\nexport function dashboardStateInit(): DashboardState {\n  return {\n    currentModule: DashboardModuleEnum.PolicyEditor,\n  };\n}\n\nclass DashboardReducerHandlerFactory extends ReducerBase<\n  DashboardAction,\n  DashboardState\n> {\n  constructor(state: DashboardState) {\n    super(state, {\n      [DASHBOARD_MODULE_SET]: dashboardModuleSetHandler,\n    });\n  }\n}\n\nexport const DashboardReducer = (\n  state: DashboardState = dashboardStateInit(),\n  action: DashboardAction\n): DashboardState => {\n  const dashboardReducerHandlerFactory = new DashboardReducerHandlerFactory(\n    state\n  );\n  return dashboardReducerHandlerFactory.process(action);\n};\n","import { Action } from \"redux\";\nimport produce, { Draft } from \"immer\";\n\nexport type ReducerHandler<\n  PolicyEditorAction extends Action,\n  PolicyEditorState\n> = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => Draft<PolicyEditorState>;\n\nexport abstract class ReducerBase<\n  PolicyEditorAction extends Action,\n  PolicyEditorState\n> {\n  protected constructor(\n    private _currentState: PolicyEditorState,\n    private _reducerFactory: {\n      [key: string]: ReducerHandler<PolicyEditorAction, PolicyEditorState>;\n    }\n  ) {}\n\n  process(action: PolicyEditorAction): PolicyEditorState {\n    const processor = this._reducerFactory[action.type];\n    if (!processor) return this._currentState;\n\n    return produce<PolicyEditorState>(this._currentState, (draft) =>\n      processor(draft, action)\n    );\n  }\n}\n","import { combineReducers, Reducer } from \"redux\";\nimport { DashboardState } from \"./dashboard/dashboard.types\";\nimport {\n  DashboardReducer,\n  dashboardStateInit,\n} from \"./dashboard/dashboard.reducer\";\n\nexport interface ApplicationState {\n  dashboardState: DashboardState;\n}\n\nexport const ApplicationReducers: Reducer<ApplicationState> =\n  combineReducers<ApplicationState>({\n    dashboardState: DashboardReducer,\n  });\n\nexport function DefaultApplicationState(): ApplicationState {\n  return {\n    dashboardState: dashboardStateInit(),\n  };\n}\n","import { ApplicationState, DefaultApplicationState } from \"../store\";\n\nconst stateVar = \"editor-state#0.1\";\n\nexport class SessionStorage {\n  loadState(): ApplicationState {\n    try {\n      const serializedState = sessionStorage.getItem(stateVar);\n      return JSON.parse(serializedState ? serializedState : \"\");\n    } catch (e) {\n      return DefaultApplicationState();\n    }\n  }\n\n  saveState(state: ApplicationState) {\n    try {\n      const serializedState = JSON.stringify(state);\n      sessionStorage.setItem(stateVar, serializedState);\n    } catch (e) {}\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { SessionStorage } from \"./storage/session.storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, Store } from \"redux\";\nimport { ApplicationReducers, ApplicationState } from \"./store\";\n\nconst sessionStorage = new SessionStorage();\nconst persistedState = sessionStorage.loadState();\n\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 });\n\nconst store: Store<ApplicationState> = createStore(\n  ApplicationReducers,\n  persistedState,\n  composeEnhancers()\n);\n\nstore.subscribe(() => {\n  sessionStorage.saveState(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}