{"version":3,"sources":["menu.js","helpers.js","general.js","blockingSettings.js","headers.js","config.js","index.js"],"names":["Menu","Nav","variant","className","activeKey","this","props","name","onClick","React","Component","MenuItem","Item","Link","eventKey","setToValue","obj","path","value","output","split","forEach","item","index","key","length","push","stringToPath","i","General","state","policy","e","Object","assign","create","getPrototypeOf","target","id","onChange","InputGroup","size","Prepend","Text","FormControl","type","handleChange","applicationLanguage","enforcementMode","template","BlockingSettings","bind","addViolation","removeViolation","checked","violations","find","v","getAllViolations","alarm","block","learn","splice","keys","Form","onRemove","ViolationsList","Dropdown","Toggle","map","violation","title","Violations","Table","striped","bordered","hover","Check","indexOf","Button","Headers","changeName","changeType","toggleMandatory","toggleCheckSignatures","toggleHtmlNormalization","toggleBase64","toggleAllowRepeatedOccurrences","addHeader","delHeader","delAllHeaders","headers","text","mandatory","checkSignatures","htmlNormalization","decodeValueAsBase64","allowRepeatedOccurrences","header","Header","add","del","delAll","HeadersList","toString","as","ButtonGroup","Config","visibleComponent","defaultPolicy","App","Policy","textArea","JSON","stringify","toPolicy","undefined","isValid","handleMenuClick","setState","isValidPolicy","parse","error","isJSON","itemName","Container","Row","Col","md","rows","cols","handleTextChange","style","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc955cb9.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default class Menu extends React.Component {\n    render() {\n        return (\n            <Nav variant=\"pills\" className=\"flex-column\" activeKey={this.props.activeKey}>\n                <MenuItem name=\"General\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Blocking Settings\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Signatures\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Headers\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Bot Defense\" onClick={this.props.onClick}></MenuItem>\n            </Nav>\n        );\n    }\n}\n\nclass MenuItem extends React.Component {\n    render() {\n        return (\n            <Nav.Item onClick={() => this.props.onClick(this.props.name)}>\n                <Nav.Link eventKey={this.props.name}>{this.props.name}</Nav.Link>\n            </Nav.Item>\n        );\n    }\n}","export default function setToValue(obj, path, value) {\n    var stringToPath = function (path) {\n        if (typeof path !== 'string') return path;\n        var output = [];\n        path.split('.').forEach(function (item, index) {\n            item.split(/\\[([^}]+)\\]/g).forEach(function (key) {\n                if (key.length > 0) {\n                    output.push(key);\n                }\n            });\n        });\n        return output;\n    };\n    path = stringToPath(path);\n    for (var i = 0; i < path.length - 1; i++) {\n        obj = obj[path[i]];\n    }\n    obj[path[path.length - 1]] = value;\n};\n\nexport function isJSON(text) {\n    if (typeof text !== \"string\") {\n        return false;\n    }\n    try {\n        JSON.parse(text);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}","import React from 'react';\nimport setToValue from './helpers.js';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport default class General extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            policy: this.props.policy,\n        };\n    }\n    handleChange(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n        setToValue(policy.policy, e.target.id, e.target.value);\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <h2>General Settings</h2>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Policy Name</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl type=\"text\"\n                        id=\"name\"\n                        value={this.props.policy.policy.name || \"\"}\n                        onChange={e => this.handleChange(e)} />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Application Language</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        id=\"applicationLanguage\"\n                        value={this.props.policy.policy.applicationLanguage || \"\"}\n                        onChange={e => this.handleChange(e)}\n                    />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Enforcement Mode</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        id=\"enforcementMode\"\n                        value={this.props.policy.policy.enforcementMode || \"\"}\n                        onChange={e => this.handleChange(e)}\n                    />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Template</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        id=\"template.name\"\n                        value={this.props.policy.policy?.template?.name || \"\"}\n                        onChange={e => this.handleChange(e)}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport setToValue from './helpers.js';\n\nexport default class BlockingSettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.addViolation = this.addViolation.bind(this);\n        this.removeViolation = this.removeViolation.bind(this);\n    }\n    handleChange(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n        setToValue(policy.policy, e.target.id, e.target.checked)\n        this.props.onChange(policy);\n    }\n    addViolation(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n\n        let violations = policy.policy?.[\"blocking-settings\"]?.violations || [];\n        if (!violations.find(v => v.name === e.target.id)) {\n            violations.push({\n                \"name\": e.target.id,\n                \"alarm\": this.props.policy.getAllViolations().find(v => v.name === e.target.id).alarm || false,\n                \"block\": this.props.policy.getAllViolations().find(v => v.name === e.target.id).block || false,\n                \"learn\": this.props.policy.getAllViolations().find(v => v.name === e.target.id).learn || false,\n            })\n        }\n        policy.policy[\"blocking-settings\"] = { \"violations\": violations };\n        this.props.onChange(policy);\n    }\n    removeViolation(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n        policy.policy.[\"blocking-settings\"].violations.splice(e.target.id, 1)\n        if (policy.policy.[\"blocking-settings\"].violations.length === 0) {\n            delete policy.policy.[\"blocking-settings\"].violations\n        }\n        if (Object.keys(policy.policy.[\"blocking-settings\"]).length === 0) {\n            delete policy.policy.[\"blocking-settings\"]\n        }\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <h2>Blocking Settings</h2>\n                <Form>\n                    <ViolationsList violations={this.props.policy.getAllViolations()} onClick={this.addViolation}></ViolationsList>\n                    <Violations policy={this.props.policy} onChange={this.handleChange} onRemove={this.removeViolation}></Violations>\n                </Form >\n            </div>\n        );\n    }\n}\n\nclass ViolationsList extends React.Component {\n    render() {\n        return (\n            <Dropdown className=\"mb-2\">\n                <Dropdown.Toggle id=\"dropdown-basic\">Violations</Dropdown.Toggle>\n                <Dropdown.Menu>\n                    {this.props.violations.map((violation) => (\n                        <Dropdown.Item key={violation.name} id={violation.name} onClick={this.props.onClick}>{violation.title}</Dropdown.Item>\n                    ))}\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n}\nclass Violations extends React.Component {\n    render() {\n        return (\n            <div>\n                <Table striped bordered hover size=\"sm\" className=\"text-center\">\n                    <thead>\n                        <tr>\n                            <th className=\"text-left\">Violation</th>\n                            <th >Alarm</th>\n                            <th>Block</th>\n                            <th>Learn</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.policy.policy?.[\"blocking-settings\"]?.violations?.map((violation) => (\n                            <tr key={violation.name}>\n                                <td className=\"text-left\">\n                                    {this.props.policy.getAllViolations().find(v => v.name === violation.name)?.title}\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={\"blocking-settings.violations[\" + this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation) + \"].alarm\"}\n                                        checked={violation.alarm || false}\n                                        onChange={e => this.props.onChange(e)}>\n                                    </Form.Check>\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        type=\"checkbox\"\n                                        id={\"blocking-settings.violations[\" + this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation) + \"].block\"}\n                                        checked={violation.block || false}\n                                        onChange={e => this.props.onChange(e)}>\n                                    </Form.Check>\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        type=\"checkbox\"\n                                        id={\"blocking-settings.violations[\" + this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation) + \"].learn\"}\n                                        checked={violation.learn || false}\n                                        onChange={e => this.props.onChange(e)}>\n                                    </Form.Check>\n                                </td>\n                                <td>\n                                    <Button size=\"sm\"\n                                        id={this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation)}\n                                        onClick={e => this.props.onRemove(e)}>\n                                        Remove\n                                        </Button>\n                                </td>\n                            </tr>\n                        ))\n                        }\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nimport { Header } from 'f5-waf-policy';\n\nexport default class Headers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.changeName = this.changeName.bind(this);\n        this.changeType = this.changeType.bind(this);\n        this.toggleMandatory = this.toggleMandatory.bind(this);\n        this.toggleCheckSignatures = this.toggleCheckSignatures.bind(this);\n        this.toggleHtmlNormalization = this.toggleHtmlNormalization.bind(this);\n        this.toggleBase64 = this.toggleBase64.bind(this);\n        this.toggleAllowRepeatedOccurrences = this.toggleAllowRepeatedOccurrences.bind(this);\n        this.addHeader = this.addHeader.bind(this);\n        this.delHeader = this.delHeader.bind(this);\n        this.delAllHeaders = this.delAllHeaders.bind(this);\n    }\n    changeName(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].name = e.target.value\n        this.props.onChange(policy);\n    }\n    changeType(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].type = e.target.text\n        this.props.onChange(policy);\n    }\n    toggleMandatory(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].mandatory = !policy.policy.headers.headers[e.target.id].mandatory\n        this.props.onChange(policy);\n    }\n    toggleCheckSignatures(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].checkSignatures = !policy.policy.headers.headers[e.target.id].checkSignatures\n        this.props.onChange(policy);\n    }\n    toggleHtmlNormalization(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].htmlNormalization = !policy.policy.headers.headers[e.target.id].htmlNormalization\n        this.props.onChange(policy);\n    }\n    toggleBase64(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].decodeValueAsBase64 = !policy.policy.headers.headers[e.target.id].decodeValueAsBase64\n        this.props.onChange(policy);\n    }\n    toggleAllowRepeatedOccurrences(e) {\n        const policy = this.props.policy\n        policy.policy.headers.headers[e.target.id].allowRepeatedOccurrences = !policy.policy.headers.headers[e.target.id].allowRepeatedOccurrences\n        this.props.onChange(policy);\n    }\n    addHeader(e) {\n        const policy = this.props.policy\n        let header = new Header()\n        policy.policy.headers.add(header)\n        this.props.onChange(policy);\n    }\n    delHeader(e) {\n        const policy = this.props.policy\n        policy.policy.headers.del(e.target.id)\n        this.props.onChange(policy);\n    }\n    delAllHeaders(e) {\n        const policy = this.props.policy\n        policy.policy.headers.delAll()\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <h2>Headers</h2>\n                <HeadersList\n                    policy={this.props.policy}\n                    changeName={this.changeName}\n                    changeType={this.changeType}\n                    toggleMandatory={this.toggleMandatory}\n                    toggleCheckSignatures={this.toggleCheckSignatures}\n                    toggleHtmlNormalization={this.toggleHtmlNormalization}\n                    toggleAllowRepeatedOccurrences={this.toggleAllowRepeatedOccurrences}\n                    toggleBase64={this.toggleBase64}\n                    addHeader={this.addHeader}\n                    delHeader={this.delHeader}\n                    delAllHeaders={this.delAllHeaders} />\n            </div>\n        );\n    }\n}\n\nclass HeadersList extends React.Component {\n    render() {\n        return (\n            <div>\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Header Name</th>\n                            <th>Type</th>\n                            <th>Mandatory</th>\n                            <th>Check Signatures</th>\n                            <th>Normalize HTML</th>\n                            <th>Decode Base64</th>\n                            <th>Allow Repeated</th>\n                            <th>\n                                <Button size=\"sm\" onClick={this.props.delAllHeaders}>\n                                    Remove\n                                </Button>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.policy.policy?.headers.headers?.map((header, index) => (\n                            <tr key={index} className=\"text-center\">\n                                <td>\n                                    <FormControl\n                                        id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                        onChange={e => this.props.changeName(e)}\n                                        size=\"sm\"\n                                        value={header.name} />\n                                </td>\n                                <td>\n                                    <Dropdown as={ButtonGroup} size=\"sm\">\n                                        <Dropdown.Toggle>{header.type}</Dropdown.Toggle>\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item\n                                                id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                                onClick={e => this.props.changeType(e)}>\n                                                explicit\n                                            </Dropdown.Item>\n                                            <Dropdown.Item\n                                                id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                                onClick={e => this.props.changeType(e)}>\n                                                wildcard\n                                            </Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                        onChange={e => this.props.toggleMandatory(e)}\n                                        checked={header.mandatory} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                        onChange={e => this.props.toggleCheckSignatures(e)}\n                                        checked={header.checkSignatures} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                        onChange={e => this.props.toggleHtmlNormalization(e)}\n                                        checked={header.htmlNormalization} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                        onChange={e => this.props.toggleBase64(e)}\n                                        checked={header.decodeValueAsBase64} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.policy.headers.headers.indexOf(header).toString()}\n                                        onChange={e => this.props.toggleAllowRepeatedOccurrences(e)}\n                                        checked={header.allowRepeatedOccurrences} />\n                                </td>\n                                <td>\n                                    <Button size=\"sm\" onClick={e => this.props.delHeader(e)}>\n                                        Remove\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <Button size=\"sm\" onClick={e => this.props.addHeader(e)}>\n                    Add Header\n                </Button>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport General from './general.js';\nimport BlockingSettings from './blockingSettings.js';\nimport Headers from './headers.js';\n\nexport default class Config extends React.Component {\n    render() {\n        return (\n            <div>\n                { this.props.visibleComponent === \"General\" && <General policy={this.props.policy} onChange={this.props.onChange}></General>}\n                { this.props.visibleComponent === \"Blocking Settings\" && <BlockingSettings policy={this.props.policy} onChange={this.props.onChange}></BlockingSettings>}\n                { this.props.visibleComponent === \"Headers\" && <Headers policy={this.props.policy} onChange={this.props.onChange}></Headers>}\n            </div >\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Menu from './menu.js';\nimport Config from './config.js';\nimport { Policy, isValidPolicy } from 'f5-waf-policy';\nimport { isJSON } from './helpers.js';\n\nconst defaultPolicy = {\n  \"policy\": {\n    \"name\": \"policy_name\",\n    \"template\": { \"name\": \"POLICY_TEMPLATE_NGINX_BASE\" },\n    \"applicationLanguage\": \"utf-8\",\n    \"enforcementMode\": \"blocking\"\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      policy: new Policy(defaultPolicy),\n      textArea: JSON.stringify(new Policy(defaultPolicy).toPolicy(), undefined, 4),\n      visibleComponent: \"General\",\n      isValid: new Policy(defaultPolicy).isValid()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n  }\n\n  handleChange(policy) {\n    this.setState((state) => ({\n      isValid: isValidPolicy(policy.toPolicy()),\n      policy: policy,\n      textArea: JSON.stringify(policy.toPolicy(), undefined, 4)\n    }));\n  }\n\n  handleTextChange(e) {\n    this.setState({\n      textArea: e.target.value\n    });\n    if (isJSON(e.target.value) && isValidPolicy(JSON.parse(e.target.value))) {\n      this.setState({\n        isValid: true,\n        policy: new Policy(JSON.parse(e.target.value))\n      });\n    } else {\n      this.setState({ isValid: false });\n    }\n  }\n\n  handleMenuClick(itemName) {\n    this.setState(() => {\n      return { visibleComponent: itemName };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Container>\n          <Row>\n            <Col>\n              <h1>NGINX App Protect Policy Editor</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"auto\">\n              <Menu onClick={this.handleMenuClick} activeKey={this.state.visibleComponent}></Menu>\n            </Col>\n            <Col>\n              <Config policy={this.state.policy} onChange={this.handleChange} visibleComponent={this.state.visibleComponent}></Config>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormControl as=\"textarea\"\n                value={this.state.textArea}\n                rows={20} cols={60}\n                onChange={e => this.handleTextChange(e)}\n                style={{ color: (this.state.isValid) ? \"green\" : \"red\" }} />\n            </Col>\n          </Row>\n        </Container>\n      </div >\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}