{"version":3,"sources":["menu.js","helpers.js","general.js","blockingSettings.js","config.js","index.js"],"names":["Menu","Nav","variant","className","activeKey","this","props","name","onClick","React","Component","MenuItem","Item","Link","eventKey","setToValue","obj","path","value","output","split","forEach","item","index","key","length","push","stringToPath","i","General","state","policy","e","Object","assign","create","getPrototypeOf","target","id","onChange","InputGroup","size","Prepend","Text","FormControl","type","handleChange","applicationLanguage","enforcementMode","template","BlockingSettings","bind","addViolation","removeViolation","checked","violations","find","v","getAllViolations","alarm","block","learn","splice","Form","onRemove","ViolationsList","Row","Dropdown","Toggle","map","violation","title","Violations","Col","Check","indexOf","Button","Config","visibleComponent","defaultPolicy","App","Policy","textArea","JSON","stringify","undefined","handleMenuClick","setState","toPolicy","text","parse","error","isJSON","itemName","Container","md","as","rows","cols","handleTextChange","style","color","isValid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23cf1b47.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default class Menu extends React.Component {\n    render() {\n        return (\n            <Nav variant=\"pills\" className=\"flex-column\" activeKey={this.props.activeKey}>\n                <MenuItem name=\"General\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Blocking Settings\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Signatures\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Headers\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Bot Defense\" onClick={this.props.onClick}></MenuItem>\n            </Nav>\n        );\n    }\n}\n\nclass MenuItem extends React.Component {\n    render() {\n        return (\n            <Nav.Item onClick={() => this.props.onClick(this.props.name)}>\n                <Nav.Link eventKey={this.props.name}>{this.props.name}</Nav.Link>\n            </Nav.Item>\n        );\n    }\n}","export default function setToValue(obj, path, value) {\n    var stringToPath = function (path) {\n        if (typeof path !== 'string') return path;\n        var output = [];\n        path.split('.').forEach(function (item, index) {\n            item.split(/\\[([^}]+)\\]/g).forEach(function (key) {\n                if (key.length > 0) {\n                    output.push(key);\n                }\n            });\n        });\n        return output;\n    };\n    path = stringToPath(path);\n    for (var i = 0; i < path.length - 1; i++) {\n        obj = obj[path[i]];\n    }\n    obj[path[path.length - 1]] = value;\n};\n\nexport function isJSON(text) {\n    if (typeof text !== \"string\") {\n        return false;\n    }\n    try {\n        JSON.parse(text);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}","import React from 'react';\nimport setToValue from './helpers.js';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport default class General extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            policy: this.props.policy,\n        };\n    }\n    handleChange(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n        setToValue(policy.policy, e.target.id, e.target.value);\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <h2>General Settings</h2>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Policy Name</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl type=\"text\"\n                        id=\"name\"\n                        value={this.props.policy.policy.name || \"\"}\n                        onChange={e => this.handleChange(e)} />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Application Language</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        id=\"applicationLanguage\"\n                        value={this.props.policy.policy.applicationLanguage || \"\"}\n                        onChange={e => this.handleChange(e)}\n                    />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Enforcement Mode</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        id=\"enforcementMode\"\n                        value={this.props.policy.policy.enforcementMode || \"\"}\n                        onChange={e => this.handleChange(e)}\n                    />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Template</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        id=\"template.name\"\n                        value={this.props.policy.policy?.template?.name || \"\"}\n                        onChange={e => this.handleChange(e)}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport setToValue from './helpers.js';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nexport default class BlockingSettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.addViolation = this.addViolation.bind(this);\n        this.removeViolation = this.removeViolation.bind(this);\n    }\n    handleChange(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n        setToValue(policy.policy, e.target.id, e.target.checked)\n        this.props.onChange(policy);\n    }\n    addViolation(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n\n        let violations = policy.policy?.[\"blocking-settings\"]?.violations || [];\n        if (!violations.find(v => v.name === e.target.id)) {\n            violations.push({\n                \"name\": e.target.id,\n                \"alarm\": this.props.policy.getAllViolations().find(v => v.name === e.target.id).alarm || false,\n                \"block\": this.props.policy.getAllViolations().find(v => v.name === e.target.id).block || false,\n                \"learn\": this.props.policy.getAllViolations().find(v => v.name === e.target.id).learn || false,\n            })\n        }\n        policy.policy[\"blocking-settings\"] = { \"violations\": violations };\n        this.props.onChange(policy);\n    }\n    removeViolation(e) {\n        let policy = Object.assign(Object.create(Object.getPrototypeOf(this.props.policy)), this.props.policy)\n        if (policy.policy.[\"blocking-settings\"].violations.length > 1) {\n            policy.policy.[\"blocking-settings\"].violations.splice(e.target.id, 1)\n        } else {\n            delete policy.policy.[\"blocking-settings\"]\n        }\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <h2>Blocking Settings</h2>\n                <Form>\n                    <ViolationsList violations={this.props.policy.getAllViolations()} onClick={this.addViolation}></ViolationsList>\n                    <Violations policy={this.props.policy} onChange={this.handleChange} onRemove={this.removeViolation}></Violations>\n                </Form >\n            </div>\n        );\n    }\n}\n\nclass ViolationsList extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Dropdown>\n                    <Dropdown.Toggle id=\"dropdown-basic\">Violations</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {this.props.violations.map((violation) => (\n                            <Dropdown.Item key={violation.name} id={violation.name} onClick={this.props.onClick}>{violation.title}</Dropdown.Item>\n                        ))}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </Row>\n        )\n    }\n}\nclass Violations extends React.Component {\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col>Violation</Col>\n                    <Col>Alarm</Col>\n                    <Col>Block</Col>\n                    <Col>Learn</Col>\n                    <Col></Col>\n                </Row>\n                {this.props.policy.policy?.[\"blocking-settings\"]?.violations?.map((violation) => (\n                    <Row key={violation.name}>\n                        <InputGroup size=\"sm\">\n                            <Col>\n                                {this.props.policy.getAllViolations().find(v => v.name === violation.name)?.title}\n                            </Col>\n                            <Col>\n                                <Form.Check\n                                    id={\"blocking-settings.violations[\" + this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation) + \"].alarm\"}\n                                    checked={violation.alarm || false}\n                                    onChange={e => this.props.onChange(e)}>\n                                </Form.Check>\n                            </Col>\n                            <Col>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id={\"blocking-settings.violations[\" + this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation) + \"].block\"}\n                                    checked={violation.block || false}\n                                    onChange={e => this.props.onChange(e)}>\n                                </Form.Check>\n                            </Col>\n                            <Col>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id={\"blocking-settings.violations[\" + this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation) + \"].learn\"}\n                                    checked={violation.learn || false}\n                                    onChange={e => this.props.onChange(e)}>\n                                </Form.Check>\n                            </Col>\n                            <Col>\n                                <Button size=\"sm\"\n                                    id={this.props.policy.policy[\"blocking-settings\"].violations.indexOf(violation)}\n                                    onClick={e => this.props.onRemove(e)}>\n                                    Remove\n                                </Button>\n                            </Col>\n                        </InputGroup>\n                    </Row>\n                ))\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport General from './general.js';\nimport BlockingSettings from './blockingSettings.js';\n\nexport default class Config extends React.Component {\n    render() {\n        return (\n            <div>\n                { this.props.visibleComponent === \"General\" && <General policy={this.props.policy} onChange={this.props.onChange}></General>}\n                { this.props.visibleComponent === \"Blocking Settings\" && <BlockingSettings policy={this.props.policy} onChange={this.props.onChange}></BlockingSettings>}\n            </div >\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Menu from './menu.js';\nimport Config from './config.js';\nimport Policy from 'f5-waf-policy';\nimport { isJSON } from './helpers.js';\n\nconst defaultPolicy = {\n  \"policy\": {\n    \"name\": \"policy_name\",\n    \"template\": { \"name\": \"POLICY_TEMPLATE_NGINX_BASE\" },\n    \"applicationLanguage\": \"utf-8\",\n    \"enforcementMode\": \"blocking\",\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      policy: new Policy(defaultPolicy),\n      textArea: JSON.stringify(new Policy(defaultPolicy), undefined, 4),\n      visibleComponent: \"General\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n  }\n\n  handleChange(policy) {\n    this.setState((state) => ({\n      policy: new Policy(policy),\n      textArea: JSON.stringify(policy.toPolicy(), undefined, 4)\n    }));\n  }\n\n  handleTextChange(e) {\n    this.setState(() => {\n      return { textArea: e.target.value };\n    });\n    if (isJSON(e.target.value)) {\n      this.setState(() => {\n        return { policy: new Policy(JSON.parse(e.target.value)) };\n      });\n    }\n  }\n\n  handleMenuClick(itemName) {\n    this.setState(() => {\n      return { visibleComponent: itemName };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Container>\n          <Row>\n            <Col>\n              <h1>NGINX App Protect Policy Configurator</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"auto\">\n              <Menu onClick={this.handleMenuClick} activeKey={this.state.visibleComponent}></Menu>\n            </Col>\n            <Col>\n              <Config policy={this.state.policy} onChange={this.handleChange} visibleComponent={this.state.visibleComponent}></Config>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormControl as=\"textarea\"\n                value={this.state.textArea}\n                rows={20} cols={60}\n                onChange={e => this.handleTextChange(e)}\n                style={{ color: (this.state.policy.isValid()) ? \"green\" : \"red\" }} />\n            </Col>\n          </Row>\n        </Container>\n      </div >\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}