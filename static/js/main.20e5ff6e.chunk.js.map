{"version":3,"sources":["menu.js","general.js","blockingSettings.js","headers.js","config.js","index.js","helpers.js"],"names":["Menu","Nav","variant","className","activeKey","this","props","name","onClick","React","Component","MenuItem","Item","Link","eventKey","General","state","policy","e","target","value","onChange","applicationLanguage","enforcementMode","template","InputGroup","size","Prepend","Text","FormControl","type","changeName","changeApplicationLanguage","changeEnforcementMode","changeTemplateName","BlockingSettings","ViolationsList","violation","getAllViolations","find","v","id","blockingSettings","violations","push","Dropdown","Toggle","map","addViolation","title","Violations","alarm","block","learn","splice","Table","striped","bordered","hover","Button","delAllViolations","index","Form","Check","toString","checked","toggleAlarm","toggleBlock","toggleLearn","delViolation","Headers","HeadersList","headers","text","mandatory","checkSignatures","htmlNormalization","decodeValueAsBase64","allowRepeatedOccurrences","header","Header","delAllHeaders","indexOf","as","ButtonGroup","changeType","toggleMandatory","toggleCheckSignatures","toggleHtmlNormalization","toggleBase64","toggleAllowRepeatedOccurrences","delHeader","addHeader","Config","visibleComponent","App","Policy","textArea","JSON","stringify","toPolicy","undefined","isValid","handleChange","bind","handleMenuClick","setState","isValidPolicy","parse","error","isJSON","itemName","Container","Row","Col","md","rows","cols","handleTextChange","style","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20e5ff6e.chunk.js","sourcesContent":["import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default class Menu extends React.Component {\n    render() {\n        return (\n            <Nav variant=\"pills\" className=\"flex-column\" activeKey={this.props.activeKey}>\n                <MenuItem name=\"General\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Blocking Settings\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Signatures\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Headers\" onClick={this.props.onClick}></MenuItem>\n                <MenuItem name=\"Bot Defense\" onClick={this.props.onClick}></MenuItem>\n            </Nav>\n        );\n    }\n}\n\nclass MenuItem extends React.Component {\n    render() {\n        return (\n            <Nav.Item onClick={() => this.props.onClick(this.props.name)}>\n                <Nav.Link eventKey={this.props.name}>{this.props.name}</Nav.Link>\n            </Nav.Item>\n        );\n    }\n}","import React from 'react';\n\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport default class General extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            policy: this.props.policy,\n        };\n    }\n    changeName(e) {\n        const policy = this.props.policy;\n        policy.name = e.target.value;\n        this.props.onChange(policy);\n    }\n    changeApplicationLanguage(e) {\n        const policy = this.props.policy;\n        policy.applicationLanguage = e.target.value;\n        this.props.onChange(policy);\n    }\n    changeEnforcementMode(e) {\n        const policy = this.props.policy;\n        policy.enforcementMode = e.target.value;\n        this.props.onChange(policy);\n    }\n    changeTemplateName(e) {\n        const policy = this.props.policy;\n        policy.template.name = e.target.value;\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <h2>General Settings</h2>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Policy Name</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl type=\"text\"\n                        value={this.props.policy.name}\n                        onChange={e => this.changeName(e)} />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Application Language</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        value={this.props.policy.applicationLanguage}\n                        onChange={e => this.changeApplicationLanguage(e)}\n                    />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Enforcement Mode</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        value={this.props.policy.enforcementMode}\n                        onChange={e => this.changeEnforcementMode(e)}\n                    />\n                </InputGroup>\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Template</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        value={this.props.policy?.template?.name}\n                        onChange={e => this.changeTemplateName(e)}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nexport default class BlockingSettings extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>Blocking Settings</h2>\n                <ViolationsList\n                    policy={this.props.policy}\n                    onChange={this.props.onChange}>\n                </ViolationsList>\n                <Violations\n                    policy={this.props.policy}\n                    onChange={this.props.onChange}>\n                </Violations>\n            </div>\n        );\n    }\n}\n\nclass ViolationsList extends React.Component {\n    addViolation(e) {\n        const policy = this.props.policy;\n        const violation = policy.getAllViolations().find(v => v.name === e.target.id);\n        policy.blockingSettings.violations.push(violation);\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <Dropdown className=\"mb-2\">\n                <Dropdown.Toggle id=\"dropdown-basic\">Violations</Dropdown.Toggle>\n                <Dropdown.Menu>\n                    {this.props.policy.getAllViolations().map((violation) => (\n                        <Dropdown.Item key={violation.name} id={violation.name} onClick={e => this.addViolation(e)}>{violation.title}</Dropdown.Item>\n                    ))}\n                </Dropdown.Menu>\n            </Dropdown>\n        )\n    }\n}\nclass Violations extends React.Component {\n    toggleAlarm(e) {\n        const policy = this.props.policy;\n        policy.blockingSettings.violations[e.target.id].alarm = !policy.blockingSettings.violations[e.target.id].alarm\n        this.props.onChange(policy);\n    }\n    toggleBlock(e) {\n        const policy = this.props.policy;\n        policy.blockingSettings.violations[e.target.id].block = !policy.blockingSettings.violations[e.target.id].block\n        this.props.onChange(policy);\n    }\n    toggleLearn(e) {\n        const policy = this.props.policy;\n        policy.blockingSettings.violations[e.target.id].learn = !policy.blockingSettings.violations[e.target.id].learn\n        this.props.onChange(policy);\n    }\n    delViolation(e) {\n        const policy = this.props.policy;\n        policy.blockingSettings.violations.splice(e.target.id)\n        this.props.onChange(policy);\n    }\n    delAllViolations(e) {\n        const policy = this.props.policy;\n        policy.blockingSettings.violations = [];\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <Table striped bordered hover size=\"sm\" className=\"text-center\">\n                    <thead>\n                        <tr>\n                            <th className=\"text-left\">Violation</th>\n                            <th >Alarm</th>\n                            <th>Block</th>\n                            <th>Learn</th>\n                            <th>\n                                <Button size=\"sm\" onClick={e => this.delAllViolations(e)}>\n                                    Remove\n                                </Button>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.policy.blockingSettings.violations?.map((violation, index) => (\n                            <tr key={violation.name}>\n                                <td className=\"text-left\">\n                                    {violation.title}\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={index.toString()}\n                                        checked={violation.alarm || false}\n                                        onChange={e => this.toggleAlarm(e)}>\n                                    </Form.Check>\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        type=\"checkbox\"\n                                        id={index.toString()}\n                                        checked={violation.block || false}\n                                        onChange={e => this.toggleBlock(e)}>\n                                    </Form.Check>\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        type=\"checkbox\"\n                                        id={index.toString()}\n                                        checked={violation.learn || false}\n                                        onChange={e => this.toggleLearn(e)}>\n                                    </Form.Check>\n                                </td>\n                                <td>\n                                    <Button size=\"sm\"\n                                        id={index.toString()}\n                                        onClick={e => this.delViolation(e)}>\n                                        Remove\n                                        </Button>\n                                </td>\n                            </tr>\n                        ))\n                        }\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nimport { Header } from 'f5-waf-policy';\n\nexport default class Headers extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>Headers</h2>\n                <HeadersList\n                    policy={this.props.policy}\n                    onChange={this.props.onChange} />\n            </div>\n        );\n    }\n}\n\nclass HeadersList extends React.Component {\n    changeName(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].name = e.target.value;\n        this.props.onChange(policy);\n    }\n    changeType(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].type = e.target.text;\n        this.props.onChange(policy);\n    }\n    toggleMandatory(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].mandatory = !policy.headers[e.target.id].mandatory;\n        this.props.onChange(policy);\n    }\n    toggleCheckSignatures(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].checkSignatures = !policy.headers[e.target.id].checkSignatures;\n        this.props.onChange(policy);\n    }\n    toggleHtmlNormalization(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].htmlNormalization = !policy.headers[e.target.id].htmlNormalization;\n        this.props.onChange(policy);\n    }\n    toggleBase64(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].decodeValueAsBase64 = !policy.headers[e.target.id].decodeValueAsBase64;\n        this.props.onChange(policy);\n    }\n    toggleAllowRepeatedOccurrences(e) {\n        const policy = this.props.policy;\n        policy.headers[e.target.id].allowRepeatedOccurrences = !policy.headers[e.target.id].allowRepeatedOccurrences;\n        this.props.onChange(policy);\n    }\n    addHeader(e) {\n        const policy = this.props.policy;\n        let header = new Header();\n        policy.headers.push(header);\n        this.props.onChange(policy);\n    }\n    delHeader(e) {\n        const policy = this.props.policy;\n        policy.headers.splice(e.target.id, 1);\n        this.props.onChange(policy);\n    }\n    delAllHeaders(e) {\n        const policy = this.props.policy;\n        policy.headers = [];\n        this.props.onChange(policy);\n    }\n    render() {\n        return (\n            <div>\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Header Name</th>\n                            <th>Type</th>\n                            <th>Mandatory</th>\n                            <th>Check Signatures</th>\n                            <th>Normalize HTML</th>\n                            <th>Decode Base64</th>\n                            <th>Allow Repeated</th>\n                            <th>\n                                <Button size=\"sm\" onClick={this.props.delAllHeaders}>\n                                    Remove\n                                </Button>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.policy?.headers?.map((header, index) => (\n                            <tr key={index} className=\"text-center\">\n                                <td>\n                                    <FormControl\n                                        id={this.props.policy.headers.indexOf(header).toString()}\n                                        onChange={e => this.changeName(e)}\n                                        size=\"sm\"\n                                        value={header.name} />\n                                </td>\n                                <td>\n                                    <Dropdown as={ButtonGroup} size=\"sm\">\n                                        <Dropdown.Toggle>{header.type}</Dropdown.Toggle>\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item\n                                                id={this.props.policy.headers.indexOf(header).toString()}\n                                                onClick={e => this.changeType(e)}>\n                                                explicit\n                                            </Dropdown.Item>\n                                            <Dropdown.Item\n                                                id={this.props.policy.headers.indexOf(header).toString()}\n                                                onClick={e => this.changeType(e)}>\n                                                wildcard\n                                            </Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.headers.indexOf(header).toString()}\n                                        onChange={e => this.toggleMandatory(e)}\n                                        checked={header.mandatory} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.headers.indexOf(header).toString()}\n                                        onChange={e => this.toggleCheckSignatures(e)}\n                                        checked={header.checkSignatures} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.headers.indexOf(header).toString()}\n                                        onChange={e => this.toggleHtmlNormalization(e)}\n                                        checked={header.htmlNormalization} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.headers.indexOf(header).toString()}\n                                        onChange={e => this.toggleBase64(e)}\n                                        checked={header.decodeValueAsBase64} />\n                                </td>\n                                <td>\n                                    <Form.Check\n                                        id={this.props.policy.headers.indexOf(header).toString()}\n                                        onChange={e => this.toggleAllowRepeatedOccurrences(e)}\n                                        checked={header.allowRepeatedOccurrences} />\n                                </td>\n                                <td>\n                                    <Button size=\"sm\" onClick={e => this.delHeader(e)}>\n                                        Remove\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <Button size=\"sm\" onClick={e => this.addHeader(e)}>\n                    Add Header\n                </Button>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport General from './general.js';\nimport BlockingSettings from './blockingSettings.js';\nimport Headers from './headers.js';\n\nexport default class Config extends React.Component {\n    render() {\n        return (\n            <div>\n                { this.props.visibleComponent === \"General\" && <General policy={this.props.policy} onChange={this.props.onChange}></General>}\n                { this.props.visibleComponent === \"Blocking Settings\" && <BlockingSettings policy={this.props.policy} onChange={this.props.onChange}></BlockingSettings>}\n                { this.props.visibleComponent === \"Headers\" && <Headers policy={this.props.policy} onChange={this.props.onChange}></Headers>}\n            </div >\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Menu from './menu.js';\nimport Config from './config.js';\nimport { Policy, isValidPolicy } from 'f5-waf-policy';\nimport { isJSON } from './helpers.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      policy: new Policy(),\n      textArea: JSON.stringify(new Policy().toPolicy(), undefined, 4),\n      visibleComponent: \"General\",\n      isValid: new Policy().isValid()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n  }\n\n  handleChange(policy) {\n    this.setState((state) => ({\n      isValid: isValidPolicy(policy.toPolicy()),\n      policy: policy,\n      textArea: JSON.stringify(policy.toPolicy(), undefined, 4)\n    }));\n  }\n\n  handleTextChange(e) {\n    this.setState({\n      textArea: e.target.value\n    });\n    if (isJSON(e.target.value) && isValidPolicy(JSON.parse(e.target.value))) {\n      this.setState({\n        isValid: true,\n        policy: new Policy(JSON.parse(e.target.value))\n      });\n    } else {\n      this.setState({ isValid: false });\n    }\n  }\n\n  handleMenuClick(itemName) {\n    this.setState(() => {\n      return { visibleComponent: itemName };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Container>\n          <Row>\n            <Col>\n              <h1>NGINX App Protect Policy Editor</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"auto\">\n              <Menu onClick={this.handleMenuClick} activeKey={this.state.visibleComponent}></Menu>\n            </Col>\n            <Col>\n              <Config policy={this.state.policy} onChange={this.handleChange} visibleComponent={this.state.visibleComponent}></Config>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormControl as=\"textarea\"\n                value={this.state.textArea}\n                rows={20} cols={60}\n                onChange={e => this.handleTextChange(e)}\n                style={{ color: (this.state.isValid) ? \"green\" : \"red\" }} />\n            </Col>\n          </Row>\n        </Container>\n      </div >\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);","export default function setToValue(obj, path, value) {\n    var stringToPath = function (path) {\n        if (typeof path !== 'string') return path;\n        var output = [];\n        path.split('.').forEach(function (item, index) {\n            item.split(/\\[([^}]+)\\]/g).forEach(function (key) {\n                if (key.length > 0) {\n                    output.push(key);\n                }\n            });\n        });\n        return output;\n    };\n    path = stringToPath(path);\n    for (var i = 0; i < path.length - 1; i++) {\n        obj = obj[path[i]];\n    }\n    obj[path[path.length - 1]] = value;\n};\n\nexport function isJSON(text) {\n    if (typeof text !== \"string\") {\n        return false;\n    }\n    try {\n        JSON.parse(text);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}"],"sourceRoot":""}