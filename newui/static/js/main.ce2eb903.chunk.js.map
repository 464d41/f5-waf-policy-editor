{"version":3,"sources":["store/dashboard/dashboard.types.ts","utils/styles.hook.ts","store/action-types.ts","store/dashboard/dashboard.hooks.ts","component/dashboard/module-selection.menu.tsx","store/dashboard/dashboard.actions.ts","store/policy-editor/policy-editor.actions.ts","store/policy-editor/policy-editor.hooks.ts","store/policy-editor/policy-editor.types.ts","resources/policy-editor-sidebar-menu-icons/general-settings.svg","resources/policy-editor-sidebar-menu-icons/block-settings.svg","resources/policy-editor-sidebar-menu-icons/request-response.svg","resources/policy-editor-sidebar-menu-icons/signature-based.svg","resources/policy-editor-sidebar-menu-icons/advanced-settings.svg","resources/toolbar/download.svg","component/policy-editor/model/policy-editor.menu.pages.model.tsx","component/dashboard/policy-editor.sidebar.pages.component.tsx","component/dashboard/policy-editor.sidebar.component.tsx","component/dashboard/main.sidebar.component.tsx","utils/download.util.ts","resources/toolbar/link.svg","resources/toolbar/share.svg","component/dashboard/main.appbar.component.tsx","component/dashboard/policy-editor.dashboard.component.tsx","component/application-preset/policy-templates.component.tsx","component/policy-editor/controls/field-control/error.field-control-adornment.tsx","component/policy-editor/controls/grid.field-value.control.tsx","store/policy-editor/visitor/interface/base.visitor.ts","model/policy-schema/policy.definitions.ts","resources/img/no-data.svg","model/policy-editor.defaults.model.ts","component/policy-editor/controls/field-control/drop-list.field-control.tsx","component/policy-editor/controls/field-control/checkbox.field-control.tsx","component/policy-editor/controls/field-control/text-edit.field-control.tsx","component/policy-editor/controls/field-control/label.field-control.tsx","store/policy-editor/visitor/base/table-field-value.factory.ts","store/policy-editor/visitor/imp/general-settings.visitor.ts","component/policy-editor/pages/general-settings.page.tsx","component/policy-editor/dialogs/advanced-settings.dialog.tsx","component/policy-editor/controls/no-data.control.tsx","component/policy-editor/controls/grid.table-value.control.tsx","model/policy-schema/policy-schema.service.ts","store/policy-editor/visitor/base/visitor-factory.base.ts","store/policy-editor/visitor/imp/methods-field.factory.ts","store/policy-editor/visitor/factory/interface/base.field-resolver-visitor-factory.ts","component/policy-editor/controls/field-control/number-edit.field-control.tsx","store/policy-editor/visitor/base/grid-field-value.factory.ts","store/policy-editor/visitor/imp/methods-field.resolver.ts","store/policy-editor/visitor/factory/default-values.factory.ts","store/policy-editor/visitor/factory/imp/methods.visitor-factory.ts","component/policy-editor/controls/page-controls/content.page-control.tsx","component/policy-editor/controls/page-controls/toolbar.page-control.tsx","component/policy-editor/controls/page-controls/toolbar-button.page-control.tsx","component/policy-editor/pages/methods.page.tsx","store/policy-editor/visitor/imp/urls-field.factory.ts","store/policy-editor/visitor/services/policy-json.field-remover.ts","store/policy-editor/visitor/imp/urls-field.resolver.ts","store/policy-editor/visitor/factory/imp/urls.visitor-factory.ts","store/policy-editor/visitor/services/policy-json.reorder.services.ts","component/policy-editor/pages/urls.page.tsx","store/policy-editor/visitor/imp/file-types-field.factory.ts","store/policy-editor/visitor/imp/file-types-field.resolver.ts","store/policy-editor/visitor/factory/imp/file-types.visitor-factory.ts","component/policy-editor/pages/file-types.page.tsx","store/policy-editor/visitor/imp/headers-field.factory.ts","store/policy-editor/visitor/imp/headers-field.resolver.ts","store/policy-editor/visitor/factory/imp/headers.visitor-factory.ts","component/policy-editor/pages/headers.page.tsx","store/policy-editor/visitor/imp/parameters-field.factory.ts","store/policy-editor/visitor/imp/parameters-field.resolver.ts","store/policy-editor/visitor/factory/imp/parameters.visitor-factory.ts","component/policy-editor/pages/parameters.page.tsx","store/policy-editor/visitor/imp/open-api-field.factory.ts","store/policy-editor/visitor/imp/open-api-field.resolver.ts","store/policy-editor/visitor/factory/imp/open-api.visitor-factory.ts","component/policy-editor/pages/open-api.page.tsx","store/policy-editor/visitor/imp/evasions-field.factory.ts","store/policy-editor/visitor/imp/evasions-field.resolver.ts","store/policy-editor/visitor/factory/imp/evasions.visitor-factory.ts","component/policy-editor/controls/menu-search-popup.control.tsx","component/policy-editor/pages/blocking-settings/evasions.page.tsx","store/policy-editor/visitor/imp/http-protocols-field.factory.ts","store/policy-editor/visitor/imp/http-protocols-field.resolver.ts","store/policy-editor/visitor/factory/imp/http-protocols.visitor-factory.ts","component/policy-editor/pages/blocking-settings/http-protocols.page.tsx","model/nginx-const/violations.nginx-const.ts","store/policy-editor/visitor/imp/server-technologies-field.factory.ts","store/policy-editor/visitor/imp/server-technologies-field.resolver.ts","store/policy-editor/visitor/factory/imp/server-technologies.visitor-factory.ts","component/policy-editor/pages/server-technologies.page.tsx","store/policy-editor/visitor/imp/signature-sets-field.factory.ts","store/policy-editor/visitor/imp/signature-sets-field.resolver.ts","store/policy-editor/visitor/factory/imp/signature-sets.visitor-factory.ts","model/nginx-const/signature-sets.nginx-const.ts","component/policy-editor/pages/signatures/signature-sets.page.tsx","resources/toolbar/deploy.svg","store/policy-editor/visitor/imp/signatures-field.factory.ts","store/policy-editor/visitor/imp/signatures-field.resolver.ts","store/policy-editor/visitor/factory/imp/signatures.visitor-factory.ts","component/policy-editor/pages/signatures/signatures.page.tsx","store/policy-editor/visitor/imp/violations-field.factory.ts","store/policy-editor/visitor/imp/violations-field.resolver.ts","store/policy-editor/visitor/factory/imp/violations.visitor-factory.ts","component/policy-editor/pages/blocking-settings/violations.page.tsx","store/policy-editor/visitor/imp/bot-defense.browsers.factory.ts","store/policy-editor/visitor/base/field-resolver-visitor.factory.ts","store/policy-editor/visitor/imp/bot-defense.browsers.resolver.ts","store/policy-editor/visitor/factory/imp/bot-defense.browsers.visitor-factory.ts","component/policy-editor/controls/grid-value-page.control.tsx","component/policy-editor/pages/bot-defense/bot-defense.mitigations.browsers.page.tsx","store/policy-editor/visitor/imp/bot-defense.settings.visitor.ts","component/policy-editor/pages/bot-defense/bot-defense.settings.page.tsx","store/policy-editor/visitor/imp/bot-defense.anomalies.factory.ts","store/policy-editor/visitor/imp/bot-defense.anomalies.resolver.ts","store/policy-editor/visitor/factory/imp/bot-defense.anomalies.visitor-factory.ts","component/policy-editor/pages/bot-defense/bot-defense.mitigations.anomalies.page.tsx","store/policy-editor/visitor/imp/bot-defense.classes.factory.ts","store/policy-editor/visitor/imp/bot-defense.classes.resolver.ts","store/policy-editor/visitor/factory/imp/bot-defense.classes.visitor-factory.ts","component/policy-editor/pages/bot-defense/bot-defense.mitigations.classes.page.tsx","store/policy-editor/visitor/imp/bot-defense.signatures.factory.ts","store/policy-editor/visitor/imp/bot-defense.signatures.resolver.ts","store/policy-editor/visitor/factory/imp/bot-defense.signatures.visitor-factory.ts","component/policy-editor/pages/bot-defense/bot-defense.mitigations.signatures.page.tsx","store/policy-editor/visitor/imp/custom-xff-headers.factory.ts","store/policy-editor/visitor/imp/custom-xff-headers.resolver.ts","store/policy-editor/visitor/factory/imp/custom-xff-headers.visitor-factory.ts","component/policy-editor/pages/custom-xff-headers.page.tsx","store/policy-editor/visitor/imp/response-codes.factory.ts","store/policy-editor/visitor/imp/response-codes.resolver.ts","store/policy-editor/visitor/factory/imp/response-codes.visitor-factory.ts","model/nginx-const/response-codes.const.ts","component/policy-editor/pages/allowed-response-codes.page.tsx","store/policy-editor/visitor/imp/whitelist-ip.factory.ts","store/policy-editor/visitor/imp/whitelist-ip.resolver.ts","store/policy-editor/visitor/factory/imp/whitelist-ip.visitor-factory.ts","component/policy-editor/pages/whitelist-ips.page.tsx","store/policy-editor/visitor/imp/hostnames.factory.ts","store/policy-editor/visitor/imp/hostnames.resolver.ts","store/policy-editor/visitor/factory/imp/hostnames.visitor-factory.ts","component/policy-editor/pages/host-names.page.tsx","store/policy-editor/visitor/imp/data-guard.enforcementUrls.factory.ts","store/policy-editor/visitor/imp/data-guard.enforcementUrls.resolver.ts","store/policy-editor/visitor/factory/imp/data-guard.enforcementUrls.visitor-factory.ts","component/policy-editor/pages/data-guard/data-guard.enforcement-urls.page.tsx","store/policy-editor/visitor/imp/data-guard.visitor.ts","component/policy-editor/pages/data-guard/data-guard.settings.page.tsx","store/policy-editor/visitor/imp/csrf-protection.visitor.ts","component/policy-editor/pages/csrf-protection.page.tsx","store/policy-editor/visitor/imp/csrf-urls-field.factory.ts","store/policy-editor/visitor/imp/csrf-urls-field.resolver.ts","store/policy-editor/visitor/factory/imp/csrf-urls.visitor-factory.ts","component/policy-editor/pages/csrf-urls.page.tsx","store/policy-editor/visitor/imp/cookie-settings.visitor.ts","component/policy-editor/pages/cookie-settings.page.tsx","store/policy-editor/visitor/imp/cookies-field.factory.ts","store/policy-editor/visitor/imp/cookies-field.resolver.ts","store/policy-editor/visitor/factory/imp/cookies-field.visitor-factory.ts","component/policy-editor/pages/cookies.page.tsx","component/policy-editor/controls/policy-editor.page.factory.tsx","component/policy-editor/controls/curren-policy.control.tsx","component/policy-editor/policy-editor.component.tsx","component/policy-wizard/policy-wizard.component.tsx","store/policy-editor/visitor/services/policy-editor-preprocessor.services.ts","App.tsx","store/reducer.base.ts","store/dashboard/handler/dashboard-module-set.handler.ts","store/dashboard/dashboard.reducer.ts","store/policy-editor/handler/policyeditor-page-set.handler.ts","model/json-validate/policy.validator.ts","store/policy-editor/handler/policyeditor-jsontext-set.handler.ts","store/policy-editor/handler/policyeditor-json-visit.handler.ts","store/policy-editor/handler/policyeditor-jsonsrc-set.handler.ts","store/policy-editor/handler/policyeditor-default-policy-set.handler.ts","store/policy-editor/policy-editor.reducer.ts","store/index.ts","storage/session.storage.ts","index.tsx"],"names":["DashboardModuleEnum","drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","title","flexGrow","headerToolbar","minHeight","headerCategory","fontSize","lineHeight","color","headerPage","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","footer","top","bottom","textAlign","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","overflow","maxWidth","minWidth","contentShift","nested","paddingLeft","nested2","ellipsis","textOverflow","sectionButtons","margin","hidden","pageContent","height","menuGroup","palette","primary","main","textTransform","editorContainer","maxHeight","index","DASHBOARD_MODULE_SET","POLICY_EDITOR_PAGE_SET","POLICY_EDITOR_JSON_TEXT_SET","POLICY_EDITOR_JSON_SRC_SET","POLICY_EDITOR_JSON_VISIT","POLICY_EDITOR_UI_SHOW_DEFAULT_POLICY_SET","useDashboardState","useSelector","state","dashboardState","MenuItemIcon","withStyles","ListItemIcon","ModuleSelectionMenu","dispatch","useDispatch","FormControl","fullWidth","Select","inputProps","sx","value","currentModule","onChange","e","target","type","text","id","PolicyEditor","icon","Edit","PolicyWizard","Assistant","PolicyTemplates","Apps","map","MenuItem","style","ListItemText","disableTypography","policyEditorJsonTextSet","strPolicy","policyEditorJsonVisit","visitor","policyEditorJsonSrcSet","url","policySrcUrl","PolicyEditorPageEnum","_path","_path2","usePolicyEditorDispatch","usePolicyEditorState","policyEditorState","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGeneralSettings","_ref","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","stroke","strokeLinecap","strokeLinejoin","ForwardRef","SvgBlockSettings","_path3","_path4","_path5","_path6","SvgRequestResponse","SvgSignatureBased","SvgAdvancedSettings","PolicyEditorMenuPagesModel","label","pages","Hostnames","CustomXffHeaders","BlockingSettings","OpenAPI","WhitelistIp","EnforceCookieSettings","Violations","Evasions","HttpProtocols","Methods","URLs","Parameters","Filetypes","Headers","AllowedResponseCodes","SignaturesSets","SignaturesPolicy","ServerTechnologies","BotDefense","Csrf","DataGuard","ListItemMenu","paddingTop","paddingBottom","backgroundColor","selected","borderRight","ListItem","ListItemMenuText","ListMenu","List","PolicyEditorSidebarPagesComponent","tabsTree","styles","currentPage","menu","t","Fragment","className","p","pageIndex","button","onClick","currentTab","policyEditorPageSet","PolicyEditorSidebarComponent","showDefaultPolicy","paddingRight","TextField","InputProps","startAdornment","InputAdornment","position","Search","placeholder","FormControlLabel","labelPlacement","control","Switch","checked","show","MainSidebarComponent","onDrawerClose","classes","additionalSidebar","download","filename","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","SvgDownload","strokeWidth","SvgLink","SvgShare","MainAppbarComponent","open","onDrawerOpen","strCurrentPolicy","pageInfo","rValue","category","name","some","c","pageInfoById","Toolbar","IconButton","aria-label","edge","clsx","size","Typography","href","rel","date","Date","getTime","disabled","PolicyEditorDashboardComponent","children","useState","setOpen","CssBaseline","AppBar","Drawer","variant","anchor","paper","StyledTableRow","action","hover","TableRow","PolicyTemplatesComponent","TableContainer","component","Box","Table","TableBody","app","description","ghLink","wafflerLink","item","TableCell","undefined","HtmlTooltip","tooltip","typography","pxToRem","border","Tooltip","ErrorText","ErrorFieldControlAdornment","errorMessage","cursor","GridFieldValueControl","rows","selectedIndex","setSelectedIndex","jsonValidationErrors","Grid","container","xs","row","error","filter","x","errorPath","find","err","property","hasError","message","controlInfo","createControl","hiddenLabel","onSelect","onBlur","BaseVisitor","json","useVisitor","TVisitor","jsonCurrentPolicy","ApplicationLanguage","EvasionDescription","HTTPProtocolDescription","WebServicesSecurityDescription","ClassAction","ClassName","CAPTCHABypassCriteriaAction","ClientSideIntegrityBypassCriteriaAction","DetectionCriteriaAction","LeakedCredentialsCriteriaAction","LoginAttemptsFromTheSameDeviceIDAction","LoginAttemptsFromTheSameUserAction","PreventionDurationEnum","AllowRenderingInFrames","AllowOriginsEnforcementMode","OriginPortEnum","OriginProtocol","PurpleEnforcementMode","URLMethod","MethodOverrideMethod","URLProtocol","HostNameTypeEnum","HeaderOrderEnum","URLContentProfileType","ArraySerializationFormat","DataType","Level","ObjectSerializationStyle","ParameterLocation","ValueType","CharacterSetType","MaximumCookieHeaderLengthEnum","EnforcementType","InsertSameSiteAttribute","ExpirationTime","EnforcementAction","CSRFURLMethod","RequiredParameters","DataGuardEnforcementMode","FileContentDetectionFormatName","UserSource","DisabledActionItemType","CountryName","PolicyEnforcementMode","PathParameterHandling","TriggerASMIruleEvent","Category","IPIntelligenceCategoryDescription","AuthenticationType","ActAsMethod","MicroserviceEnforcementMode","Frequency","LearningMode","Mode","LearnExplicitCookies","LearnExplicit","ParameterLearningLevel","LearnExplicitRedirectionDomains","LearnExplicitWebsocketUrls","Field","FormatType","AjaxActionType","ResponseActionType","ResponsePageType","URLBlockingMode","UserNameSource","SessionTrackingStatusAction","ExpirationDatetime","Scope","Filter","Value","HasCve","LastUpdatedFilter","SignatureType","TagFilter","SignatureSetType","AttackSignatureFalsePositiveMode","MinimumAccuracyForAutoAddedSignatures","InPolicy","PolicyType","TriggerEvent","Extension","FluffyEnforcementMode","WebsocketURLProtocol","BlockRequests","ApplyTo","EncryptedPart","EncryptionAlgorithm","KeyTransportAlgorithm","ResponseAction","RoleEnum","SignatureAlgorithm","a","typ","arrayItems","u","typs","unionMembers","o","additional","r","js","_path7","_path8","_path9","_path10","_path11","_path12","_path13","defaultGeneralSettings","order","policy","template","applicationLanguage","enforcementMode","defaultBlockingSettingsViolations","block","alarm","defaultMethods","defaultUrls","wildcardOrder","method","protocol","attackSignaturesCheck","metacharsOnUrlCheck","defaultCsrfUrl","csrfUrl","enforcementAction","None","Any","defaultFileTypes","allowed","checkUrlLength","urlLength","checkQueryStringLength","queryStringLength","checkPostDataLength","postDataLength","checkRequestLength","requestLength","responseCheck","defaultHeaders","decodeValueAsBase64","htmlNormalization","mandatory","allowRepeatedOccurrences","checkSignatures","defaultParameters","level","parameterLocation","valueType","allowEmptyValue","checkMaxValueLength","allowRepeatedParameterName","sensitiveParameter","checkMetachars","metacharsOnParameterValueCheck","defaultOpenApi","link","defaultServerTechnologies","serverTechnologyName","defaultSignatureSets","defaultSignatures","enabled","signatureId","tag","defaultBotDefenceSettings","isEnabled","defaultMitigationsAnomaly","scoreThreshold","defaultMitigationsBrowser","maxVersion","minVersion","defaultMitigationsClass","defaultMitigationsSignature","defaultDataGuard","creditCardNumbers","EnforceUrlsInList","enforcementUrls","maskData","usSocialSecurityNumbers","defaultWhitelistIPs","blockRequests","PolicyDefault","ipAddress","ipMask","defaultHostname","includeSubdomains","defaultCsrfProtection","expirationTimeInSeconds","Disabled","sslOnly","defaultCookieSettings","maximumCookieHeaderLength","defaultCookie","cookie","accessibleOnlyThroughTheHttpProtocol","enforcementType","Allow","insertSameSiteAttribute","securedOverHttpsConnection","Explicit","defaultEvasions","evasion","maxDecodingPasses","defaultHttpProtocols","maxParams","maxHeaders","defaultResponseCode","defaultXffHeader","defaultDataGuardEnforcementUrls","DropListFieldControl","currentPath","currentValue","hintValue","onValueChange","items","Autocomplete","options","renderInput","params","CheckboxFieldControl","align","Checkbox","TextEditFieldControl","cellProps","controlProps","makeNumber","numberValue","parseFloat","isNaN","LabelFieldControl","TableFieldValueFactory","basePath","valuePath","_get","fieldFactory","callDefault","currentJson","_set","policyPath","GeneralSettingsVisitor","tableFieldValueFactory","createTextEditFieldControl","GeneralSettingsPage","generalSettingsVisitor","getBasicRows","Transition","React","forwardRef","Slide","direction","DialogAppBar","DialogTitle","flex","AdvancedSettingsDialog","handleClose","Dialog","fullScreen","onClose","TransitionComponent","Button","autoFocus","SvgNoData","fillOpacity","strokeOpacity","strokeMiterlimit","NoDataControl","addItemInscription","onAddItem","alignSelf","fontWeight","Link","StyledTableCell","head","background","default","contrastText","getItemStyle","defaultFlag","isDragging","draggableStyle","DroppableComponent","droppableId","provided","innerRef","droppableProps","GridTableValueControl","settingsName","titles","visitors","dnd","onDragEnd","setSelected","advancedSettingsDialogOpen","setAdvancedSettingsDialogOpen","selectedItemIndex","setSelectedItemIndex","useEffect","Array","allSelected","anySelected","table","stickyHeader","TableHead","currentTarget","batchDeleteArr","push","rowIndex","sort","b","forEach","remove","onRemoveSelected","v","vIndex","gKey","Chip","createCell","DragIndicator","hasAdvancedRows","draggableId","snapshot","draggableProps","dragHandleProps","itemIndex","getAdvancedRows","createAdvancedSettingsControls","result","PolicySchemaService","_schema","_merge","customPolicy","wafSchema","currentRoot","isArray","includes","currentKey","substring","nextProperty","properties","_getNextPropertyInfo","path","console","log","split","propertyInfo","slice","required","obj","k","fullPath","isFieldRequired","VisitorFactoryBase","defaultFunc","arr","_","isString","isNumber","schemaService","schemaPath","replace","shrunk","shrinkToRequired","MethodsFieldFactory","BaseFieldResolverVisitorFactory","NumberEditFieldControl","GridFieldValueFactory","parseInt","MethodsFieldResolver","gridFieldValueFactory","createTextEditControl","methods","splice","createDefaultValues","keyField","resolverFactory","defaultPolicy","resolvedKey","reduce","s","MethodsVisitorFactory","m","ContentPageControl","styled","ToolbarPageControl","headerText","elevation","whiteSpace","ToolbarButtonPageControl","MethodsPage","methodsFieldFactory","methodsVisitorFactory","getResolvers","defValues","startIcon","UrlsFieldFactory","policyJsonFieldRemover","_unset","UrlsFieldResolver","createDropListFieldControl","values","createCheckBoxFieldControl","UrlsVisitorFactory","urls","PolicyJsonReorderServices","wildCardOrderValueName","sourceIndex","destinationIndex","move","UrlsPage","urlsFieldFactory","urlsVisitorFactory","changeOrder","destination","FileTypesFieldFactory","FileTypesFieldResolver","fileTypesFiledFactory","createNumberEditControl","FileTypesVisitorFactory","filetypes","ft","FileTypesPage","filetypesFieldFactory","filetypesVisitorFactory","HeadersFieldFactory","HeadersFieldResolver","headersFiledFactory","headers","HeadersVisitorFactory","h","HeadersPage","headersFieldFactory","headersVisitorFactory","ParametersFieldFactory","ParametersFieldResolver","parametersFieldFactory","parameters","ParametersVisitorFactory","ParametersPage","OpenApiFieldFactory","OpenApiFieldResolver","OpenApiVisitorFactory","OpenApiPage","openApiFieldFactory","EvasionsFieldFactory","EvasionsFieldResolver","evasions","createLabelFieldControl","EvasionsVisitorFactory","MenuSearchPopupControl","anchorEl","setFilter","selectedRef","useRef","strItems","JSON","stringify","filteredItems","toLowerCase","getIndex","current","scrollIntoView","scrollMode","inline","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onKeyDown","stopPropagation","preventDefault","InputLabelProps","overflowY","EvasionsPage","setAnchorEl","evasionsFieldFactory","allEvasions","btnRef","endIcon","ExpandMore","Boolean","handleSelect","HttpProtocolsFieldFactory","HttpProtocolsFieldResolver","HttpProtocolsVisitorFactory","httpProtocols","HttpProtocolsPage","httpProtocolsFieldFactory","httpProtocolsVisitorFactory","allHttpProtocols","ViolationsNginxConst","getAllViolations","getAllServerTechnologies","ServerTechnologiesFieldFactory","ServerTechnologiesFieldResolver","ServerTechnologiesVisitorFactory","ServerTechnologiesPage","allServerTechnologies","fieldFactoryVisitor","SignatureSetsFieldFactory","SignatureSetsFieldResolver","signatureSetsFieldFactory","SignatureSetsVisitorFactory","SignatureSetsNginxConst","getAllNames","SignatureSetsPage","allSignatureSets","SignaturesFieldFactory","SignaturesFieldResolver","signatures","SignaturesVisitorFactory","SignaturesPage","signaturesFieldFactory","ViolationsFieldFactory","ViolationsFieldResolver","allViolations","resolveViolationTitle","violations","ViolationsVisitorFactory","ViolationsPage","blockingSettingsVisitorFactory","BotDefenseBrowsersFactory","FieldResolverVisitorFactory","TResolver","anomalies","BotDefenseBrowsersResolver","visitorControlFactory","BotDefenseBrowsersVisitorFactory","GridValuesPageControl","fieldsVisitorFactory","addButtonTitle","defaultValueFactory","BotDefenseMitigationsBrowsersPage","visitorFactory","BotDefenseSettingsVisitor","BotDefenseSettingsPage","botDefenseVisitor","BotDefenseAnomaliesFactory","BotDefenseAnomaliesResolver","BotDefenseAnomaliesVisitorFactory","BotDefenseMitigationsAnomaliesPage","BotDefenseClassesFactory","BotDefenseClassesResolver","BotDefenseClassesVisitorFactory","BotDefenseMitigationsClassesPage","BotDefenseSignaturesFactory","BotDefenseSignaturesResolver","BotDefenseSignaturesVisitorFactory","BotDefenseMitigationsSignaturesPage","CustomXffHeadersFactory","CustomXffHeadersResolver","CustomXffHeadersVisitorFactory","CustomXffHeadersPage","ResponseCodesFactory","ResponseCodesResolver","responseCodesFieldFactory","ResponseCodesVisitorFactory","allServerResponseCodes","code","AllowedResponseCodesPage","WhitelistIpFactory","WhitelistIpResolver","WhitelistIpVisitorFactory","WhitelistIpsPage","HostnamesFactory","HostnamesResolver","HostnamesVisitorFactory","HostnamesPage","DataGuardEnforcementUrlsFactory","DataGuardEnforcementUrlsResolver","DataGuardEnforcementUrlsVisitorFactory","DataGuardEnforcementUrlsPage","DataGuardVisitor","DataGuardSettingsPage","dataGuardSettingsVisitor","CsrfProtectionVisitor","CsrfProtectionPage","csrfProtectionVisitor","CsrfUrlsFieldFactory","CsrfUrlsFieldResolver","CsrfUrlsVisitorFactory","CsrfUrlsPage","csrfUrlsFieldFactory","csrfUrlsVisitorsFactory","CookieSettingsVisitor","CookieSettingsPage","cookieSettingsVisitor","CookiesFieldFactory","CookiesFieldResolver","CookiesFieldVisitorFactory","CookiesPage","cookiesFieldFactory","cookiesVisitorsFactory","PolicyEditorPageFactory","Summary","BotDefenseSettings","BotDefenseMigrationsBrowsers","BotDefenseMigrationsAnomalies","BotDefenseMigrationsClasses","BotDefenseMigrationsSignatures","DataGuardEnforcementUrls","DataGuardSettings","CsrfProtection","CsrfUrls","CookieSettings","Cookies","page","CurrentPolicyControl","jsonText","onTextChange","setCode","highlight","languages","fontFamily","SvgDeploy","JsonEditorContainer","Paper","ToolbarButton","CurrentPageContainer","marginTop","ParseErrorOverlay","opacity","left","borderRadius","shape","zIndex","PolicyEditorComponent","jsonParseError","pageFactory","pageHeight","setPageHeight","defaultSize","maxSize","newSize","createPage","PolicyWizardComponent","PolicyEditorPreprocessorServices","l","parse","sortByWildcardOrder","createTheme","components","MuiSwitch","styleOverrides","track","boxSizing","thumb","boxShadow","MuiFormControlLabel","MuiOutlinedInput","input","fontsize","Alert","Dashboard","setErrorMessage","qs","queryString","window","location","search","handleErrorClose","event","reason","fetch","decodeURI","then","policyEditorPreprocessor","preprocess","catch","CircularProgress","uiFactory","toString","Snackbar","severity","DashboardThemeContainer","match","StyledEngineProvider","injectFirst","ThemeProvider","App","ReducerBase","_currentState","_reducerFactory","processor","produce","draft","dashboardModuleSetHandler","currentState","dashboardStateInit","DashboardReducerHandlerFactory","policyEditorPageSetHandler","PolicyValidator","schema","getSchema","Validator","validate","nestedErrors","errors","customMessage","argument","policyEditorJsonTextSetHandler","policyValidator","policyEditorJsonVisitHandler","policyEditorJsonSrcSetHandler","policyEditorDefaultPolicySetHandler","policyEditorStateInit","GeneralSettings","PolicyEditorReducerHandlerFactory","ApplicationReducers","combineReducers","dashboardReducerHandlerFactory","process","policyEditorReducerHandlerFactory","stateVar","SessionStorage","serializedState","sessionStorage","getItem","setItem","persistedState","loadState","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","subscribe","saveState","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"mokKAGYA,E,uICANC,EAAc,IAGPC,EAAYC,aACvB,SAACC,GACC,OAAOC,YAAa,CAClBC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,SAAU,GAEZC,cAAe,CACbC,UAAW,QAEbC,eAAgB,CACdC,SAAU,OACVC,WAAY,OACZC,MAAO,WAETC,WAAY,CACVH,SAAU,OACVC,WAAY,QAEdG,OAAQ,CACNC,WAAYd,EAAMe,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQjB,EAAMe,YAAYE,OAAOC,MACjCC,SAAUnB,EAAMe,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAAiBzB,EAAjB,OACL0B,WAAY1B,EACZiB,WAAYd,EAAMe,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQjB,EAAMe,YAAYE,OAAOO,QACjCL,SAAUnB,EAAMe,YAAYI,SAASM,kBAGzCC,OAAQ,CACNC,IAAK,OACLC,OAAQ,MACRC,UAAW,UAEbC,WAAY,CACVC,YAAa/B,EAAMgC,QAAQ,IAE7BC,KAAM,CACJ9B,QAAS,mBAEX+B,OAAQ,CACNZ,MAAOzB,EACPsC,WAAY,GAEdC,YAAa,CACXd,MAAOzB,GAETwC,aAAa,yBACXlC,QAAS,OACTmC,WAAY,SACZC,QAASvC,EAAMgC,QAAQ,EAAG,IAEvBhC,EAAMwC,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,SACVvC,SAAU,EACVkC,QAASvC,EAAMgC,QAAQ,GACvBlB,WAAYd,EAAMe,YAAYC,OAAO,SAAU,CAC7CC,OAAQjB,EAAMe,YAAYE,OAAOC,MACjCC,SAAUnB,EAAMe,YAAYI,SAASC,gBAEvCG,YAAY,IACZsB,SAAU,QAEVC,SAAU,SAEZC,aAAc,CACZjC,WAAYd,EAAMe,YAAYC,OAAO,SAAU,CAC7CC,OAAQjB,EAAMe,YAAYE,OAAOO,QACjCL,SAAUnB,EAAMe,YAAYI,SAASM,iBAEvCF,WAAY,EACZsB,SAAS,gBAAD,OAAkBhD,EAAlB,QAEVmD,OAAQ,CACNC,YAAajD,EAAMgC,QAAQ,IAE7BkB,QAAS,CACPD,YAAajD,EAAMgC,QAAQ,IAE7BmB,SAAU,CACRP,SAAU,SACVQ,aAAc,YAEhBC,eAAgB,CACdC,OAAQtD,EAAMgC,QAAQ,IAExBuB,OAAQ,CACNpD,QAAS,QAEXqD,YAAa,CACXC,OAAQ,QAEVC,UAAW,CACTT,YAAa,MACbtC,MAAOX,EAAM2D,QAAQC,QAAQC,KAC7BpD,SAAU,OACVC,WAAY,OACZoD,cAAe,aAEjBC,gBAAiB,CACfC,UAAU,gBAAD,OA/GI,QA+GJ,KACTpB,SAAU,cAIhB,CAAEqB,MAAO,K,SDrHCrE,O,+BAAAA,I,+BAAAA,I,sCAAAA,M,oCEHCsE,EAAuB,yBAEvBC,EAAyB,0BACzBC,EAA8B,iCAC9BC,EAA6B,gCAC7BC,EAA2B,6BAC3BC,EACX,+C,YCFWC,EAA0C,kBACrDC,aAAY,SAACC,GAAD,OAA6BA,EAAMC,mB,6DCY3CC,EAAeC,aAAW,SAAC7E,GAAD,MAAiB,CAC/CE,KAAM,CACJ4C,SAAU,WAFO+B,CAIjBC,KAESC,EAAmD,WAC9D,IAAMC,EDrBkCC,cCsBlCP,EAAQF,IAEd,OACE,cAACU,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACE,cAACC,EAAA,EAAD,CACEC,WAAY,CACVC,GAAI,CACF/C,QAAS,QAGbgD,MAAOb,EAAMc,cACbC,SAAU,SAACC,GClCZ,IACLF,EDkCQR,GClCRQ,EDkCoCE,EAAEC,OAAOJ,MChCtC,CACLK,KAAM1B,EACNsB,oBDsBE,SAWG,CACC,CACEK,KAAM,gBACNC,GAAIlG,EAAoBmG,aACxBC,KAAM,cAACC,EAAA,EAAD,CAAMX,GAAI,CAAExC,SAAU,WAE9B,CACE+C,KAAM,gBACNC,GAAIlG,EAAoBsG,aACxBF,KAAM,cAACG,EAAA,EAAD,CAAWb,GAAI,CAAExC,SAAU,WAEnC,CACE+C,KAAM,mBACNC,GAAIlG,EAAoBwG,gBACxBJ,KAAM,cAACK,EAAA,EAAD,CAAMf,GAAI,CAAExC,SAAU,YAE9BwD,KAAI,WAAqBrC,GAArB,IAAG4B,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIE,EAAb,EAAaA,KAAb,OACJ,cAACO,EAAA,EAAD,CAAsBhB,MAAOO,EAA7B,SACE,sBACEU,MAAO,CAAErG,QAAS,OAAQmC,WAAY,SAAUhB,MAAO,QADzD,UAGE,cAACsD,EAAD,UAAeoB,IACf,cAACS,EAAA,EAAD,CACE7C,QAASiC,EACTa,mBAAmB,EACnBpB,GAAI,CACF7E,SAAU,OACVC,WAAY,OACZ4C,OAAQ,aAXDW,W,6CEnClB,SAAS0C,EACdC,GAEA,MAAO,CACLhB,KAAMxB,EACNwC,aAIG,SAASC,EACdC,GAEA,MAAO,CACLlB,KAAMtB,EACNwC,WAIG,SAASC,EACdC,EACAnB,GAEA,MAAO,CACLD,KAAMvB,EACN4C,aAAcD,EACdJ,UAAWf,GC5CR,ICAKqB,ECJRC,EAAOC,EFIEC,EAA0B,kBACrCpC,eACWqC,GAAgD,kBAC3D7C,aAAY,SAACC,GAAD,OAA6BA,EAAM6C,sB,oBELjD,SAASC,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAASS,GAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM+C,CAA8BZ,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAASmD,GAAmBC,EAAMC,GAChC,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQb,GAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOvB,GAAS,CACtDlG,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM+G,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EoC,EAAG,mxGACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,WACbtC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEmC,EAAG,gYACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,a,SD9BRxC,O,qCAAAA,I,qBAAAA,I,uCAAAA,I,qBAAAA,I,eAAAA,I,yBAAAA,I,qBAAAA,I,2BAAAA,I,2BAAAA,I,mCAAAA,I,wCAAAA,I,4BAAAA,I,4CAAAA,I,kEAAAA,I,gEAAAA,I,8DAAAA,I,oEAAAA,I,sBAAAA,I,wBAAAA,I,kCAAAA,I,4CAAAA,I,4BAAAA,I,8BAAAA,I,0BAAAA,I,0CAAAA,I,wDAAAA,I,wCAAAA,I,0BAAAA,I,gDAAAA,I,gBAAAA,I,oCAAAA,I,wBAAAA,I,kDAAAA,I,oCAAAA,I,uBAAAA,M,KCkCZ,ICtCI,GAAO,GDsCPyC,GAA0B,aAAiBb,IAChC,ICrCf,SAAS,KAA2Q,OAA9P,GAAWrB,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAASiE,GAAiBb,EAAMC,GAC9B,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,gDACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,gNACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,YAIpB,ICtCI,GAAO,GAAQG,GAAQC,GAAQC,GAAQC,GDsCvC,GAA0B,aAAiBJ,IAChC,ICrCf,SAAS,KAA2Q,OAA9P,GAAWnC,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAASsE,GAAmBlB,EAAMC,GAChC,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,mDACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,2MACHC,OAAQ,aACLK,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEN,EAAG,oNACHC,OAAQ,aACLM,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEP,EAAG,uNACHC,OAAQ,aACLO,KAAWA,GAAsB,gBAAoB,OAAQ,CAChER,EAAG,mCACHC,OAAQ,UACRC,cAAe,WACZO,KAAWA,GAAsB,gBAAoB,OAAQ,CAChET,EAAG,2FACHC,OAAQ,UACRC,cAAe,YAInB,IClDI,GAAO,GAAQ,GDkDf,GAA0B,aAAiBQ,IAChC,ICjDf,SAAS,KAA2Q,OAA9P,GAAWxC,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAASuE,GAAkBnB,EAAMC,GAC/B,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,kaACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,kCACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,4GACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,YAIpB,IC3CI,GD2CA,GAA0B,aAAiBQ,IAChC,IC1Cf,SAAS,KAA2Q,OAA9P,GAAWzC,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAASwE,GAAoBpB,EAAMC,GACjC,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,wrBACHC,OAAQ,UACRC,cAAe,QACfC,eAAgB,YAIpB,ICjCI,GAAO,GAAQ,GDiCf,GAA0B,aAAiBS,IEdlCC,IFeE,IEfwD,CACrE,CACEC,MAAO,mBACPrE,KAAM,cAAC,GAAD,IACNsE,MAAO,CACL,CACED,MAAO,YACPvE,GAAIoB,EAAqBqD,WAE3B,CACEF,MAAO,MACPvE,GAAIoB,EAAqBsD,kBAE3B,CACEH,MAAO,8BACPvE,GAAIoB,EAAqBuD,kBAE3B,CACEJ,MAAO,sBACPvE,GAAIoB,EAAqBwD,SAE3B,CACEL,MAAO,kBACPvE,GAAIoB,EAAqByD,aAE3B,CACEN,MAAO,2BACPvE,GAAIoB,EAAqB0D,yBAI/B,CACEP,MAAO,iBACPrE,KAAM,cAAC,GAAD,IACNsE,MAAO,CACL,CACED,MAAO,aACPvE,GAAIoB,EAAqB2D,YAE3B,CACER,MAAO,WACPvE,GAAIoB,EAAqB4D,UAE3B,CACET,MAAO,kBACPvE,GAAIoB,EAAqB6D,iBAI/B,CACEV,MAAO,mBACPrE,KAAM,cAAC,GAAD,IACNsE,MAAO,CACL,CACED,MAAO,UACPvE,GAAIoB,EAAqB8D,SAE3B,CACEX,MAAO,OACPvE,GAAIoB,EAAqB+D,MAE3B,CACEZ,MAAO,aACPvE,GAAIoB,EAAqBgE,YAE3B,CACEb,MAAO,aACPvE,GAAIoB,EAAqBiE,WAE3B,CACEd,MAAO,UACPvE,GAAIoB,EAAqBkE,SAE3B,CACEf,MAAO,iBACPvE,GAAIoB,EAAqBmE,wBAI/B,CACEhB,MAAO,kBACPrE,KAAM,cAAC,GAAD,IACNsE,MAAO,CACL,CACED,MAAO,OACPvE,GAAIoB,EAAqBoE,gBAE3B,CACEjB,MAAO,aACPvE,GAAIoB,EAAqBqE,kBAE3B,CACElB,MAAO,sBACPvE,GAAIoB,EAAqBsE,sBAI/B,CACEnB,MAAO,oBACPrE,KAAM,cAAC,GAAD,IACNsE,MAAO,CACL,CACED,MAAO,cACPvE,GAAIoB,EAAqBuE,YAE3B,CACEpB,MAAO,OACPvE,GAAIoB,EAAqBwE,MAE3B,CACErB,MAAO,aACPvE,GAAIoB,EAAqByE,eCvH3BC,GAAe/G,aAAW,SAAC7E,GAAD,OAC9BC,YAAa,CACXC,KAAM,CACJ2L,WAAY,MACZC,cAAe,MACf,UAAW,CACTC,gBAAiB,YAGrBC,SAAU,CACRC,YAAa,oBACbF,gBAAiB,eAXFlH,CAcnBqH,MAEIC,GAAmBtH,aAAW,SAAC7E,GAAD,OAClCC,YAAa,CACXC,KAAM,CACJO,SAAU,OACVC,WAAY,OACZ4C,OAAQ,MACRL,YAAa,YANM4B,CASvB4B,KAEI2F,GAAWvH,aAAW,SAAC7E,GAAD,OAC1BC,YAAa,CACXC,KAAM,CACJqC,QAAS,WAHEsC,CAMfwH,MAEWC,GACX,WACE,IAAMC,EAAWnC,GACXoC,EAAS1M,IAEP2M,EAAgBnF,KAAhBmF,YACFzH,EAAWqC,IAEXqF,EAAOH,EAASjG,KAAI,SAACqG,EAAG1I,GAAJ,OACxB,eAAC,IAAM2I,SAAP,WACE,sBACEpG,MAAO,CACLrG,QAAS,OACTmD,OAAQ,MACRhB,WAAY,SACZW,YAAa,QALjB,UAQG0J,EAAE3G,KACH,sBAAM6G,UAAWL,EAAO9I,UAAxB,SAAoCiJ,EAAEtC,WAExC,cAAC+B,GAAD,UACGO,EAAErC,MAAMhE,KAAI,SAACwG,EAAGC,GAAJ,OACX,cAACnB,GAAD,CACEoB,QAAM,EAENhB,SAAUS,IAAgBK,EAAEhH,GAC5BmH,QAAS,kBAAMjI,EV7DtB,SACLkI,EACAT,GAEA,MAAO,CACL7G,KAAMzB,EACN+I,aACAT,eUsDkCU,CAAoB,EAAGL,EAAEhH,MAJnD,SAME,cAACqG,GAAD,CAAkBzF,mBAAiB,EAAnC,SAAqCoG,EAAEzC,SAJlC0C,UAhBQ9I,MA2BvB,OAAO,cAAC,IAAM2I,SAAP,UAAiBF,KCvEfU,GAA4D,WACvE,IAAQC,EAAsB/F,KAAtB+F,kBACFrI,EAAWqC,IAEjB,OACE,eAAC,IAAMuF,SAAP,WACE,sBACEpG,MAAO,CACLvD,YAAa,OACbqK,aAAc,OACdzB,WAAY,OAJhB,UAOE,cAAC0B,EAAA,EAAD,CACEC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,OAINC,YAAY,cACZ1I,WAAW,IAEb,cAAC2I,EAAA,EAAD,CACEC,eAAe,MACf1D,MAAM,wBACN2D,QACE,cAACC,EAAA,EAAD,CACEC,QAASb,EACT5H,SAAU,SAACC,GXWlB,IACLyI,EWXcnJ,GXWdmJ,EWXwDzI,EAAEC,OAAOuI,QXa1D,CACLtI,KAAMrB,EACN8I,kBAAmBc,aWTjB,cAAC,GAAD,QCtCOC,GACX,SAAC,GAAsB,EAApBC,cAAqB,IAChBC,EAAUxO,IACR0F,EAAkBhB,IAAlBgB,cAEF+I,EAAqB,WACzB,OAAQ/I,GACN,KAAK5F,EAAoBmG,aACvB,OAAO,cAAC,GAAD,KAHc,GAO3B,OACE,eAAC,WAAD,WACE,qBACE8G,UAAWyB,EAAQjM,aACnBmE,MAAO,CACLjE,QAAS,OACTsJ,WAAY,MACZC,cAAe,OALnB,SAQE,cAAC,EAAD,MAEDyC,M,mDClCF,SAASC,GAASC,EAAkB5I,GACzC,IAAM6I,EAAUC,SAASC,cAAc,KACvCF,EAAQG,aACN,OACA,iCAAmCC,mBAAmBjJ,IAExD6I,EAAQG,aAAa,WAAYJ,GAEjCC,EAAQlI,MAAMrG,QAAU,OACxBwO,SAASI,KAAKC,YAAYN,GAE1BA,EAAQO,QAERN,SAASI,KAAKG,YAAYR,GLX5B,SAAS,KAA2Q,OAA9P,GAAWjH,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAASwJ,GAAYpG,EAAMC,GACzB,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,kPACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,2BACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,mDACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,YAIpB,IM9CI,GAAO,GAAQ,GN8Cf,GAA0B,aAAiByF,IAChC,IM7Cf,SAAS,KAA2Q,OAA9P,GAAW1H,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAAS0J,GAAQtG,EAAMC,GACrB,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,kCACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,yfACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,2ZACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,YAIpB,IC9CI,GAAO,GAAQ,GAAQ,GAAQ,GAAQ,GD8CvC,GAA0B,aAAiB2F,IAChC,IC7Cf,SAAS,KAA2Q,OAA9P,GAAW5H,OAAOC,QAAU,SAAU/B,GAAU,IAAK,IAAIgC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQpC,EAAOoC,GAAOD,EAAOC,IAAY,OAAOpC,IAA2BwC,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnEhC,EAEzF,SAAuCmC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DhC,EAAS,GAAQ4C,EAAad,OAAOe,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAapC,EAAOoC,GAAOD,EAAOC,IAAQ,OAAOpC,EAFxM,CAA8BmC,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBpC,EAAOoC,GAAOD,EAAOC,IAAU,OAAOpC,EAMne,SAAS2J,GAASvG,EAAMC,GACtB,IAAI5I,EAAQ2I,EAAK3I,MACb6I,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDzH,MAAO,GACPmC,OAAQ,GACR0F,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKN,EACL,kBAAmBC,GAClBC,GAAQ9I,EAAqB,gBAAoB,QAAS,CAC3D0F,GAAImD,GACH7I,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EmJ,EAAG,2WACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,6XACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,sYACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,sBACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,mCACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEH,EAAG,mCACHC,OAAQ,eACR4F,YAAa,IACb3F,cAAe,QACfC,eAAgB,YAIpB,IAAI,GAA0B,aAAiB4F,IC3ClCC,ID4CE,IC5C8D,SAAC,GAGvE,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,aAEMnB,EAAUxO,IAChB,EAA0CwH,KAAlCoI,EAAR,EAAQA,iBAAkBjD,EAA1B,EAA0BA,YACpBC,EAAOtC,GAkCPuF,EA3BuD,SAAC7J,GAC5D,IAAI8J,EAAmB,CACrBC,SAAU,GACVC,KAAM,IAeR,OAbApD,EAAKqD,MAAK,SAACC,GACT,OAAOA,EAAE1F,MAAMyF,MAAK,SAACjD,GACnB,OAAIA,EAAEhH,KAAOA,IACX8J,EAAS,CACPC,SAAUG,EAAE3F,MACZyF,KAAMhD,EAAEzC,QAEH,SAMNuF,EASkBK,CAAaxD,GAExC,OACE,eAACyD,GAAA,EAAD,CAASrD,UAAWyB,EAAQhO,cAA5B,UACE,cAAC6P,GAAA,EAAD,CACExP,MAAM,UACNyP,aAAW,cACXnD,QAASwC,EACTY,KAAK,QACLxD,UAAWyD,YAAKhC,EAAQxM,WAAY0N,GAAQlB,EAAQrM,MACpDsO,KAAK,QANP,SAQE,cAAC,KAAD,MAEF,sBAAK/J,MAAO,CAAElF,MAAO,QAArB,UACE,cAACkP,GAAA,EAAD,CAAY3D,UAAWyB,EAAQ9N,eAA/B,SACGmP,EAASE,WAEZ,cAACW,GAAA,EAAD,CAAY3D,UAAWyB,EAAQ1N,WAA/B,SAA4C+O,EAASG,UAEvD,cAACK,GAAA,EAAD,CACExP,MAAM,UACN8P,KAAK,sDACL9K,OAAO,SACP+K,IAAI,aACJH,KAAK,QALP,SAOE,cAAC,GAAD,MAEF,cAACJ,GAAA,EAAD,CAAYxP,MAAM,UAAUsM,QAnCT,WACrB,IAAM0D,EAAO,IAAIC,KAEjBpC,GAAS,OAAD,OAAQmC,EAAKE,UAAb,SAA+BnB,IAgCgBa,KAAK,QAA1D,SACE,cAAC,GAAD,MAEF,cAACJ,GAAA,EAAD,CAAYxP,MAAM,UAAUmQ,UAAU,EAAMP,KAAK,QAAjD,SACE,cAAC,GAAD,WCpFKQ,GAA0D,SAAC,GAEjE,IADLC,EACI,EADJA,SAEM1C,EAAUxO,IAChB,EAAwBmR,oBAAS,GAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KAUA,OACE,sBAAKrE,UAAWyB,EAAQpO,KAAxB,UACE,cAACiR,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEzD,SAAS,QACTd,UAAWyD,YAAKhC,EAAQzN,OAAT,eACZyN,EAAQjN,YAAcmO,IAH3B,SAME,cAAC,GAAD,CAAqBC,aAjBN,WACnByB,GAAQ,IAgB6C1B,KAAMA,MAEzD,cAAC6B,EAAA,EAAD,CACExE,UAAWyB,EAAQpM,OACnBoP,QAAQ,aACRC,OAAO,OACP/B,KAAMA,EACNlB,QAAS,CACPkD,MAAOlD,EAAQlM,aANnB,SASE,cAAC,GAAD,CAAsBiM,cAxBN,WACpB6C,GAAQ,QAyBN,uBACErE,UAAWyD,YAAKhC,EAAQ3L,QAAT,eACZ2L,EAAQvL,aAAeyM,IAF5B,UAKE,qBAAK3C,UAAWyB,EAAQjM,eACvB2O,S,sGCvCHS,GAAiB5M,aAAW,SAAC7E,GAAD,OAChCC,YAAa,CACXC,KAAM,CACJ,qBAAsB,CACpB6L,gBAAiB/L,EAAM2D,QAAQ+N,OAAOC,YAJvB9M,CAQrB+M,MAEWC,GAAwD,WACnE,OACE,cAACC,GAAA,EAAD,CAAgBC,UAAWC,KAA3B,SACE,cAACC,GAAA,EAAD,UAaE,cAACC,GAAA,EAAD,UACG,CACC,CACEC,IAAK,YACLC,YACE,2DACFC,OACE,qFACFC,YACE,8HAEJ,CACEH,IAAK,aACLC,YACE,0JACFC,OAAQ,GACRC,YAAa,IAEf,CACEH,IAAK,WACLC,YACE,2MACFC,OAAQ,GACRC,YAAa,IAEf,CACEH,IAAK,YACLC,YACE,oJACFC,OAAQ,GACRC,YAAa,KAEfhM,KAAI,SAACiM,GACL,OACE,eAACd,GAAD,WACE,cAACe,GAAA,EAAD,UACE,4BAAID,EAAKJ,QAEX,cAACK,GAAA,EAAD,UAAYD,EAAKH,cACjB,cAACI,GAAA,EAAD,UACmB,KAAhBD,EAAKF,YAAgBI,EACpB,cAACtC,GAAA,EAAD,CACExP,MAAM,UACN8P,KAAM8B,EAAKF,OACX1M,OAAO,SACP+K,IAAI,aACJH,KAAK,QALP,SAME,cAAC,KAAD,QAIN,cAACiC,GAAA,EAAD,UACwB,KAArBD,EAAKD,iBAAqBG,EACzB,cAACtC,GAAA,EAAD,CACExP,MAAM,UACN8P,KAAM8B,EAAKD,YACX3M,OAAO,SACP+K,IAAI,aACJH,KAAK,QALP,SAME,cAAC,KAAD,qB,0DC3FhBmC,GAAc7N,aAAW,SAAC7E,GAAD,MAAmB,CAChD2S,QAAS,CACP5G,gBAAiB,UACjBpL,MAAO,sBACPkC,SAAU,IACVpC,SAAUT,EAAM4S,WAAWC,QAAQ,IACnCC,OAAQ,wBANQjO,CAQhBkO,MAEEC,GAAYnO,aAAW,SAAC7E,GAAD,MAAmB,CAC9CE,KAAM,CACJ,iBAAkB,CAChB4D,cAAe,kBAHHe,CAMdmN,MAMSiB,GACX,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACD,OACE,cAACxF,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC+E,GAAD,CACEtS,MACE,cAAC,IAAMwM,SAAP,UACE,cAACoG,GAAD,UAAYE,MAHlB,SAOE,cAAC,KAAD,CAAW1M,MAAO,CAAE7F,MAAO,MAAOwS,OAAQ,kBC5BvCC,GACX,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACD,EAA0CpC,oBAAU,GAApD,mBAAOqC,EAAP,KAAsBC,EAAtB,KAEQC,EAAyBlM,KAAzBkM,qBAER,OACE,cAACC,GAAA,EAAD,CAAMC,WAAS,EAAC1R,QAAS,EAAzB,SACE,cAACyR,GAAA,EAAD,CAAMC,WAAS,EAACnB,MAAI,EAACvQ,QAAS,EAAG2R,GAAI,GAArC,SACGN,EAAK/M,KAAI,SAACsN,EAAK3P,GACd,IAAM4P,EAAQL,EAAqBM,QAAO,SAACC,GAAD,QACxCH,EAAII,WACAJ,EAAII,UAAUC,MAAK,SAACC,GAAD,OAASA,IAAQH,EAAEI,eAGtCC,EAAoBP,GAASA,EAAMhM,OAAS,EAE5C4F,EAAiB2G,EACrB,cAAC,GAAD,CAA4BlB,aAAcW,EAAM,GAAGQ,eACjD5B,EAEJ,OACE,eAAC,WAAD,WACE,cAACgB,GAAA,EAAD,CAAMC,WAAS,EAACnB,MAAI,EAACjQ,WAAY,SAAUqR,GAAI,EAA/C,SACE,cAACnD,GAAA,EAAD,CACE7P,MAAO2S,IAAkBrP,EAAQ,eAAYwO,EAC7CnB,QAAQ,QAFV,SAIGsC,EAAIxT,UAGT,cAACqT,GAAA,EAAD,CAAMlB,MAAI,EAACoB,GAAI,EAAf,SACGC,EAAIU,YAAYC,cAAc,CAC7BV,MAAOO,EACP3G,eAAgB2G,EAAW3G,OAAiBgF,EAC5CtN,WAAW,EACXqP,aAAa,EACblD,QAAS,SACThO,OAAQ,QACRmR,SAAU,kBAAMlB,EAAiBtP,IACjCyQ,OAAQ,kBAAMnB,GAAkB,UAlBjBtP,WC5Bb0Q,GACpB,WAAsB3P,EAA0C4P,GAAY,0BAAtD5P,WAAqD,KAAX4P,QAG3D,SAASC,GAAkCC,GAGhD,IAAQC,EAAsBzN,KAAtByN,kBACR,OAAO,IAAID,EAASzN,IAA2B0N,G,ICwKrCC,GA4FAC,GAoDAC,GAqCAC,GA+BAC,GAOAC,GAkIAC,GAuCAC,GAwEAC,GAmDAC,GAqEAC,GA0FAC,GAMAC,GA6LAC,GA+FAC,GA4CAC,GAOAC,GA6BAC,GAsBAC,GA6DAC,GAkmBAC,GAqCAC,GA+CAC,GAqBAC,GAqCAC,GA0CAC,GAcAC,GAoDAC,GA0BAC,GA6DAC,GAwBAC,GAwBAC,GAuJAC,GAmBAC,GAgCAC,GAaAC,GAMAC,GAMAC,GA0FAC,GASAC,GAcAC,GAsBAC,GAgCAC,GAqQAC,GA4RAC,GAuBAC,GAuFAC,GAeAC,GAoXAC,GA6LAC,GAmBAC,GAisBAC,GAMAC,GA6EAC,GAoCAC,GAuEAC,GAgKAC,GAUAC,GAoCAC,GAuCAC,GAIAC,GA6IAC,GAsBAC,GA4CAC,GAkEAC,GA4TAC,GAoBAC,GAMAC,GAIAC,GAmFAC,GAOAC,GAOAC,GAMAC,GAMAC,GAaAC,GAYAC,GAYAC,GAMAC,GA4CAC,GA0DAC,GA2xBAC,GAsCAC,GAkBAC,GAyFAC,GAgGAC,GAoHAC,GAKAC,GAKAC,GAMAC,GAUAC,GAYAC,GAMAC,G,8CA/zNA3F,K,yBAAAA,E,YAAAA,E,eAAAA,E,eAAAA,E,kBAAAA,E,gBAAAA,E,UAAAA,E,sBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,eAAAA,E,qBAAAA,E,aAAAA,E,2BAAAA,E,2BAAAA,E,2BAAAA,E,2BAAAA,E,2BAAAA,E,2BAAAA,E,2BAAAA,E,0BAAAA,Q,cA4FAC,K,qCAAAA,E,2BAAAA,E,sCAAAA,E,2CAAAA,E,iCAAAA,E,8CAAAA,E,qCAAAA,E,yBAAAA,Q,cAoDAC,K,kCAAAA,E,2CAAAA,E,6EAAAA,E,iEAAAA,E,uDAAAA,E,wEAAAA,E,8DAAAA,E,oEAAAA,E,mFAAAA,E,kFAAAA,E,+DAAAA,E,gEAAAA,E,8DAAAA,E,4CAAAA,E,iEAAAA,E,gCAAAA,E,oEAAAA,E,6DAAAA,E,6CAAAA,E,uDAAAA,Q,cAqCAC,K,qCAAAA,E,yCAAAA,E,mCAAAA,E,mCAAAA,E,qCAAAA,E,+BAAAA,E,qCAAAA,E,iCAAAA,E,qCAAAA,E,6BAAAA,E,uFAAAA,E,uCAAAA,E,wCAAAA,Q,cA+BAC,K,cAAAA,E,cAAAA,E,gBAAAA,E,iBAAAA,Q,cAOAC,K,sBAAAA,E,kBAAAA,E,uBAAAA,Q,cAkIAC,K,+CAAAA,E,8BAAAA,E,gDAAAA,Q,cAuCAC,K,qCAAAA,Q,cAwEAC,K,cAAAA,E,oCAAAA,E,8DAAAA,E,8EAAAA,Q,cAmDAC,K,cAAAA,E,+CAAAA,E,+CAAAA,E,oFAAAA,Q,cAqEAC,K,cAAAA,E,+CAAAA,E,oCAAAA,E,8DAAAA,E,8BAAAA,E,gDAAAA,Q,cA0FAC,K,cAAAA,E,oCAAAA,E,+DAAAA,Q,cAMAC,K,kBAAAA,Q,cA6LAC,K,cAAAA,E,qBAAAA,E,sBAAAA,Q,cA+FAC,K,2BAAAA,E,yBAAAA,Q,cA4CAC,K,WAAAA,Q,cAOAC,K,YAAAA,E,uBAAAA,E,eAAAA,Q,cA6BAC,K,oBAAAA,E,kBAAAA,E,sCAAAA,E,kCAAAA,Q,cAsBAC,K,UAAAA,E,cAAAA,E,kBAAAA,E,cAAAA,E,sBAAAA,E,wBAAAA,E,kBAAAA,E,oBAAAA,E,kBAAAA,E,YAAAA,E,gBAAAA,E,UAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,0BAAAA,E,YAAAA,E,gBAAAA,E,kBAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,oBAAAA,E,sBAAAA,E,UAAAA,E,wBAAAA,E,0BAAAA,E,gBAAAA,E,gBAAAA,E,sBAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,gBAAAA,E,0BAAAA,E,iCAAAA,E,6BAAAA,Q,cA6DAC,K,UAAAA,E,cAAAA,E,kBAAAA,E,cAAAA,E,sBAAAA,E,wBAAAA,E,kBAAAA,E,oBAAAA,E,kBAAAA,E,YAAAA,E,gBAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,0BAAAA,E,YAAAA,E,gBAAAA,E,kBAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,oBAAAA,E,sBAAAA,E,UAAAA,E,wBAAAA,E,0BAAAA,E,gBAAAA,E,gBAAAA,E,sBAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,gBAAAA,E,0BAAAA,E,iCAAAA,E,6BAAAA,Q,cAkmBAC,K,YAAAA,E,eAAAA,Q,cAqCAC,K,oBAAAA,E,qBAAAA,Q,cA+CAC,K,mBAAAA,Q,cAqBAC,K,kDAAAA,E,oEAAAA,E,oBAAAA,E,uBAAAA,E,qBAAAA,E,UAAAA,E,YAAAA,E,WAAAA,Q,cAqCAC,K,UAAAA,E,YAAAA,E,cAAAA,E,gBAAAA,E,cAAAA,E,sBAAAA,E,YAAAA,E,UAAAA,E,WAAAA,Q,cA0CAC,K,6BAAAA,E,gBAAAA,E,kBAAAA,E,kBAAAA,E,cAAAA,E,kBAAAA,E,YAAAA,E,eAAAA,Q,cAcAC,K,YAAAA,E,gBAAAA,E,WAAAA,Q,cAoDAC,K,yBAAAA,E,YAAAA,E,cAAAA,E,gBAAAA,E,+BAAAA,E,gBAAAA,E,kCAAAA,Q,cA0BAC,K,UAAAA,E,gBAAAA,E,qBAAAA,E,gBAAAA,E,YAAAA,E,eAAAA,Q,cA6DAC,K,cAAAA,E,yBAAAA,E,iCAAAA,E,8CAAAA,E,gBAAAA,E,YAAAA,E,gBAAAA,E,6BAAAA,E,+BAAAA,E,uBAAAA,E,WAAAA,Q,cAwBAC,K,yBAAAA,E,gBAAAA,E,2BAAAA,E,+BAAAA,E,iCAAAA,E,sCAAAA,E,UAAAA,E,0BAAAA,Q,cAwBAC,K,WAAAA,Q,cAuJAC,K,cAAAA,E,mBAAAA,Q,cAmBAC,K,UAAAA,E,YAAAA,E,uBAAAA,E,iBAAAA,Q,cAgCAC,K,qBAAAA,Q,cAaAC,K,YAAAA,E,oCAAAA,E,8BAAAA,Q,cAMAC,K,UAAAA,E,UAAAA,E,aAAAA,Q,cAMAC,K,0BAAAA,E,0CAAAA,E,iBAAAA,Q,cA0FAC,K,yCAAAA,E,wCAAAA,Q,cASAC,K,+DAAAA,E,8CAAAA,E,oDAAAA,E,4FAAAA,E,sEAAAA,E,uEAAAA,Q,cAcAC,K,UAAAA,E,0BAAAA,Q,cAsBAC,K,+BAAAA,E,qCAAAA,E,mCAAAA,E,iCAAAA,E,qCAAAA,E,qCAAAA,E,iDAAAA,E,qCAAAA,E,gDAAAA,E,uCAAAA,E,yBAAAA,E,6CAAAA,Q,cAgCAC,K,0BAAAA,E,6BAAAA,E,kBAAAA,E,kBAAAA,E,+BAAAA,E,kBAAAA,E,gBAAAA,E,oBAAAA,E,iCAAAA,E,wBAAAA,E,wCAAAA,E,sBAAAA,E,kBAAAA,E,cAAAA,E,sBAAAA,E,kBAAAA,E,wBAAAA,E,kBAAAA,E,kBAAAA,E,wBAAAA,E,oBAAAA,E,kBAAAA,E,kBAAAA,E,gBAAAA,E,cAAAA,E,kBAAAA,E,gBAAAA,E,kBAAAA,E,8CAAAA,E,oBAAAA,E,6BAAAA,E,gBAAAA,E,6DAAAA,E,qCAAAA,E,oBAAAA,E,2BAAAA,E,kBAAAA,E,oBAAAA,E,oBAAAA,E,gBAAAA,E,uBAAAA,E,+BAAAA,E,kDAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,mCAAAA,E,8CAAAA,E,oBAAAA,E,kBAAAA,E,cAAAA,E,wEAAAA,E,2BAAAA,E,uBAAAA,E,4BAAAA,E,kBAAAA,E,YAAAA,E,gBAAAA,E,+BAAAA,E,kBAAAA,E,oBAAAA,E,oBAAAA,E,uCAAAA,E,kBAAAA,E,cAAAA,E,yBAAAA,E,qCAAAA,E,kBAAAA,E,kBAAAA,E,oBAAAA,E,sDAAAA,E,6BAAAA,E,YAAAA,E,kBAAAA,E,gBAAAA,E,0CAAAA,E,6BAAAA,E,mCAAAA,E,wDAAAA,E,cAAAA,E,gBAAAA,E,kBAAAA,E,kBAAAA,E,cAAAA,E,sBAAAA,E,gBAAAA,E,sBAAAA,E,kBAAAA,E,wBAAAA,E,YAAAA,E,sBAAAA,E,oBAAAA,E,gBAAAA,E,6BAAAA,E,gBAAAA,E,cAAAA,E,kEAAAA,E,wDAAAA,E,oBAAAA,E,qBAAAA,E,kBAAAA,E,kBAAAA,E,cAAAA,E,sBAAAA,E,kDAAAA,E,YAAAA,E,kBAAAA,E,wBAAAA,E,gBAAAA,E,cAAAA,E,kBAAAA,E,cAAAA,E,gBAAAA,E,gBAAAA,E,wBAAAA,E,cAAAA,E,oBAAAA,E,0EAAAA,E,qCAAAA,E,gBAAAA,E,wBAAAA,E,gEAAAA,E,gBAAAA,E,kBAAAA,E,kBAAAA,E,kBAAAA,E,8CAAAA,E,8BAAAA,E,sBAAAA,E,wBAAAA,E,cAAAA,E,sBAAAA,E,wBAAAA,E,gBAAAA,E,oBAAAA,E,oBAAAA,E,YAAAA,E,cAAAA,E,mCAAAA,E,wBAAAA,E,wBAAAA,E,sBAAAA,E,kBAAAA,E,gBAAAA,E,8DAAAA,E,yCAAAA,E,gBAAAA,E,oBAAAA,E,wBAAAA,E,wBAAAA,E,kBAAAA,E,wBAAAA,E,kBAAAA,E,SAAAA,E,kBAAAA,E,cAAAA,E,cAAAA,E,0BAAAA,E,2CAAAA,E,6BAAAA,E,yBAAAA,E,sBAAAA,E,cAAAA,E,kBAAAA,E,YAAAA,E,+BAAAA,E,kDAAAA,E,gBAAAA,E,YAAAA,E,cAAAA,E,oBAAAA,E,cAAAA,E,6CAAAA,E,gBAAAA,E,kCAAAA,E,oBAAAA,E,YAAAA,E,0BAAAA,E,mCAAAA,E,gBAAAA,E,oBAAAA,E,yBAAAA,E,cAAAA,E,kBAAAA,E,kBAAAA,E,uCAAAA,E,gBAAAA,E,uBAAAA,E,mCAAAA,E,2BAAAA,E,2CAAAA,E,yBAAAA,E,2BAAAA,E,mDAAAA,E,gEAAAA,E,cAAAA,E,2CAAAA,E,uCAAAA,E,2BAAAA,E,kBAAAA,E,gBAAAA,E,wBAAAA,E,2BAAAA,E,sBAAAA,E,oBAAAA,E,oBAAAA,E,iCAAAA,E,kBAAAA,E,2BAAAA,E,sFAAAA,E,cAAAA,E,qBAAAA,E,cAAAA,E,oBAAAA,E,6CAAAA,E,sBAAAA,E,gBAAAA,E,0BAAAA,E,0CAAAA,E,gBAAAA,E,wBAAAA,E,wDAAAA,E,oBAAAA,E,yBAAAA,E,YAAAA,E,kBAAAA,E,cAAAA,E,wCAAAA,E,kBAAAA,E,gBAAAA,E,4BAAAA,E,iDAAAA,E,gBAAAA,E,gBAAAA,E,kBAAAA,E,0CAAAA,E,+BAAAA,E,6BAAAA,E,wEAAAA,E,kBAAAA,E,wBAAAA,E,kBAAAA,E,sBAAAA,E,kBAAAA,E,+CAAAA,E,uCAAAA,E,oCAAAA,E,+BAAAA,E,cAAAA,E,gBAAAA,E,qBAAAA,Q,cAqQAC,K,oBAAAA,E,2BAAAA,Q,cA4RAC,K,6BAAAA,E,eAAAA,E,iBAAAA,Q,cAuBAC,K,oBAAAA,E,6CAAAA,E,gCAAAA,Q,cAuFAC,K,iCAAAA,E,kBAAAA,E,0CAAAA,E,oCAAAA,E,mCAAAA,E,+BAAAA,E,mCAAAA,E,oBAAAA,E,2BAAAA,E,yBAAAA,E,yBAAAA,E,oCAAAA,Q,cAeAC,K,qLAAAA,E,0MAAAA,E,gMAAAA,E,oMAAAA,E,qeAAAA,E,uLAAAA,E,yRAAAA,E,uNAAAA,E,+OAAAA,E,uZAAAA,E,8QAAAA,E,uPAAAA,Q,cAoXAC,K,yCAAAA,E,YAAAA,E,uBAAAA,E,yBAAAA,E,YAAAA,E,aAAAA,Q,cA6LAC,K,UAAAA,E,aAAAA,Q,cAmBAC,K,oBAAAA,E,+BAAAA,E,2BAAAA,Q,cAisBAC,K,cAAAA,E,qBAAAA,E,uBAAAA,Q,cAMAC,K,sBAAAA,E,oBAAAA,E,iBAAAA,Q,cA6EAC,K,kBAAAA,E,eAAAA,Q,cAoCAC,K,cAAAA,E,uBAAAA,Q,cAuEAC,K,gBAAAA,E,kBAAAA,E,cAAAA,E,uBAAAA,Q,cAgKAC,K,gBAAAA,E,WAAAA,Q,cAUAC,K,gBAAAA,E,eAAAA,Q,cAoCAC,K,gBAAAA,E,cAAAA,E,uBAAAA,Q,cAuCAC,K,gCAAAA,Q,cAIAC,K,oBAAAA,E,cAAAA,E,kBAAAA,E,iBAAAA,Q,cA6IAC,K,yBAAAA,E,gBAAAA,E,qBAAAA,Q,cAsBAC,K,gBAAAA,E,kBAAAA,E,6BAAAA,E,oBAAAA,E,wBAAAA,Q,cA4CAC,K,YAAAA,E,uBAAAA,E,kBAAAA,E,2BAAAA,E,kBAAAA,E,4CAAAA,E,qDAAAA,E,gBAAAA,E,uCAAAA,E,gDAAAA,E,gBAAAA,E,iCAAAA,E,WAAAA,Q,cAkEAC,K,8BAAAA,E,mDAAAA,Q,cA4TAC,K,gCAAAA,E,UAAAA,E,yBAAAA,E,aAAAA,Q,cAoBAC,K,qBAAAA,E,+BAAAA,E,kBAAAA,Q,cAMAC,K,UAAAA,Q,cAIAC,K,gBAAAA,E,QAAAA,E,kBAAAA,E,aAAAA,Q,cAmFAC,K,UAAAA,E,QAAAA,E,QAAAA,E,SAAAA,Q,cAOAC,K,UAAAA,E,YAAAA,E,UAAAA,E,iBAAAA,Q,cAOAC,K,UAAAA,E,QAAAA,E,WAAAA,Q,cAMAC,K,cAAAA,E,UAAAA,E,iBAAAA,Q,cAMAC,K,UAAAA,E,kBAAAA,E,qBAAAA,Q,cAaAC,K,UAAAA,E,QAAAA,E,qBAAAA,Q,cAYAC,K,2BAAAA,E,iBAAAA,Q,cAYAC,K,gBAAAA,E,kCAAAA,E,qBAAAA,Q,cAMAC,K,YAAAA,E,UAAAA,E,iBAAAA,Q,cA4CAC,K,cAAAA,E,aAAAA,Q,cA0DAC,K,gBAAAA,E,qBAAAA,Q,cA2xBAC,K,2BAAAA,E,wCAAAA,E,0CAAAA,E,2DAAAA,E,iEAAAA,E,2BAAAA,E,gCAAAA,Q,cAsCAC,K,cAAAA,E,gBAAAA,E,iBAAAA,Q,cAkBAC,K,oBAAAA,E,kBAAAA,E,uCAAAA,Q,cAyFAC,K,QAAAA,E,WAAAA,Q,cAgGAC,K,gBAAAA,E,cAAAA,E,gCAAAA,Q,cAoHAC,K,kBAAAA,E,qBAAAA,Q,cAKAC,K,kBAAAA,E,mBAAAA,Q,cAKAC,K,gBAAAA,E,gBAAAA,E,uBAAAA,Q,cAMAC,K,iBAAAA,E,oBAAAA,Q,cAUAC,K,kBAAAA,E,oCAAAA,E,YAAAA,E,qCAAAA,Q,cAYAC,K,YAAAA,E,YAAAA,E,qCAA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ACEhB,KAAM,gCACN1P,MAAO,kCACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,8BACN1P,MAAO,0DACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,wBACN1P,MAAO,2BACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,2BACN1P,MAAO,8BACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,qBACN1P,MAAO,6BACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,+BACN1P,MAAO,oCACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,sBACN1P,MAAO,yBACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,0BACN1P,MAAO,6CACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,uBACN1P,MAAO,2BACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,WACN1P,MAAO,cACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,wBACN1P,MAAO,+BACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,kBACN1P,MAAO,qBACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,oBACN1P,MAAO,gCACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,kBACN1P,MAAO,gDACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,GAEZ,CACEhB,KAAM,qBACN1P,MAAO,qBACPic,OAAO,EACPD,OAAO,EACPtL,UAAU,KAjYL8iB,GAsYJE,yBAA2C,WAChD,MAAO,CACL,MACA,UACA,YACA,gBACA,gBACA,0BACA,8BACA,cACA,MACA,QACA,SACA,cACA,UACA,SACA,gBACA,WACA,aACA,sCACA,qBACA,UACA,aACA,UACA,MACA,QACA,oBACA,aACA,yBACA,UACA,QACA,SACA,UACA,eACA,wBACA,kBAC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","file":"static/js/main.ce2eb903.chunk.js","sourcesContent":["import { Action } from \"redux\";\nimport { ReducerHandler } from \"../reducer.base\";\n\nexport enum DashboardModuleEnum {\n  PolicyEditor,\n  PolicyWizard,\n  PolicyTemplates,\n}\n\nexport type DashboardState = {\n  currentModule: DashboardModuleEnum;\n};\n\nexport interface DashboardAction\n  extends Action,\n    Partial<{ currentModule: DashboardModuleEnum }> {}\n\nexport type DashboardDispatch = (args: DashboardAction) => DashboardAction;\nexport type DashboardReducerHandler = ReducerHandler<\n  DashboardAction,\n  DashboardState\n>;\n","import createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst drawerWidth = 245;\nconst headerHeight = \"120px\";\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return createStyles({\n      root: {\n        display: \"flex\",\n      },\n      title: {\n        flexGrow: 1,\n      },\n      headerToolbar: {\n        minHeight: \"55px\",\n      },\n      headerCategory: {\n        fontSize: \"12px\",\n        lineHeight: \"18px\",\n        color: \"#9EA7B8\",\n      },\n      headerPage: {\n        fontSize: \"18px\",\n        lineHeight: \"26px\",\n      },\n      appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      footer: {\n        top: \"auto\",\n        bottom: \"0px\",\n        textAlign: \"center\",\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n      },\n      hide: {\n        display: \"none !important\",\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n      },\n      content: {\n        overflow: \"scroll\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create(\"margin\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n        maxWidth: \"100vw\",\n        //        maxHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n        minWidth: \"720px\",\n      },\n      contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n        maxWidth: `calc(100vw - ${drawerWidth}px)`,\n      },\n      nested: {\n        paddingLeft: theme.spacing(4),\n      },\n      nested2: {\n        paddingLeft: theme.spacing(8),\n      },\n      ellipsis: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n      },\n      sectionButtons: {\n        margin: theme.spacing(2),\n      },\n      hidden: {\n        display: \"none\",\n      },\n      pageContent: {\n        height: \"100%\",\n      },\n      menuGroup: {\n        paddingLeft: \"4px\",\n        color: theme.palette.primary.main,\n        fontSize: \"12px\",\n        lineHeight: \"16px\",\n        textTransform: \"uppercase\",\n      },\n      editorContainer: {\n        maxHeight: `calc(100vh - ${headerHeight})`,\n        overflow: \"hidden\",\n      },\n    });\n  },\n  { index: 1 }\n);\n","export const DASHBOARD_MODULE_SET = \"dashboard::module::set\";\n\nexport const POLICY_EDITOR_PAGE_SET = \"policy-editor::page:set\";\nexport const POLICY_EDITOR_JSON_TEXT_SET = \"policy-editor::json::text::set\";\nexport const POLICY_EDITOR_JSON_SRC_SET = \"policy-editor::json::src::set\";\nexport const POLICY_EDITOR_JSON_VISIT = \"policy-editor::json::visit\";\nexport const POLICY_EDITOR_UI_SHOW_DEFAULT_POLICY_SET =\n  \"policy-editor::ui::default-policy::show::set\";\n","import { DashboardDispatch, DashboardState } from \"./dashboard.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../index\";\n\nexport const useDashboardDispatch = () => useDispatch<DashboardDispatch>();\nexport const useDashboardState: () => DashboardState = () =>\n  useSelector((state: ApplicationState) => state.dashboardState);\n","import React from \"react\";\nimport { DashboardModuleEnum } from \"../../store/dashboard/dashboard.types\";\nimport { Apps, Assistant, Edit } from \"@mui/icons-material\";\nimport { dashboardModuleSet } from \"../../store/dashboard/dashboard.actions\";\n\nimport {\n  useDashboardDispatch,\n  useDashboardState,\n} from \"../../store/dashboard/dashboard.hooks\";\nimport {\n  FormControl,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\n\nconst MenuItemIcon = withStyles((theme: any) => ({\n  root: {\n    minWidth: \"34px\",\n  },\n}))(ListItemIcon);\n\nexport const ModuleSelectionMenu: React.VoidFunctionComponent = () => {\n  const dispatch = useDashboardDispatch();\n  const state = useDashboardState();\n\n  return (\n    <FormControl fullWidth>\n      <Select\n        inputProps={{\n          sx: {\n            padding: \"8px\",\n          },\n        }}\n        value={state.currentModule}\n        onChange={(e) => {\n          dispatch(dashboardModuleSet(e.target.value as DashboardModuleEnum));\n        }}\n      >\n        {[\n          {\n            text: \"Policy Editor\",\n            id: DashboardModuleEnum.PolicyEditor,\n            icon: <Edit sx={{ minWidth: \"32px\" }} />,\n          },\n          {\n            text: \"Policy Wizard\",\n            id: DashboardModuleEnum.PolicyWizard,\n            icon: <Assistant sx={{ minWidth: \"32px\" }} />,\n          },\n          {\n            text: \"Policy Templates\",\n            id: DashboardModuleEnum.PolicyTemplates,\n            icon: <Apps sx={{ minWidth: \"32px\" }} />,\n          },\n        ].map(({ text, id, icon }, index) => (\n          <MenuItem key={index} value={id}>\n            <div\n              style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}\n            >\n              <MenuItemIcon>{icon}</MenuItemIcon>\n              <ListItemText\n                primary={text}\n                disableTypography={true}\n                sx={{\n                  fontSize: \"18px\",\n                  lineHeight: \"24px\",\n                  margin: \"0px\",\n                }}\n              />\n            </div>\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import { DashboardAction, DashboardModuleEnum } from \"./dashboard.types\";\nimport { DASHBOARD_MODULE_SET } from \"../action-types\";\n\nexport function dashboardModuleSet(\n  currentModule: DashboardModuleEnum\n): Pick<DashboardAction, \"type\" | \"currentModule\"> {\n  return {\n    type: DASHBOARD_MODULE_SET,\n    currentModule,\n  };\n}\n","import {\n  PolicyEditorAction,\n  PolicyEditorPageEnum,\n} from \"./policy-editor.types\";\nimport {\n  POLICY_EDITOR_JSON_SRC_SET,\n  POLICY_EDITOR_JSON_TEXT_SET,\n  POLICY_EDITOR_JSON_VISIT,\n  POLICY_EDITOR_PAGE_SET,\n  POLICY_EDITOR_UI_SHOW_DEFAULT_POLICY_SET,\n} from \"../action-types\";\n\nexport function policyEditorPageSet(\n  currentTab: number,\n  currentPage: PolicyEditorPageEnum\n): Pick<PolicyEditorAction, \"type\" | \"currentTab\" | \"currentPage\"> {\n  return {\n    type: POLICY_EDITOR_PAGE_SET,\n    currentTab,\n    currentPage,\n  };\n}\n\nexport function policyEditorJsonTextSet(\n  strPolicy: string\n): Pick<PolicyEditorAction, \"type\" | \"strPolicy\"> {\n  return {\n    type: POLICY_EDITOR_JSON_TEXT_SET,\n    strPolicy,\n  };\n}\n\nexport function policyEditorJsonVisit(\n  visitor: (currentJson: any) => void\n): Pick<PolicyEditorAction, \"type\" | \"visitor\"> {\n  return {\n    type: POLICY_EDITOR_JSON_VISIT,\n    visitor,\n  };\n}\n\nexport function policyEditorJsonSrcSet(\n  url: string,\n  text: string\n): Pick<PolicyEditorAction, \"type\" | \"policySrcUrl\" | \"strPolicy\"> {\n  return {\n    type: POLICY_EDITOR_JSON_SRC_SET,\n    policySrcUrl: url,\n    strPolicy: text,\n  };\n}\n\nexport function policyEditorShowDefaultPolicySet(\n  show: boolean\n): Pick<PolicyEditorAction, \"type\" | \"showDefaultPolicy\"> {\n  return {\n    type: POLICY_EDITOR_UI_SHOW_DEFAULT_POLICY_SET,\n    showDefaultPolicy: show,\n  };\n}\n","import { PolicyEditorDispatch, PolicyEditorState } from \"./policy-editor.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../index\";\n\nexport const usePolicyEditorDispatch = () =>\n  useDispatch<PolicyEditorDispatch>();\nexport const usePolicyEditorState: () => PolicyEditorState = () =>\n  useSelector((state: ApplicationState) => state.policyEditorState);\n","import { Action } from \"redux\";\nimport { ReducerHandler } from \"../reducer.base\";\nimport { PolicyValidationError } from \"../../model/json-validate/policy.validator\";\n\nexport enum PolicyEditorPageEnum {\n  GeneralSettings,\n  Summary,\n  BlockingSettings,\n  Methods,\n  URLs,\n  Filetypes,\n  Headers,\n  Parameters,\n  Signatures,\n  SignaturesSets,\n  SignaturesPolicy,\n  BotDefense,\n  BotDefenseSettings,\n  BotDefenseMigrationsAnomalies,\n  BotDefenseMigrationsBrowsers,\n  BotDefenseMigrationsClasses,\n  BotDefenseMigrationsSignatures,\n  OpenAPI,\n  Evasions,\n  HttpProtocols,\n  ServerTechnologies,\n  Violations,\n  WhitelistIp,\n  DataGuard,\n  DataGuardSettings,\n  DataGuardEnforcementUrls,\n  CustomXffHeaders,\n  Hostnames,\n  AllowedResponseCodes,\n  Csrf,\n  CsrfProtection,\n  CsrfUrls,\n  EnforceCookieSettings,\n  CookieSettings,\n  Cookies,\n}\n\nexport type PolicyEditorState = {\n  currentTab: number;\n  currentPage: PolicyEditorPageEnum;\n  jsonCurrentPolicy: any;\n  strCurrentPolicy: string;\n  jsonParseError: boolean;\n  jsonValidationErrors: PolicyValidationError[];\n  policySrcUrl: string;\n  showDefaultPolicy: boolean;\n};\n\nexport interface PolicyEditorAction\n  extends Action,\n    Partial<{\n      currentTab: number;\n      currentPage: PolicyEditorPageEnum;\n      strPolicy: string;\n      visitor: (currentJson: any) => void;\n      policySrcUrl: string;\n      showDefaultPolicy: boolean;\n    }> {}\n\nexport type PolicyEditorDispatch = (\n  args: PolicyEditorAction\n) => PolicyEditorAction;\nexport type PolicyEditorReducerHandler = ReducerHandler<\n  PolicyEditorAction,\n  PolicyEditorState\n>;\n","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGeneralSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.90944 1.82914C8.04707 1.98191 8.21526 2.10406 8.40312 2.18767C8.59098 2.27129 8.79431 2.31449 8.99994 2.31449C9.20557 2.31449 9.4089 2.27129 9.59676 2.18767C9.78461 2.10406 9.95281 1.98191 10.0904 1.82914L10.7999 1.05064C11.0033 0.825592 11.2713 0.668993 11.5672 0.602332C11.8631 0.535671 12.1723 0.562215 12.4525 0.678322C12.7327 0.794428 12.9701 0.994406 13.1321 1.25081C13.2942 1.50721 13.3729 1.80748 13.3574 2.11039L13.3042 3.16039C13.2939 3.36522 13.3266 3.56993 13.4002 3.76135C13.4739 3.95276 13.5868 4.12664 13.7317 4.27176C13.8766 4.41689 14.0503 4.53005 14.2416 4.60396C14.4329 4.67787 14.6376 4.71089 14.8424 4.70089L15.8924 4.64764C16.1952 4.63271 16.4951 4.71177 16.7511 4.87398C17.0071 5.03618 17.2067 5.2736 17.3225 5.55369C17.4384 5.83377 17.4647 6.14282 17.398 6.43847C17.3313 6.73413 17.1748 7.00191 16.9499 7.20514L16.1684 7.91014C16.0159 8.04796 15.8939 8.21626 15.8104 8.40417C15.7269 8.59207 15.6838 8.7954 15.6838 9.00101C15.6838 9.20663 15.7269 9.40995 15.8104 9.59786C15.8939 9.78576 16.0159 9.95406 16.1684 10.0919L16.9499 10.7969C17.175 11.0002 17.3316 11.2682 17.3982 11.5641C17.4649 11.86 17.4384 12.1693 17.3223 12.4495C17.2061 12.7297 17.0062 12.9671 16.7498 13.1291C16.4934 13.2911 16.1931 13.3698 15.8902 13.3544L14.8402 13.3011C14.6349 13.2906 14.4297 13.3232 14.2378 13.397C14.046 13.4707 13.8717 13.584 13.7264 13.7293C13.581 13.8747 13.4678 14.0489 13.394 14.2408C13.3203 14.4326 13.2876 14.6379 13.2982 14.8431L13.3514 15.8931C13.3649 16.1945 13.2852 16.4927 13.1232 16.7473C12.9613 17.0018 12.7249 17.2003 12.4462 17.3158C12.1675 17.4313 11.86 17.4582 11.5655 17.3929C11.2709 17.3276 11.0037 17.1732 10.7999 16.9506L10.0942 16.1699C9.95643 16.0173 9.7882 15.8954 9.60036 15.8119C9.41251 15.7284 9.20924 15.6853 9.00369 15.6853C8.79813 15.6853 8.59487 15.7284 8.40702 15.8119C8.21918 15.8954 8.05094 16.0173 7.91319 16.1699L7.20444 16.9506C7.00105 17.1742 6.73366 17.3296 6.43872 17.3956C6.14379 17.4617 5.83566 17.4352 5.55635 17.3197C5.27703 17.2043 5.04012 17.0055 4.87792 16.7504C4.71571 16.4954 4.6361 16.1966 4.64994 15.8946L4.70394 14.8446C4.7145 14.6394 4.68184 14.4341 4.60809 14.2423C4.53433 14.0504 4.42111 13.8762 4.27576 13.7308C4.13041 13.5855 3.95617 13.4722 3.7643 13.3985C3.57244 13.3247 3.36722 13.2921 3.16194 13.3026L2.11194 13.3559C1.80915 13.3717 1.5089 13.2934 1.25239 13.1317C0.99589 12.9701 0.795715 12.733 0.679351 12.453C0.562987 12.173 0.536139 11.8639 0.602492 11.568C0.668845 11.2722 0.825147 11.0041 1.04994 10.8006L1.83069 10.0956C1.98327 9.95781 2.10525 9.78951 2.18873 9.60161C2.27222 9.4137 2.31535 9.21038 2.31535 9.00476C2.31535 8.79915 2.27222 8.59582 2.18873 8.40792C2.10525 8.22001 1.98327 8.05171 1.83069 7.91389L1.04994 7.20514C0.825876 7.00189 0.670051 6.7344 0.603765 6.43924C0.537479 6.14408 0.563966 5.83565 0.679606 5.55611C0.795246 5.27657 0.994395 5.03957 1.24983 4.87749C1.50527 4.71542 1.80452 4.63619 2.10669 4.65064L3.15669 4.70389C3.36236 4.7147 3.56801 4.68213 3.76027 4.60829C3.95254 4.53445 4.12712 4.421 4.27268 4.27529C4.41824 4.12959 4.53153 3.9549 4.60518 3.76256C4.67883 3.57023 4.7112 3.36455 4.70019 3.15889L4.64994 2.10814C4.63577 1.80608 4.71514 1.50702 4.87722 1.25174C5.0393 0.996467 5.2762 0.797419 5.55559 0.681759C5.83498 0.566098 6.14325 0.539459 6.43834 0.605476C6.73343 0.671493 7.00097 0.826951 7.20444 1.05064L7.90944 1.82914Z\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.625 9.00195C5.625 9.89706 5.98058 10.7555 6.61351 11.3884C7.24645 12.0214 8.10489 12.377 9 12.377C9.89511 12.377 10.7535 12.0214 11.3865 11.3884C12.0194 10.7555 12.375 9.89706 12.375 9.00195C12.375 8.10685 12.0194 7.2484 11.3865 6.61547C10.7535 5.98253 9.89511 5.62695 9 5.62695C8.10489 5.62695 7.24645 5.98253 6.61351 6.61547C5.98058 7.2484 5.625 8.10685 5.625 9.00195V9.00195Z\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGeneralSettings);\nexport default __webpack_public_path__ + \"static/media/general-settings.7d00361e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBlockSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.8125 7.3125H15.1875V17.4375H2.8125V7.3125Z\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.0625 7.3125V4.5C5.0625 3.45571 5.47734 2.45419 6.21577 1.71577C6.95419 0.977343 7.95571 0.5625 9 0.5625C10.0443 0.5625 11.0458 0.977343 11.7842 1.71577C12.5227 2.45419 12.9375 3.45571 12.9375 4.5V7.3125\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlockSettings);\nexport default __webpack_public_path__ + \"static/media/block-settings.81050806.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRequestResponse(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 20,\n    viewBox: \"0 0 18 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.0318 6.09869L8.66856 3.82779L10.8961 1.41798\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.9783 16.2884C16.9783 17.5635 15.9668 18.5807 14.7392 18.5807C13.5115 18.5807 12.5 17.5635 12.5 16.2884C12.5 15.0133 13.5115 13.9961 14.7392 13.9961C15.9668 13.9961 16.9783 15.0133 16.9783 16.2884Z\",\n    stroke: \"#4152B4\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.14484 16.2903C5.14484 17.5654 4.13332 18.5826 2.90567 18.5826C1.67803 18.5826 0.666504 17.5654 0.666504 16.2903C0.666504 15.0152 1.67803 13.998 2.90567 13.998C4.13332 13.998 5.14484 15.0152 5.14484 16.2903Z\",\n    stroke: \"#4152B4\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.14484 3.87433C5.14484 5.14943 4.13332 6.16662 2.90567 6.16662C1.67803 6.16662 0.666504 5.14943 0.666504 3.87433C0.666504 2.59923 1.67803 1.58203 2.90567 1.58203C4.13332 1.58203 5.14484 2.59923 5.14484 3.87433Z\",\n    stroke: \"#4152B4\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.62402 6.16992L2.64603 13.4955\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6571 13.4559L14.6573 6.67981C14.6574 5.02291 13.3142 3.67969 11.6573 3.67969H8.66748\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRequestResponse);\nexport default __webpack_public_path__ + \"static/media/request-response.6cc861ee.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSignatureBased(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 19,\n    viewBox: \"0 0 18 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.8371 13.1224L9.38318 14.4963L8.75143 11.7552L12.8532 2.49819C13.0345 2.08901 13.3709 1.76861 13.7885 1.60747C13.9952 1.52769 14.2157 1.48941 14.4372 1.49481C14.6588 1.50022 14.8771 1.54921 15.0797 1.63899C15.2823 1.72876 15.4652 1.85756 15.618 2.01804C15.7709 2.17851 15.8906 2.36752 15.9704 2.57427C16.0502 2.78101 16.0885 3.00145 16.083 3.22299C16.0776 3.44453 16.0287 3.66283 15.9389 3.86544L11.8371 13.1224Z\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.3975 3.52734L15.4831 4.8946\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.125 15.625C10.125 15.9234 10.0065 16.2095 9.79549 16.4205C9.58452 16.6315 9.29837 16.75 9 16.75H1.125\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSignatureBased);\nexport default __webpack_public_path__ + \"static/media/signature-based.2a96679f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAdvancedSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6244 2.89601L14.1682 5.35163H12.4369V3.62026L14.8924 1.1639C14.1337 0.749472 13.2669 0.575721 12.4071 0.665732C11.5473 0.755742 10.7353 1.10525 10.0789 1.66782C9.42248 2.23039 8.95278 2.97939 8.7322 3.81529C8.51162 4.6512 8.55061 5.53444 8.84397 6.34766L1.18494 14.0041C0.840174 14.3489 0.646484 14.8165 0.646484 15.3041C0.646484 15.7917 0.840174 16.2593 1.18494 16.6041C1.52971 16.9489 1.99732 17.1426 2.4849 17.1426C2.97248 17.1426 3.44008 16.9489 3.78485 16.6041L11.4417 8.94398C12.2548 9.23736 13.138 9.27634 13.9739 9.05576C14.8098 8.83517 15.5587 8.36545 16.1213 7.70901C16.6838 7.05257 17.0333 6.24049 17.1233 5.38067C17.2133 4.52085 17.0396 3.65399 16.6252 2.89527L16.6244 2.89601Z\",\n    stroke: \"#4152B4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdvancedSettings);\nexport default __webpack_public_path__ + \"static/media/advanced-settings.45a958e9.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.65186 13.0234V17.6979V19.4786C1.65186 20.4231 1.9609 21.329 2.51101 21.9969C3.06112 22.6648 3.80722 23.04 4.58519 23.04H20.7185C21.4965 23.04 22.2426 22.6648 22.7927 21.9969C23.3428 21.329 23.6519 20.4231 23.6519 19.4786V17.6979V13.0234\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.6519 1.43913V14.5859\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.7769 8.45076L12.6519 14.5859L6.52686 8.45076\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.48fdeff3.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { PolicyEditorPageEnum } from \"../../../store/policy-editor/policy-editor.types\";\nimport { ReactComponent as GeneralSettingsIcon } from \"../../../resources/policy-editor-sidebar-menu-icons/general-settings.svg\";\nimport { ReactComponent as BlockSettingsIcon } from \"../../../resources/policy-editor-sidebar-menu-icons/block-settings.svg\";\nimport { ReactComponent as RequestResponseIcon } from \"../../../resources/policy-editor-sidebar-menu-icons/request-response.svg\";\nimport { ReactComponent as SignatureBasedIcon } from \"../../../resources/policy-editor-sidebar-menu-icons/signature-based.svg\";\nimport { ReactComponent as AdvancedFeaturesIcon } from \"../../../resources/policy-editor-sidebar-menu-icons/advanced-settings.svg\";\n\nexport type PolicyEditorMenuGroupInfo = {\n  label: string;\n  icon: JSX.Element;\n  pages: PolicyEditorMenuPageInfo[];\n};\n\nexport type PolicyEditorMenuPageInfo = {\n  label: string;\n  id: PolicyEditorPageEnum;\n};\n\nexport const PolicyEditorMenuPagesModel: PolicyEditorMenuGroupInfo[] = [\n  {\n    label: \"General Settings\",\n    icon: <GeneralSettingsIcon />,\n    pages: [\n      {\n        label: \"Hostnames\",\n        id: PolicyEditorPageEnum.Hostnames,\n      },\n      {\n        label: \"XFF\",\n        id: PolicyEditorPageEnum.CustomXffHeaders,\n      },\n      {\n        label: \"Blocking Page Customization\",\n        id: PolicyEditorPageEnum.BlockingSettings,\n      },\n      {\n        label: \"Open API References\",\n        id: PolicyEditorPageEnum.OpenAPI,\n      },\n      {\n        label: \"Deny/Allow List\",\n        id: PolicyEditorPageEnum.WhitelistIp,\n      },\n      {\n        label: \"Enforcer Cookie Settings\",\n        id: PolicyEditorPageEnum.EnforceCookieSettings,\n      },\n    ],\n  },\n  {\n    label: \"Block Settings\",\n    icon: <BlockSettingsIcon />,\n    pages: [\n      {\n        label: \"Violations\",\n        id: PolicyEditorPageEnum.Violations,\n      },\n      {\n        label: \"Evasions\",\n        id: PolicyEditorPageEnum.Evasions,\n      },\n      {\n        label: \"HTTP Compliance\",\n        id: PolicyEditorPageEnum.HttpProtocols,\n      },\n    ],\n  },\n  {\n    label: \"Request/Response\",\n    icon: <RequestResponseIcon />,\n    pages: [\n      {\n        label: \"Methods\",\n        id: PolicyEditorPageEnum.Methods,\n      },\n      {\n        label: \"URLs\",\n        id: PolicyEditorPageEnum.URLs,\n      },\n      {\n        label: \"Parameters\",\n        id: PolicyEditorPageEnum.Parameters,\n      },\n      {\n        label: \"File Types\",\n        id: PolicyEditorPageEnum.Filetypes,\n      },\n      {\n        label: \"Headers\",\n        id: PolicyEditorPageEnum.Headers,\n      },\n      {\n        label: \"Response Codes\",\n        id: PolicyEditorPageEnum.AllowedResponseCodes,\n      },\n    ],\n  },\n  {\n    label: \"Signature Based\",\n    icon: <SignatureBasedIcon />,\n    pages: [\n      {\n        label: \"Sets\",\n        id: PolicyEditorPageEnum.SignaturesSets,\n      },\n      {\n        label: \"Signatures\",\n        id: PolicyEditorPageEnum.SignaturesPolicy,\n      },\n      {\n        label: \"Server Technologies\",\n        id: PolicyEditorPageEnum.ServerTechnologies,\n      },\n    ],\n  },\n  {\n    label: \"Advanced Features\",\n    icon: <AdvancedFeaturesIcon />,\n    pages: [\n      {\n        label: \"Bot Defense\",\n        id: PolicyEditorPageEnum.BotDefense,\n      },\n      {\n        label: \"CSRF\",\n        id: PolicyEditorPageEnum.Csrf,\n      },\n      {\n        label: \"Data Guard\",\n        id: PolicyEditorPageEnum.DataGuard,\n      },\n    ],\n  },\n];\n","import React from \"react\";\nimport { List, ListItem, ListItemText } from \"@mui/material\";\nimport { PolicyEditorMenuPagesModel } from \"../policy-editor/model/policy-editor.menu.pages.model\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { createStyles, withStyles } from \"@mui/styles\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../store/policy-editor/policy-editor.hooks\";\nimport { policyEditorPageSet } from \"../../store/policy-editor/policy-editor.actions\";\n\nconst ListItemMenu = withStyles((theme) =>\n  createStyles({\n    root: {\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      \"&:hover\": {\n        backgroundColor: \"#E1E4F2\",\n      },\n    },\n    selected: {\n      borderRight: \"4px solid #4152B4\",\n      backgroundColor: \"#E1E4F2\",\n    },\n  })\n)(ListItem);\n\nconst ListItemMenuText = withStyles((theme) =>\n  createStyles({\n    root: {\n      fontSize: \"12px\",\n      lineHeight: \"18px\",\n      margin: \"0px\",\n      paddingLeft: \"17px\",\n    },\n  })\n)(ListItemText);\n\nconst ListMenu = withStyles((theme) =>\n  createStyles({\n    root: {\n      padding: \"0px\",\n    },\n  })\n)(List);\n\nexport const PolicyEditorSidebarPagesComponent: React.VoidFunctionComponent =\n  () => {\n    const tabsTree = PolicyEditorMenuPagesModel;\n    const styles = useStyles();\n\n    const { currentPage } = usePolicyEditorState();\n    const dispatch = usePolicyEditorDispatch();\n\n    const menu = tabsTree.map((t, index) => (\n      <React.Fragment key={index}>\n        <div\n          style={{\n            display: \"flex\",\n            margin: \"4px\",\n            alignItems: \"center\",\n            paddingLeft: \"17px\",\n          }}\n        >\n          {t.icon}\n          <span className={styles.menuGroup}>{t.label}</span>\n        </div>\n        <ListMenu>\n          {t.pages.map((p, pageIndex) => (\n            <ListItemMenu\n              button\n              key={pageIndex}\n              selected={currentPage === p.id}\n              onClick={() => dispatch(policyEditorPageSet(0, p.id))}\n            >\n              <ListItemMenuText disableTypography>{p.label}</ListItemMenuText>\n            </ListItemMenu>\n          ))}\n        </ListMenu>\n      </React.Fragment>\n    ));\n\n    return <React.Fragment>{menu}</React.Fragment>;\n  };\n","import React from \"react\";\nimport { InputAdornment, Switch, TextField } from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { policyEditorShowDefaultPolicySet } from \"../../store/policy-editor/policy-editor.actions\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../store/policy-editor/policy-editor.hooks\";\nimport { PolicyEditorSidebarPagesComponent } from \"./policy-editor.sidebar.pages.component\";\n\nexport const PolicyEditorSidebarComponent: React.VoidFunctionComponent = () => {\n  const { showDefaultPolicy } = usePolicyEditorState();\n  const dispatch = usePolicyEditorDispatch();\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          paddingLeft: \"17px\",\n          paddingRight: \"17px\",\n          paddingTop: \"0px\",\n        }}\n      >\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n          placeholder=\"Search Menu\"\n          fullWidth={true}\n        />\n        <FormControlLabel\n          labelPlacement=\"end\"\n          label=\"Apply policy template\"\n          control={\n            <Switch\n              checked={showDefaultPolicy}\n              onChange={(e) => {\n                dispatch(policyEditorShowDefaultPolicySet(e.target.checked));\n              }}\n            />\n          }\n        />\n      </div>\n      <PolicyEditorSidebarPagesComponent />\n    </React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { useStyles } from \"../../utils/styles.hook\";\n\nimport { ModuleSelectionMenu } from \"./module-selection.menu\";\nimport { useDashboardState } from \"../../store/dashboard/dashboard.hooks\";\nimport { PolicyEditorSidebarComponent } from \"./policy-editor.sidebar.component\";\nimport { DashboardModuleEnum } from \"../../store/dashboard/dashboard.types\";\n\nexport type MainSidebarProps = Readonly<{ onDrawerClose: any }>;\n\nexport const MainSidebarComponent: React.FunctionComponent<MainSidebarProps> =\n  ({ onDrawerClose }) => {\n    const classes = useStyles();\n    const { currentModule } = useDashboardState();\n\n    const additionalSidebar = (() => {\n      switch (currentModule) {\n        case DashboardModuleEnum.PolicyEditor:\n          return <PolicyEditorSidebarComponent />;\n      }\n    })();\n\n    return (\n      <React.Fragment>\n        <div\n          className={classes.drawerHeader}\n          style={{\n            padding: \"17px\",\n            paddingTop: \"8px\",\n            paddingBottom: \"0px\",\n          }}\n        >\n          <ModuleSelectionMenu />\n        </div>\n        {additionalSidebar}\n      </React.Fragment>\n    );\n  };\n","export function download(filename: string, text: string): void {\n  const element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLink(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 26,\n    viewBox: \"0 0 26 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.3999 18.5978L18.6001 7.40234\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.45065 13.0235C7.77972 12.9849 7.1082 13.0884 6.48009 13.3273C5.85197 13.5661 5.28144 13.935 4.80587 14.4096L2.40589 16.8087C1.50571 17.7085 1 18.9289 1 20.2014C1 20.8315 1.12416 21.4555 1.36538 22.0376C1.6066 22.6197 1.96017 23.1487 2.40589 23.5942C2.85161 24.0397 3.38076 24.3932 3.96312 24.6343C4.54548 24.8754 5.16965 24.9995 5.8 24.9995C7.07304 24.9995 8.29394 24.494 9.19411 23.5942L11.5941 21.1952C12.0689 20.7198 12.4379 20.1495 12.6769 19.5216C12.9159 18.8937 13.0194 18.2225 12.9808 17.5518\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5491 12.976C18.22 13.0146 18.8915 12.911 19.5196 12.6722C20.1477 12.4333 20.7183 12.0645 21.1939 11.5899L23.5939 9.19087C24.4941 8.29105 24.9998 7.07063 24.9998 5.7981C24.9998 4.52556 24.4941 3.30515 23.5939 2.40533C22.6937 1.50551 21.4728 1 20.1997 1C18.9267 1 17.7058 1.50551 16.8056 2.40533L14.4056 4.80436C13.9318 5.28032 13.5639 5.85086 13.3259 6.47867C13.0879 7.10649 12.9851 7.77745 13.0242 8.4477\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLink);\nexport default __webpack_public_path__ + \"static/media/link.c54e5d5b.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgShare(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 5.24609C9 6.04174 9.31607 6.80481 9.87868 7.36741C10.4413 7.93002 11.2044 8.24609 12 8.24609C12.7956 8.24609 13.5587 7.93002 14.1213 7.36741C14.6839 6.80481 15 6.04174 15 5.24609C15 4.45044 14.6839 3.68738 14.1213 3.12477C13.5587 2.56216 12.7956 2.24609 12 2.24609C11.2044 2.24609 10.4413 2.56216 9.87868 3.12477C9.31607 3.68738 9 4.45044 9 5.24609V5.24609Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.75 18.7461C0.75 19.5417 1.06607 20.3048 1.62868 20.8674C2.19129 21.43 2.95435 21.7461 3.75 21.7461C4.54565 21.7461 5.30871 21.43 5.87132 20.8674C6.43393 20.3048 6.75 19.5417 6.75 18.7461C6.75 17.9504 6.43393 17.1874 5.87132 16.6248C5.30871 16.0622 4.54565 15.7461 3.75 15.7461C2.95435 15.7461 2.19129 16.0622 1.62868 16.6248C1.06607 17.1874 0.75 17.9504 0.75 18.7461V18.7461Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.25 18.7461C17.25 19.5417 17.5661 20.3048 18.1287 20.8674C18.6913 21.43 19.4544 21.7461 20.25 21.7461C21.0456 21.7461 21.8087 21.43 22.3713 20.8674C22.9339 20.3048 23.25 19.5417 23.25 18.7461C23.25 17.9504 22.9339 17.1874 22.3713 16.6248C21.8087 16.0622 21.0456 15.7461 20.25 15.7461C19.4544 15.7461 18.6913 16.0622 18.1287 16.6248C17.5661 17.1874 17.25 17.9504 17.25 18.7461V18.7461Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.75 18.7461H17.25\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.6592 7.74609L18.9412 16.0461\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.3411 7.74609L5.05908 16.0461\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShare);\nexport default __webpack_public_path__ + \"static/media/share.b3e40589.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport clsx from \"clsx\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { usePolicyEditorState } from \"../../store/policy-editor/policy-editor.hooks\";\nimport { download } from \"../../utils/download.util\";\nimport { PolicyEditorMenuPagesModel } from \"../policy-editor/model/policy-editor.menu.pages.model\";\nimport { PolicyEditorPageEnum } from \"../../store/policy-editor/policy-editor.types\";\n\nimport { ReactComponent as DownloadIcon } from \"../../resources/toolbar/download.svg\";\nimport { ReactComponent as LinkIcon } from \"../../resources/toolbar/link.svg\";\nimport { ReactComponent as ShareIcon } from \"../../resources/toolbar/share.svg\";\n\nexport type MainAppbarProps = Readonly<{\n  open: boolean;\n  onDrawerOpen: any;\n}>;\n\nexport const MainAppbarComponent: React.FunctionComponent<MainAppbarProps> = ({\n  open,\n  onDrawerOpen,\n}) => {\n  const classes = useStyles();\n  const { strCurrentPolicy, currentPage } = usePolicyEditorState();\n  const menu = PolicyEditorMenuPagesModel;\n\n  type PageInfo = {\n    category: string;\n    name: string;\n  };\n\n  const pageInfoById: (id: PolicyEditorPageEnum) => PageInfo = (id) => {\n    let rValue: PageInfo = {\n      category: \"\",\n      name: \"\",\n    };\n    menu.some((c) => {\n      return c.pages.some((p) => {\n        if (p.id === id) {\n          rValue = {\n            category: c.label,\n            name: p.label,\n          };\n          return true;\n        }\n        return false;\n      });\n    });\n\n    return rValue;\n  };\n\n  const handleDownload = () => {\n    const date = new Date();\n\n    download(`waf-${date.getTime()}.json`, strCurrentPolicy);\n  };\n\n  const pageInfo: PageInfo = pageInfoById(currentPage);\n\n  return (\n    <Toolbar className={classes.headerToolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={onDrawerOpen}\n        edge=\"start\"\n        className={clsx(classes.menuButton, open && classes.hide)}\n        size=\"large\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <div style={{ width: \"100%\" }}>\n        <Typography className={classes.headerCategory}>\n          {pageInfo.category}\n        </Typography>\n        <Typography className={classes.headerPage}>{pageInfo.name}</Typography>\n      </div>\n      <IconButton\n        color=\"inherit\"\n        href=\"https://github.com/464d41/aws-waf-solutuon-template\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        size=\"large\"\n      >\n        <LinkIcon />\n      </IconButton>\n      <IconButton color=\"inherit\" onClick={handleDownload} size=\"large\">\n        <DownloadIcon />\n      </IconButton>\n      <IconButton color=\"inherit\" disabled={true} size=\"large\">\n        <ShareIcon />\n      </IconButton>\n    </Toolbar>\n  );\n};\n","import * as React from \"react\";\nimport clsx from \"clsx\";\nimport Drawer from \"@mui/material/Drawer\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport AppBar from \"@mui/material/AppBar\";\nimport { useState } from \"react\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { MainSidebarComponent } from \"./main.sidebar.component\";\nimport { MainAppbarComponent } from \"./main.appbar.component\";\n\nexport const PolicyEditorDashboardComponent: React.FunctionComponent = ({\n  children,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const onDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const onDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <MainAppbarComponent onDrawerOpen={onDrawerOpen} open={open} />\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <MainSidebarComponent onDrawerClose={onDrawerClose} />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Table from \"@mui/material/Table\";\nimport Box from \"@mui/material/Box\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport { TableBody } from \"@mui/material\";\nimport createStyles from '@mui/styles/createStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport IconButton from \"@mui/material/IconButton\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nconst StyledTableRow = withStyles((theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\nexport const PolicyTemplatesComponent: React.VoidFunctionComponent = () => {\n  return (\n    <TableContainer component={Box}>\n      <Table>\n        {/*<TableHead>*/}\n        {/*  <TableRow>*/}\n        {/*    <TableCell>*/}\n        {/*      <Typography variant={\"h6\"}>Application</Typography>*/}\n        {/*    </TableCell>*/}\n        {/*    <TableCell>*/}\n        {/*      <Typography variant={\"h6\"}>Description</Typography>*/}\n        {/*    </TableCell>*/}\n        {/*    <TableCell></TableCell>*/}\n        {/*    <TableCell></TableCell>*/}\n        {/*  </TableRow>*/}\n        {/*</TableHead>*/}\n        <TableBody>\n          {[\n            {\n              app: \"Wordpress\",\n              description:\n                \"Welcome to the world’s most popular website builder\",\n              ghLink:\n                \"https://github.com/464d41/waf-policy-templates/blob/master/policies/wordpress.json\",\n              wafflerLink:\n                \"https://waffler.dev/prod/?ref=https://raw.githubusercontent.com/464d41/waf-policy-templates/master/policies/wordpress.json\",\n            },\n            {\n              app: \"Sharepoint\",\n              description:\n                \"Share and manage content, knowledge, and applications to empower teamwork, quickly find information, and seamlessly collaborate across the organization\",\n              ghLink: \"\",\n              wafflerLink: \"\",\n            },\n            {\n              app: \"Mega CRM\",\n              description:\n                \"Customer relationship management is a process in which a business or other organization administers its interactions with customers, typically using data analysis to study large amounts of information\",\n              ghLink: \"\",\n              wafflerLink: \"\",\n            },\n            {\n              app: \"Super ERP\",\n              description:\n                \"Enterprise resource planning is the integrated management of main business processes, often in real time and mediated by software and technology.\",\n              ghLink: \"\",\n              wafflerLink: \"\",\n            },\n          ].map((item) => {\n            return (\n              <StyledTableRow>\n                <TableCell>\n                  <b>{item.app}</b>\n                </TableCell>\n                <TableCell>{item.description}</TableCell>\n                <TableCell>\n                  {item.ghLink === \"\" ? undefined : (\n                    <IconButton\n                      color=\"inherit\"\n                      href={item.ghLink}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      size=\"large\">\n                      <GitHubIcon />\n                    </IconButton>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.wafflerLink === \"\" ? undefined : (\n                    <IconButton\n                      color=\"inherit\"\n                      href={item.wafflerLink}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      size=\"large\">\n                      <EditIcon />\n                    </IconButton>\n                  )}\n                </TableCell>\n              </StyledTableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React from \"react\";\nimport { InputAdornment, Theme } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 800,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nconst ErrorText = withStyles((theme: Theme) => ({\n  root: {\n    \"&:first-letter\": {\n      textTransform: \"capitalize\",\n    },\n  },\n}))(Box);\n\nexport type ErrorFieldControlAdornmentProps = {\n  errorMessage: string;\n};\n\nexport const ErrorFieldControlAdornment: React.FunctionComponent<ErrorFieldControlAdornmentProps> =\n  ({ errorMessage }) => {\n    return (\n      <InputAdornment position=\"start\">\n        <HtmlTooltip\n          title={\n            <React.Fragment>\n              <ErrorText>{errorMessage}</ErrorText>\n            </React.Fragment>\n          }\n        >\n          <ErrorIcon style={{ color: \"red\", cursor: \"pointer\" }} />\n        </HtmlTooltip>\n      </InputAdornment>\n    );\n  };\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport { GridFieldValue } from \"./grid-field-value.type\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { ErrorFieldControlAdornment } from \"./field-control/error.field-control-adornment\";\n\nexport type GridFieldValueProps = {\n  rows: GridFieldValue[];\n};\n\nexport const GridFieldValueControl: React.FunctionComponent<GridFieldValueProps> =\n  ({ rows }) => {\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n\n    const { jsonValidationErrors } = usePolicyEditorState();\n\n    return (\n      <Grid container spacing={1}>\n        <Grid container item spacing={1} xs={12}>\n          {rows.map((row, index) => {\n            const error = jsonValidationErrors.filter((x) =>\n              row.errorPath\n                ? row.errorPath.find((err) => err === x.property)\n                : false\n            );\n            const hasError: boolean = error && error.length > 0;\n\n            const startAdornment = hasError ? (\n              <ErrorFieldControlAdornment errorMessage={error[0].message} />\n            ) : undefined;\n\n            return (\n              <React.Fragment key={index}>\n                <Grid container item alignItems={\"center\"} xs={3}>\n                  <Typography\n                    color={selectedIndex === index ? \"primary\" : undefined}\n                    variant=\"body2\"\n                  >\n                    {row.title}\n                  </Typography>\n                </Grid>\n                <Grid item xs={9}>\n                  {row.controlInfo.createControl({\n                    error: hasError,\n                    startAdornment: hasError ? startAdornment : undefined,\n                    fullWidth: true,\n                    hiddenLabel: true,\n                    variant: \"filled\",\n                    margin: \"dense\",\n                    onSelect: () => setSelectedIndex(index),\n                    onBlur: () => setSelectedIndex(-1),\n                  })}\n                </Grid>\n              </React.Fragment>\n            );\n          })}\n        </Grid>\n      </Grid>\n    );\n  };\n","import { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../policy-editor.hooks\";\n\nexport abstract class BaseVisitor {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {}\n}\n\nexport function useVisitor<T extends BaseVisitor>(TVisitor: {\n  new (dispatch: PolicyEditorDispatch, json: any): T;\n}) {\n  const { jsonCurrentPolicy } = usePolicyEditorState();\n  return new TVisitor(usePolicyEditorDispatch(), jsonCurrentPolicy);\n}\n","// To parse this data:\n//\n//   import { Convert, PolicyD } from \"./file\";\n//\n//   const policyD = Convert.toPolicyD(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface PolicyDObject {\n  policy?: Policy;\n}\n\nexport interface Policy {\n  antivirus?: Antivirus;\n  /**\n   * The character encoding for the web application. The character encoding determines how the\n   * policy processes the character sets. The default is Auto detect.\n   */\n  applicationLanguage?: ApplicationLanguage;\n  \"behavioral-enforcement\"?: BehavioralEnforcement;\n  \"blocking-settings\"?: BlockingSettings;\n  \"bot-defense\"?: BotDefense;\n  \"brute-force-attack-preventions\"?: BruteForceAttackPrevention[];\n  /**\n   * Specifies whether the security policy treats microservice URLs, file types, URLs, and\n   * parameters as case sensitive or not. When this setting is enabled, the system stores\n   * these security policy elements in lowercase in the security policy configuration.\n   */\n  caseInsensitive?: boolean;\n  \"character-sets\"?: CharacterSet[];\n  /**\n   * The maximum length of a cookie header name and value that the system processes. The\n   * system calculates and enforces a cookie header length based on the sum of the length of\n   * the cookie header name and value.\n   */\n  \"cookie-settings\"?: CookieSettings;\n  cookies?: Cooky[];\n  \"csrf-protection\"?: CSRFProtection;\n  \"csrf-urls\"?: CSRFURL[];\n  /**\n   * Data Guard feature can prevent responses from exposing sensitive information by masking\n   * the data.\n   */\n  \"data-guard\"?: DataGuard;\n  \"database-protection\"?: DatabaseProtection;\n  \"deception-response-pages\"?: DeceptionResponsePage[];\n  \"deception-settings\"?: DeceptionSettings;\n  /**\n   * Specifies the description of the policy.\n   */\n  description?: string;\n  \"disabled-action-items\"?: DisabledActionItem[];\n  \"disallowed-geolocations\"?: DisallowedGeolocation[];\n  /**\n   * Passive Mode allows the policy to be associated with a Performance L4 Virtual Server\n   * (using a FastL4 profile). With FastL4, traffic is analyzed but is not modified in any way.\n   */\n  enablePassiveMode?: boolean;\n  /**\n   * How the system processes a request that triggers a security policy violation.\n   * - **Blocking:** When the enforcement mode is set to blocking, traffic is blocked if it\n   * causes a violation (configured for blocking).\n   * - **Transparent:** When the enforcement mode is set to transparent, traffic is not\n   * blocked even if a violation is triggered.\n   */\n  enforcementMode?: PolicyEnforcementMode;\n  filetypes?: Filetype[];\n  /**\n   * The full name of the policy including partition.\n   */\n  fullPath?: string;\n  /**\n   * This section includes several advanced policy configuration settings.\n   */\n  general?: General;\n  \"gwt-profiles\"?: GWTProfile[];\n  /**\n   * The maximum length of an HTTP header name and value that the system processes. The system\n   * calculates and enforces the HTTP header length based on the sum of the length of the HTTP\n   * header name and value.\n   */\n  \"header-settings\"?: HeaderSettings;\n  headers?: Header[];\n  \"host-names\"?: HostName[];\n  \"ip-intelligence\"?: IPIntelligence;\n  \"json-profiles\"?: JSONProfile[];\n  \"json-validation-files\"?: JSONValidationFile[];\n  \"login-enforcement\"?: LoginEnforcement;\n  \"login-pages\"?: LoginPage[];\n  methods?: MethodElement[];\n  microservices?: Microservice[];\n  /**\n   * The unique user-given name of the policy. Policy names cannot contain spaces or special\n   * characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore\n   * (_).\n   */\n  name: string;\n  \"navigation-parameters\"?: NavigationParameter[];\n  \"open-api-files\"?: OpenAPIFile[];\n  parameters?: ParameterElement[];\n  \"plain-text-profiles\"?: PlainTextProfile[];\n  \"policy-builder\"?: PolicyBuilder;\n  /**\n   * Defines Policy Builder learning location and related configuration.\n   */\n  \"policy-builder-central-configuration\"?: PolicyBuilderCentralConfiguration;\n  \"policy-builder-cookie\"?: PolicyBuilderCookie;\n  /**\n   * Defines Policy Builder behavior for filetypes\n   */\n  \"policy-builder-filetype\"?: PolicyBuilderFiletype;\n  \"policy-builder-header\"?: PolicyBuilderHeader;\n  /**\n   * Defines Policy Builder behavior for parameters\n   */\n  \"policy-builder-parameter\"?: PolicyBuilderParameter;\n  \"policy-builder-redirection-protection\"?: PolicyBuilderRedirectionProtection;\n  /**\n   * Defines Policy Builder behavior for Server Technologies\n   */\n  \"policy-builder-server-technologies\"?: PolicyBuilderServerTechnologies;\n  \"policy-builder-sessions-and-logins\"?: PolicyBuilderSessionsAndLogins;\n  \"policy-builder-url\"?: PolicyBuilderURL;\n  /**\n   * When creating a security policy, you can determine whether a security policy\n   * differentiates between HTTP and HTTPS URLs.\n   * If enabled, the security policy differentiates between HTTP and HTTPS URLs.\n   * If disabled, the security policy configures URLs without specifying a specific protocol.\n   * This is useful for applications that behave the same for HTTP and HTTPS, and it keeps the\n   * security policy from including the same URL twice.\n   */\n  protocolIndependent?: boolean;\n  \"redirection-protection\"?: RedirectionProtection;\n  \"redirection-protection-domains\"?: RedirectionProtectionDomain[];\n  \"request-loggers\"?: RequestLogger[];\n  \"response-pages\"?: ResponsePage[];\n  \"sensitive-parameters\"?: SensitiveParameter[];\n  \"server-technologies\"?: ServerTechnology[];\n  \"session-tracking\"?: SessionTracking;\n  \"session-tracking-statuses\"?: SessionTrackingStatus[];\n  \"signature-requirements\"?: SignatureRequirement[];\n  \"signature-sets\"?: SignatureSet[];\n  \"signature-settings\"?: SignatureSettings;\n  signatures?: PolicySignature[];\n  softwareVersion?: string;\n  /**\n   * Specifies the template to populate the attributes of a new policy. The template is only\n   * used when creating the policy - a security policy is always created based on a\n   * user-defined or system-supplied template.\n   * Unlike parent policies, the templates do not affect the policy after it is created. If\n   * you modify a template, policies created from it in the past are not affected.\n   */\n  template: Template;\n  \"threat-campaign-settings\"?: ThreatCampaignSettings;\n  \"threat-campaigns\"?: ThreatCampaign[];\n  /**\n   * The type of policy you want to create. The default policy type is Security.\n   * - **Parent:** A parent policy can be used as a basis for similar child policies. Parent\n   * policy settings can be inherited to its child policies. A parent policy cannot be applied\n   * to Virtual Servers. No traffic can flow through them. They are just models.\n   * - **Security:** A security policy can be created from a parent policy or as a stand-alone\n   * policy. Changes to a security policy do not affect other security policies. A security\n   * policy can be applied to a virtual server.\n   */\n  type?: PolicyType;\n  urls?: URLElement[];\n  webhooks?: Webhook[];\n  \"websocket-urls\"?: WebsocketURL[];\n  \"whitelist-ips\"?: WhitelistIP[];\n  \"xml-profiles\"?: XMLProfile[];\n  \"xml-validation-files\"?: XMLValidationFileElement[];\n}\n\nexport interface Antivirus {\n  inspectHttpUploads?: boolean;\n}\n\n/**\n * The character encoding for the web application. The character encoding determines how the\n * policy processes the character sets. The default is Auto detect.\n */\nexport enum ApplicationLanguage {\n  AutoDetect = \"auto-detect\",\n  Big5 = \"big5\",\n  EUCJp = \"euc-jp\",\n  EUCKr = \"euc-kr\",\n  Gb18030 = \"gb18030\",\n  Gb2312 = \"gb2312\",\n  Gbk = \"gbk\",\n  ISO88591 = \"iso-8859-1\",\n  ISO885910 = \"iso-8859-10\",\n  ISO885913 = \"iso-8859-13\",\n  ISO885915 = \"iso-8859-15\",\n  ISO885916 = \"iso-8859-16\",\n  ISO88592 = \"iso-8859-2\",\n  ISO88593 = \"iso-8859-3\",\n  ISO88594 = \"iso-8859-4\",\n  ISO88595 = \"iso-8859-5\",\n  ISO88596 = \"iso-8859-6\",\n  ISO88597 = \"iso-8859-7\",\n  ISO88598 = \"iso-8859-8\",\n  ISO88599 = \"iso-8859-9\",\n  Koi8R = \"koi8-r\",\n  ShiftJis = \"shift_jis\",\n  UTF8 = \"utf-8\",\n  Windows1250 = \"windows-1250\",\n  Windows1251 = \"windows-1251\",\n  Windows1252 = \"windows-1252\",\n  Windows1253 = \"windows-1253\",\n  Windows1255 = \"windows-1255\",\n  Windows1256 = \"windows-1256\",\n  Windows1257 = \"windows-1257\",\n  Windows874 = \"windows-874\",\n}\n\nexport interface BehavioralEnforcement {\n  behavioralEnforcementViolations?: BehavioralEnforcementViolation[];\n  enableBehavioralEnforcement?: boolean;\n  enableBlockingCveSignatures?: boolean;\n  enableBlockingHighAccuracySignatures?: boolean;\n  enableBlockingLikelyMaliciousTransactions?: boolean;\n  enableBlockingSuspiciousTransactions?: boolean;\n  enableBlockingViolations?: boolean;\n}\n\nexport interface BehavioralEnforcementViolation {\n  name?: string;\n}\n\nexport interface BlockingSettings {\n  evasions?: Evasion[];\n  \"http-protocols\"?: HTTPProtocol[];\n  violations?: BlockingSettingsViolation[];\n  \"web-services-securities\"?: WebServicesSecurity[];\n}\n\n/**\n * This section defines behavior of 'Evasion technique detected' (VIOL_EVASION) violation\n * sub-violations.\n * User can control which sub-violations are enabled (alarmed/blocked) and/or learned.\n * Behavior of sub-violations depends on the block/alarm/learn settings of 'Evasion\n * technique detected' violation,\n * defined in /policy/blocking-settings/violations section:\n * - If learn is disabled in violation - no learning will be done for sub-violations\n * - If both alarm and block are disabled - enable flag becomes irrelevant, since there will\n * be no block/alarm for all sub-violations\n */\nexport interface Evasion {\n  /**\n   * Human-readable name of sub-violation.\n   */\n  description: EvasionDescription;\n  /**\n   * Defines if sub-violation is enforced - alarmed or blocked, according to the 'Evasion\n   * technique detected' (VIOL_EVASION) violation blocking settings.\n   */\n  enabled?: boolean;\n  /**\n   * Defines if sub-violation is learned. Sub-violations are learned only when learn is\n   * enabled for the 'Evasion technique detected' (VIOL_EVASION) violation.\n   */\n  learn?: boolean;\n  /**\n   * Defines how many times the system decodes URI and parameter values before the request is\n   * considered an evasion.\n   * Relevant only for the 'Multiple decoding' sub-violation.\n   */\n  maxDecodingPasses?: number;\n}\n\n/**\n * Human-readable name of sub-violation.\n */\nexport enum EvasionDescription {\n  ApacheWhitespace = \"Apache whitespace\",\n  BadUnescape = \"Bad unescape\",\n  BareByteDecoding = \"Bare byte decoding\",\n  DirectoryTraversals = \"Directory traversals\",\n  IISBackslashes = \"IIS backslashes\",\n  IISUnicodeCodepoints = \"IIS Unicode codepoints\",\n  MultipleDecoding = \"Multiple decoding\",\n  UDecoding = \"%u decoding\",\n}\n\n/**\n * This section defines behavior of 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL)\n * violation sub-violations.\n * User can control which sub-violations are enabled (alarmed/blocked) and/or learned.\n * Behavior of sub-violations depends on the block/alarm/learn settings of 'HTTP protocol\n * compliance failed' violation,\n * defined in /policy/blocking-settings/violations section:\n * - If learn is disabled in violation - no learning will be done for sub-violations\n * - If both alarm and block are disabled - enable flag becomes irrelevant, since there will\n * be no block/alarm for all sub-violations\n */\nexport interface HTTPProtocol {\n  /**\n   * Human-readable name of sub-violation\n   */\n  description: HTTPProtocolDescription;\n  /**\n   * Defines if sub-violation is enforced - alarmed or blocked, according to the 'HTTP\n   * protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation blocking settings\n   */\n  enabled?: boolean;\n  /**\n   * Defines if sub-violation is learned. Sub-violations is learned only when learn is enabled\n   * for the 'HTTP protocol compliance failed' (VIOL_HTTP_PROTOCOL) violation\n   */\n  learn?: boolean;\n  /**\n   * Defines maximum allowed number of headers in request.\n   * Relevant only for the 'Check maximum number of headers' sub-violation\n   */\n  maxHeaders?: number;\n  /**\n   * Defines maximum allowed number of paramters in request.\n   * Relevant only for the 'Check maximum number of parameters' sub-violation\n   */\n  maxParams?: number;\n}\n\n/**\n * Human-readable name of sub-violation\n */\nexport enum HTTPProtocolDescription {\n  BadHTTPVersion = \"Bad HTTP version\",\n  BadHostHeaderValue = \"Bad host header value\",\n  BadMultipartFormDataRequestParsing = \"Bad multipart/form-data request parsing\",\n  BadMultipartParametersParsing = \"Bad multipart parameters parsing\",\n  BodyInGETOrHEADRequests = \"Body in GET or HEAD requests\",\n  CRLFCharactersBeforeRequestStart = \"CRLF characters before request start\",\n  CheckMaximumNumberOfHeaders = \"Check maximum number of headers\",\n  CheckMaximumNumberOfParameters = \"Check maximum number of parameters\",\n  ChunkedRequestWithContentLengthHeader = \"Chunked request with Content-Length header\",\n  ContentLengthShouldBeAPositiveNumber = \"Content length should be a positive number\",\n  HeaderNameWithNoHeaderValue = \"Header name with no header value\",\n  HighASCIICharactersInHeaders = \"High ASCII characters in headers\",\n  HostHeaderContainsIPAddress = \"Host header contains IP address\",\n  MultipleHostHeaders = \"Multiple host headers\",\n  NoHostHeaderInHTTP11Request = \"No Host header in HTTP/1.1 request\",\n  NullInRequest = \"Null in request\",\n  POSTRequestWithContentLength0 = \"POST request with Content-Length: 0\",\n  SeveralContentLengthHeaders = \"Several Content-Length headers\",\n  UnescapedSpaceInURL = \"Unescaped space in URL\",\n  UnparsableRequestContent = \"Unparsable request content\",\n}\n\nexport interface BlockingSettingsViolation {\n  alarm?: boolean;\n  block?: boolean;\n  description?: string;\n  learn?: boolean;\n  name?: string;\n}\n\nexport interface WebServicesSecurity {\n  description: WebServicesSecurityDescription;\n  enabled?: boolean;\n  learn?: boolean;\n}\n\nexport enum WebServicesSecurityDescription {\n  CertificateError = \"Certificate Error\",\n  CertificateExpired = \"Certificate Expired\",\n  DecryptionError = \"Decryption Error\",\n  EncryptionError = \"Encryption Error\",\n  ExpiredTimestamp = \"Expired Timestamp\",\n  InternalError = \"Internal Error\",\n  InvalidTimestamp = \"Invalid Timestamp\",\n  MalformedError = \"Malformed Error\",\n  MissingTimestamp = \"Missing Timestamp\",\n  SigningError = \"Signing Error\",\n  TimestampExpirationIsTooFarInTheFuture = \"Timestamp expiration is too far in the future\",\n  UnSignedTimestamp = \"UnSigned Timestamp\",\n  VerificationError = \"Verification Error\",\n}\n\nexport interface BotDefense {\n  mitigations?: Mitigations;\n  settings?: Settings;\n}\n\nexport interface Mitigations {\n  classes?: Class[];\n  signatures?: MitigationsSignature[];\n}\n\nexport interface Class {\n  action?: ClassAction;\n  name: ClassName;\n}\n\nexport enum ClassAction {\n  Alarm = \"alarm\",\n  Block = \"block\",\n  Detect = \"detect\",\n  Ignore = \"ignore\",\n}\n\nexport enum ClassName {\n  Malicious = \"malicious\",\n  Trusted = \"trusted\",\n  Untrusted = \"untrusted\",\n}\n\n/**\n * This section defines the properties of signature on the policy.\n */\nexport interface MitigationsSignature {\n  action?: ClassAction;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n}\n\nexport interface Settings {\n  isEnabled?: boolean;\n}\n\n/**\n * Defines configuration for Brute Force Protection feature.\n * There is default configuration (one with bruteForceProtectionForAllLoginPages flag and\n * without url) that applies to all configured login URLs unless there exists another brute\n * force configuration for a specific login page.\n */\nexport interface BruteForceAttackPrevention {\n  /**\n   * When enabled, enables Brute Force Protection for all configured login URLs.\n   * When disabled, only brute force configurations for specific login pages are applied in\n   * case they exist.\n   */\n  bruteForceProtectionForAllLoginPages?: boolean;\n  /**\n   * Specifies configuration for CAPTCHA Bypass Mitigation.\n   */\n  captchaBypassCriteria?: CAPTCHABypassCriteria;\n  /**\n   * Specifies configuration for Client Side Integrity Bypass Mitigation.\n   */\n  clientSideIntegrityBypassCriteria?: ClientSideIntegrityBypassCriteria;\n  /**\n   * Specifies configuration for detecting distributed brute force attacks.\n   */\n  detectionCriteria?: DetectionCriteria;\n  /**\n   * Specifies configuration for Leaked Credentials Detection.\n   */\n  leakedCredentialsCriteria?: LeakedCredentialsCriteria;\n  /**\n   * Specifies configuration for detecting brute force attacks for Device ID.\n   */\n  loginAttemptsFromTheSameDeviceId?: LoginAttemptsFromTheSameDeviceID;\n  /**\n   * Specifies configuration for detecting brute force attacks from IP Address.\n   */\n  loginAttemptsFromTheSameIp?: LoginAttemptsFromTheSameIP;\n  /**\n   * Specifies configuration for detecting brute force attacks for Username.\n   */\n  loginAttemptsFromTheSameUser?: LoginAttemptsFromTheSameUser;\n  /**\n   * Defines detection period (measured in minutes) for distributed brute force attacks.\n   */\n  measurementPeriod?: number;\n  /**\n   * Defines prevention period (measured in minutes) for distributed brute force attacks.\n   */\n  preventionDuration?: PreventionDurationEnum | number;\n  /**\n   * Defines prevention period (measured in minutes) for source-based brute force attacks.\n   */\n  reEnableLoginAfter?: number;\n  /**\n   * Defines detection period (measured in minutes) for source-based brute force attacks.\n   */\n  sourceBasedProtectionDetectionPeriod?: number;\n  /**\n   * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n   * is protected by Brute Force Protection feature.\n   */\n  url: BruteForceAttackPreventionURL;\n}\n\n/**\n * Specifies configuration for CAPTCHA Bypass Mitigation.\n */\nexport interface CAPTCHABypassCriteria {\n  /**\n   * Specifies action that is applied when defined threshold is reached.\n   *\n   * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n   * and send the Blocking page.\n   * - **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n   * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n   * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n   * should look like an application failed login page. Unlike with the Blocking page, when\n   * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n   * from a mitigation. As a result, the attacker will not change identity (Source IP or\n   * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n   * recommended when mitigation is request blocking.\n   */\n  action?: CAPTCHABypassCriteriaAction;\n  /**\n   * When enabled, the system counts successful CAPTCHA challenges with failed logins from IP\n   * Address / Device ID.\n   */\n  enabled?: boolean;\n  /**\n   * After configured threshold (number of successful CAPTCHA challenges with failed logins\n   * from IP Address / Device ID) defined action will be applied for the next login attempt\n   */\n  threshold?: number;\n}\n\n/**\n * Specifies action that is applied when defined threshold is reached.\n *\n * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n * and send the Blocking page.\n * - **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n * should look like an application failed login page. Unlike with the Blocking page, when\n * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n * from a mitigation. As a result, the attacker will not change identity (Source IP or\n * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n * recommended when mitigation is request blocking.\n */\nexport enum CAPTCHABypassCriteriaAction {\n  AlarmAndBlockingPage = \"alarm-and-blocking-page\",\n  AlarmAndDrop = \"alarm-and-drop\",\n  AlarmAndHoneypotPage = \"alarm-and-honeypot-page\",\n}\n\n/**\n * Specifies configuration for Client Side Integrity Bypass Mitigation.\n */\nexport interface ClientSideIntegrityBypassCriteria {\n  /**\n   * Specifies action that is applied when defined threshold is reached.\n   *\n   * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n   * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n   * client successfully passes the CAPTCHA challenge.\n   */\n  action?: ClientSideIntegrityBypassCriteriaAction;\n  /**\n   * When enabled, the system counts successful challenges with failed logins from IP Address\n   * / Device ID / Username.\n   * Legitimate users who have disabled JavaScripting on their browsers for security reasons\n   * will fail a client side integrity challenge.\n   */\n  enabled?: boolean;\n  /**\n   * After configured threshold (number of successful challenges with failed logins from IP\n   * Address / Device ID / Username) defined action will be applied for the next login attempt\n   */\n  threshold?: number;\n}\n\n/**\n * Specifies action that is applied when defined threshold is reached.\n *\n * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n * client successfully passes the CAPTCHA challenge.\n */\nexport enum ClientSideIntegrityBypassCriteriaAction {\n  AlarmAndCAPTCHA = \"alarm-and-captcha\",\n}\n\n/**\n * Specifies configuration for detecting distributed brute force attacks.\n */\nexport interface DetectionCriteria {\n  /**\n   * Specifies action that is applied when one of the defined thresholds\n   * (credentialsStuffingMatchesReached, failedLoginAttemptsRateReached) is reached.\n   *\n   * - **alarm**: The system will log the login attempt.\n   * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n   * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n   * client successfully passes the CAPTCHA challenge.\n   * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n   * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n   * response. Legal browsers are able to execute JavaScript and produce a valid response,\n   * whereas bots cannot. A login attempt is logged if the client successfully passes the\n   * Client Side Integrity challenge.\n   * - **alarm-and-client-side-integrity-captcha**: The system sends a Client Side Integrity\n   * challenge upon the first failed login attempt from a source and a CAPTCHA challenge upon\n   * second and all subsequent failed login attempts. A login attempt is logged if client\n   * successfully passes the challenge. This enforcement action should be chosen if CAPTCHA is\n   * considered intrusive. Benign users who mistype their password will likely get only the\n   * Client Side Integrity challenge, while an attacker will eventually get the CAPTCHA\n   * challenge.\n   */\n  action?: DetectionCriteriaAction;\n  /**\n   * After configured threshold (number of detected login attempts that match known leaked\n   * credentials library) defined action will be applied for the next login attempt.\n   */\n  credentialsStuffingMatchesReached?: number;\n  /**\n   * When enabled, the system detects login attempts that match known leaked credentials\n   * library.\n   */\n  detectCredentialsStuffingAttack?: boolean;\n  /**\n   * When enabled, the system detects distributed brute force attacks.\n   */\n  detectDistributedBruteForceAttack?: boolean;\n  /**\n   * After configured threshold (number of failed login attempts within measurementPeriod)\n   * defined action will be applied for the next login attempt.\n   */\n  failedLoginAttemptsRateReached?: number;\n}\n\n/**\n * Specifies action that is applied when one of the defined thresholds\n * (credentialsStuffingMatchesReached, failedLoginAttemptsRateReached) is reached.\n *\n * - **alarm**: The system will log the login attempt.\n * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n * client successfully passes the CAPTCHA challenge.\n * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n * response. Legal browsers are able to execute JavaScript and produce a valid response,\n * whereas bots cannot. A login attempt is logged if the client successfully passes the\n * Client Side Integrity challenge.\n * - **alarm-and-client-side-integrity-captcha**: The system sends a Client Side Integrity\n * challenge upon the first failed login attempt from a source and a CAPTCHA challenge upon\n * second and all subsequent failed login attempts. A login attempt is logged if client\n * successfully passes the challenge. This enforcement action should be chosen if CAPTCHA is\n * considered intrusive. Benign users who mistype their password will likely get only the\n * Client Side Integrity challenge, while an attacker will eventually get the CAPTCHA\n * challenge.\n */\nexport enum DetectionCriteriaAction {\n  Alarm = \"alarm\",\n  AlarmAndCAPTCHA = \"alarm-and-captcha\",\n  AlarmAndClientSideIntegrity = \"alarm-and-client-side-integrity\",\n  AlarmAndClientSideIntegrityCAPTCHA = \"alarm-and-client-side-integrity-captcha\",\n}\n\n/**\n * Specifies configuration for Leaked Credentials Detection.\n */\nexport interface LeakedCredentialsCriteria {\n  /**\n   * Specifies action when leaked credentials detected.\n   *\n   * - **alarm**: The system will log the login attempt.\n   * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n   * and send the Blocking page.\n   * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n   * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n   * should look like an application failed login page. Unlike with the Blocking page, when\n   * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n   * from a mitigation. As a result, the attacker will not change identity (Source IP or\n   * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n   * recommended when mitigation is request blocking.\n   * - **alarm-and-leaked-credentials-response-page**: The default response page warns the\n   * user that the username and password have been leaked and the password should be changed.\n   */\n  action?: LeakedCredentialsCriteriaAction;\n  /**\n   * When enabled, the system can match presented credentials to those in the credentials\n   * dictionary to detect leaked credentials.\n   */\n  enabled?: boolean;\n}\n\n/**\n * Specifies action when leaked credentials detected.\n *\n * - **alarm**: The system will log the login attempt.\n * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n * and send the Blocking page.\n * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n * should look like an application failed login page. Unlike with the Blocking page, when\n * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n * from a mitigation. As a result, the attacker will not change identity (Source IP or\n * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n * recommended when mitigation is request blocking.\n * - **alarm-and-leaked-credentials-response-page**: The default response page warns the\n * user that the username and password have been leaked and the password should be changed.\n */\nexport enum LeakedCredentialsCriteriaAction {\n  Alarm = \"alarm\",\n  AlarmAndBlockingPage = \"alarm-and-blocking-page\",\n  AlarmAndHoneypotPage = \"alarm-and-honeypot-page\",\n  AlarmAndLeakedCredentialsResponsePage = \"alarm-and-leaked-credentials-response-page\",\n}\n\n/**\n * Specifies configuration for detecting brute force attacks for Device ID.\n */\nexport interface LoginAttemptsFromTheSameDeviceID {\n  /**\n   * Specifies action that is applied when defined threshold is reached.\n   *\n   * - **alarm**: The system will log the login attempt.\n   * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n   * and send the Blocking page.\n   * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n   * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n   * client successfully passes the CAPTCHA challenge.\n   * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n   * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n   * response. Legal browsers are able to execute JavaScript and produce a valid response,\n   * whereas bots cannot. A login attempt is logged if the client successfully passes the\n   * Client Side Integrity challenge.\n   * - **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n   * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n   * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n   * should look like an application failed login page. Unlike with the Blocking page, when\n   * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n   * from a mitigation. As a result, the attacker will not change identity (Source IP or\n   * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n   * recommended when mitigation is request blocking.\n   */\n  action?: LoginAttemptsFromTheSameDeviceIDAction;\n  /**\n   * When enabled, the system counts failed login attempts for Device ID.\n   */\n  enabled?: boolean;\n  /**\n   * After configured threshold (number of failed login attempts for Device ID) defined action\n   * will be applied for the next login attempt.\n   */\n  threshold?: number;\n}\n\n/**\n * Specifies action that is applied when defined threshold is reached.\n *\n * - **alarm**: The system will log the login attempt.\n * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n * and send the Blocking page.\n * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n * client successfully passes the CAPTCHA challenge.\n * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n * response. Legal browsers are able to execute JavaScript and produce a valid response,\n * whereas bots cannot. A login attempt is logged if the client successfully passes the\n * Client Side Integrity challenge.\n * - **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n * should look like an application failed login page. Unlike with the Blocking page, when\n * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n * from a mitigation. As a result, the attacker will not change identity (Source IP or\n * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n * recommended when mitigation is request blocking.\n */\nexport enum LoginAttemptsFromTheSameDeviceIDAction {\n  Alarm = \"alarm\",\n  AlarmAndBlockingPage = \"alarm-and-blocking-page\",\n  AlarmAndCAPTCHA = \"alarm-and-captcha\",\n  AlarmAndClientSideIntegrity = \"alarm-and-client-side-integrity\",\n  AlarmAndDrop = \"alarm-and-drop\",\n  AlarmAndHoneypotPage = \"alarm-and-honeypot-page\",\n}\n\n/**\n * Specifies configuration for detecting brute force attacks from IP Address.\n */\nexport interface LoginAttemptsFromTheSameIP {\n  /**\n   * Specifies action that is applied when defined threshold is reached.\n   *\n   * - **alarm**: The system will log the login attempt.\n   * - **alarm-and-blocking-page**: The system will log the login attempt, block the request\n   * and send the Blocking page.\n   * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n   * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n   * client successfully passes the CAPTCHA challenge.\n   * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n   * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n   * response. Legal browsers are able to execute JavaScript and produce a valid response,\n   * whereas bots cannot. A login attempt is logged if the client successfully passes the\n   * Client Side Integrity challenge.\n   * - **alarm-and-drop**: The system will log the login attempt and reset the TCP connection.\n   * - **alarm-and-honeypot-page**: The system will log the login attempt, block the request\n   * and send the Honeypot page. The Honeypot page is used for attacker deception. The page\n   * should look like an application failed login page. Unlike with the Blocking page, when\n   * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n   * from a mitigation. As a result, the attacker will not change identity (Source IP or\n   * Device ID) and the brute force attack will be rendered ineffective. The Honeypot page is\n   * recommended when mitigation is request blocking.\n   */\n  action?: LoginAttemptsFromTheSameDeviceIDAction;\n  /**\n   * When enabled, the system counts failed login attempts from IP Address.\n   */\n  enabled?: boolean;\n  /**\n   * After configured threshold (number of failed login attempts from IP Address) defined\n   * action will be applied for the next login attempt.\n   */\n  threshold?: number;\n}\n\n/**\n * Specifies configuration for detecting brute force attacks for Username.\n */\nexport interface LoginAttemptsFromTheSameUser {\n  /**\n   * Specifies action that is applied when defined threshold is reached.\n   *\n   * - **alarm**: The system will log the login attempt.\n   * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n   * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n   * client successfully passes the CAPTCHA challenge.\n   * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n   * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n   * response. Legal browsers are able to execute JavaScript and produce a valid response,\n   * whereas bots cannot. A login attempt is logged if the client successfully passes the\n   * Client Side Integrity challenge.\n   */\n  action?: LoginAttemptsFromTheSameUserAction;\n  /**\n   * When enabled, the system counts failed login attempts for each Username.\n   */\n  enabled?: boolean;\n  /**\n   * After configured threshold (number of failed login attempts for each Username) defined\n   * action will be applied for the next login attempt.\n   */\n  threshold?: number;\n}\n\n/**\n * Specifies action that is applied when defined threshold is reached.\n *\n * - **alarm**: The system will log the login attempt.\n * - **alarm-and-captcha**: The system determines whether the client is a legal browser\n * operated by a human user by sending a CAPTCHA challenge. A login attempt is logged if the\n * client successfully passes the CAPTCHA challenge.\n * - **alarm-and-client-side-integrity**: The system determines whether the client is a\n * legal browser or a bot by sending a page containing JavaScript code and waiting for a\n * response. Legal browsers are able to execute JavaScript and produce a valid response,\n * whereas bots cannot. A login attempt is logged if the client successfully passes the\n * Client Side Integrity challenge.\n */\nexport enum LoginAttemptsFromTheSameUserAction {\n  Alarm = \"alarm\",\n  AlarmAndCAPTCHA = \"alarm-and-captcha\",\n  AlarmAndClientSideIntegrity = \"alarm-and-client-side-integrity\",\n}\n\nexport enum PreventionDurationEnum {\n  The90000 = \"90000\",\n}\n\n/**\n * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n * is protected by Brute Force Protection feature.\n *\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface BruteForceAttackPreventionURL {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: PurpleDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: PurpleHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: PurpleMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: PurpleMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: PurplePositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: FluffySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: PurpleURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\n/**\n * Specifies the conditions for when the browser should allow this URL to be rendered in a\n * frame or iframe.\n * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n * referring page is from the same protocol, port, and domain as this URL. This limits the\n * user to navigate only within the same web application.\n * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n */\nexport enum AllowRenderingInFrames {\n  Never = \"never\",\n  OnlyFrom = \"only-from\",\n  OnlySame = \"only-same\",\n}\n\nexport interface PurpleDynamicFlow {\n  prefix: string;\n  regexp: string;\n  suffix: string;\n}\n\n/**\n * The system extracts the Origin (domain) of the request from the Origin header.\n */\nexport interface PurpleHtml5CrossOriginRequestsEnforcement {\n  /**\n   * Specifies whether requests from other web applications hosted in different domains may\n   * include user credentials.\n   */\n  allowCredentials?: boolean;\n  /**\n   * Allows you to specify a list of origins allowed to share data returned by this URL.\n   */\n  allowOriginsEnforcementMode?: AllowOriginsEnforcementMode;\n  /**\n   * Allows you to specify a list of request headers that other web applications hosted in\n   * different domains can use when requesting this URL. Or you can delete non-simple headers\n   * returned in response to requests.\n   */\n  checkAllowedHeaders?: boolean;\n  /**\n   * Allows you to specify a list of methods that other web applications hosted in different\n   * domains can use when requesting this URL.\n   */\n  checkAllowedMethods?: boolean;\n  /**\n   * If *false*, requests from other web applications hosted in different domains are not\n   * allowed to include user credentials.\n   */\n  checkCredentials?: boolean;\n  /**\n   * Optionally, for Exposed Headers, select Replace with, then specify the headers that\n   * JavaScript can expose and share with other applications when requesting this URL from\n   * another domain.\n   * Exposed headers are the headers the server returns in the response. For example, to\n   * discover server side web application technology, type X-Powered-By.\n   */\n  checkExposedHeaders?: boolean;\n  /**\n   * Optionally, for Maximum Age, select Replace with, then specify the number of seconds that\n   * the results of a preflight request can be cached or use the default.\n   */\n  checkMaximumAge?: boolean;\n  crossDomainAllowedHeader?: PurpleCrossDomainAllowedHeader[];\n  /**\n   * Allows you to specify a list of methods that other web applications hosted in different\n   * domains can use when requesting this URL.\n   */\n  crossDomainAllowedMethod?: PurpleCrossDomainAllowedMethod[];\n  /**\n   * Allows you to specify a list of origins allowed to share data returned by this URL.\n   */\n  crossDomainAllowedOrigin?: PurpleCrossDomainAllowedOrigin[];\n  /**\n   * Exposed headers are the headers the server returns in the response. For example, to\n   * discover server side web application technology, type X-Powered-By.\n   */\n  crossDomainExposedHeader?: PurpleCrossDomainExposedHeader[];\n  /**\n   * Specify the option to determine how to handle CORS requests.\n   * Disabled: Do nothing related to cross-domain requests. Pass CORS requests exactly as set\n   * by the server.\n   * Remove all CORS headers: Remove all CORS headers from the response. The response is sent\n   * to the browser, and the browser does not allow cross-origin requests.\n   * Replace CORS headers: Replace the CORS header in the response with another header\n   * specified on the tab, including allowed origins, allowed methods, allowed headers, and so\n   * on. The browser enforces the policy. Then after Replace with specify the protocol,\n   * origin, and port for replacing CORS headers.\n   * Enforce on the system: Allow cross-origin resource sharing as configured in the Allowed\n   * Origins setting. CORS requests are allowed from the domains specified as allowed origins.\n   * The system enforces the policy. Specify the protocol, origin, and port of allowed origins\n   */\n  enforcementMode?: PurpleEnforcementMode;\n  /**\n   * Specifies how long (in seconds) to cache in the browser the results of a preflight\n   * request (a special request that the browser sends to your web application to determine if\n   * JavaScript from another domain may access your resource).\n   */\n  maximumAge?: number;\n}\n\n/**\n * Allows you to specify a list of origins allowed to share data returned by this URL.\n */\nexport enum AllowOriginsEnforcementMode {\n  ReplaceWith = \"replace-with\",\n  Unmodified = \"unmodified\",\n}\n\nexport interface PurpleCrossDomainAllowedHeader {\n  /**\n   * Optionally, for Allowed Headers, select Replace with, then type the headers that other\n   * applications can use when requesting this URL from another domain.\n   */\n  allowedHeaderName: string;\n}\n\nexport interface PurpleCrossDomainAllowedMethod {\n  /**\n   * Optionally, for Allowed Methods, specify which methods other applications may use when\n   * requesting this URL from another domain.\n   */\n  methodName: string;\n}\n\nexport interface PurpleCrossDomainAllowedOrigin {\n  /**\n   * If *true*, sub-domains of the allowed origin are also allowed to receive data from your\n   * web application.\n   */\n  includeSubDomains?: boolean;\n  /**\n   * Type the domain name or IP address with which the URL can share data.\n   * Wildcards are allowed in the names. For example: *.f5.com will match b.f5.com; however it\n   * will not match a.b.f5.com.\n   */\n  originName: string;\n  /**\n   * Select the port that other web applications can use to request data from your web\n   * application, or use the * wildcard for all ports.\n   */\n  originPort: OriginPortEnum | number;\n  /**\n   * Select the appropriate protocol for the allowed origin.\n   */\n  originProtocol: OriginProtocol;\n}\n\nexport enum OriginPortEnum {\n  All = \"all\",\n}\n\n/**\n * Select the appropriate protocol for the allowed origin.\n */\nexport enum OriginProtocol {\n  HTTP = \"http\",\n  HTTPHTTPS = \"http/https\",\n  HTTPS = \"https\",\n}\n\nexport interface PurpleCrossDomainExposedHeader {\n  /**\n   * Optionally, for Exposed Headers, select Replace with, then specify the headers that\n   * JavaScript can expose and share with other applications when requesting this URL from\n   * another domain.\n   */\n  exposedHeaderName: string;\n}\n\n/**\n * Specify the option to determine how to handle CORS requests.\n * Disabled: Do nothing related to cross-domain requests. Pass CORS requests exactly as set\n * by the server.\n * Remove all CORS headers: Remove all CORS headers from the response. The response is sent\n * to the browser, and the browser does not allow cross-origin requests.\n * Replace CORS headers: Replace the CORS header in the response with another header\n * specified on the tab, including allowed origins, allowed methods, allowed headers, and so\n * on. The browser enforces the policy. Then after Replace with specify the protocol,\n * origin, and port for replacing CORS headers.\n * Enforce on the system: Allow cross-origin resource sharing as configured in the Allowed\n * Origins setting. CORS requests are allowed from the domains specified as allowed origins.\n * The system enforces the policy. Specify the protocol, origin, and port of allowed origins\n */\nexport enum PurpleEnforcementMode {\n  Disabled = \"disabled\",\n  Enforce = \"enforce\",\n  RemoveAllHeaders = \"remove-all-headers\",\n  ReplaceHeaders = \"replace-headers\",\n}\n\nexport interface PurpleMetacharOverride {\n  /**\n   * If *true*, metacharacters and other characters are allowed in a URL.\n   */\n  isAllowed?: boolean;\n  /**\n   * ASCII representation of the character in Hex format\n   */\n  metachar: string;\n}\n\n/**\n * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n * an API endpoint: URL + Method.\n */\nexport enum URLMethod {\n  ACL = \"ACL\",\n  Bcopy = \"BCOPY\",\n  Bdelete = \"BDELETE\",\n  Bmove = \"BMOVE\",\n  Bpropfind = \"BPROPFIND\",\n  Bproppatch = \"BPROPPATCH\",\n  Checkin = \"CHECKIN\",\n  Checkout = \"CHECKOUT\",\n  Connect = \"CONNECT\",\n  Copy = \"COPY\",\n  Delete = \"DELETE\",\n  Empty = \"*\",\n  Get = \"GET\",\n  Head = \"HEAD\",\n  Link = \"LINK\",\n  Lock = \"LOCK\",\n  Merge = \"MERGE\",\n  Mkcol = \"MKCOL\",\n  Mkworkspace = \"MKWORKSPACE\",\n  Move = \"MOVE\",\n  Notify = \"NOTIFY\",\n  Options = \"OPTIONS\",\n  Patch = \"PATCH\",\n  Poll = \"POLL\",\n  Post = \"POST\",\n  Propfind = \"PROPFIND\",\n  Proppatch = \"PROPPATCH\",\n  Put = \"PUT\",\n  RPCInData = \"RPC_IN_DATA\",\n  RPCOutData = \"RPC_OUT_DATA\",\n  Report = \"REPORT\",\n  Search = \"SEARCH\",\n  Subscribe = \"SUBSCRIBE\",\n  Trace = \"TRACE\",\n  Track = \"TRACK\",\n  Unlink = \"UNLINK\",\n  Unlock = \"UNLOCK\",\n  Unsubscribe = \"UNSUBSCRIBE\",\n  VersionControl = \"VERSION_CONTROL\",\n  XMSEnumatts = \"X-MS-ENUMATTS\",\n}\n\nexport interface PurpleMethodOverride {\n  /**\n   * Specifies that the system allows you to override allowed methods for this URL. When\n   * selected, the global policy settings for methods are listed, and you can change what is\n   * allowed or disallowed for this URL.\n   */\n  allowed?: boolean;\n  /**\n   * Specifies a list of existing HTTP methods. All security policies accept standard HTTP\n   * methods by default.\n   */\n  method: MethodOverrideMethod;\n}\n\n/**\n * Specifies a list of existing HTTP methods. All security policies accept standard HTTP\n * methods by default.\n */\nexport enum MethodOverrideMethod {\n  ACL = \"ACL\",\n  Bcopy = \"BCOPY\",\n  Bdelete = \"BDELETE\",\n  Bmove = \"BMOVE\",\n  Bpropfind = \"BPROPFIND\",\n  Bproppatch = \"BPROPPATCH\",\n  Checkin = \"CHECKIN\",\n  Checkout = \"CHECKOUT\",\n  Connect = \"CONNECT\",\n  Copy = \"COPY\",\n  Delete = \"DELETE\",\n  Get = \"GET\",\n  Head = \"HEAD\",\n  Link = \"LINK\",\n  Lock = \"LOCK\",\n  Merge = \"MERGE\",\n  Mkcol = \"MKCOL\",\n  Mkworkspace = \"MKWORKSPACE\",\n  Move = \"MOVE\",\n  Notify = \"NOTIFY\",\n  Options = \"OPTIONS\",\n  Patch = \"PATCH\",\n  Poll = \"POLL\",\n  Post = \"POST\",\n  Propfind = \"PROPFIND\",\n  Proppatch = \"PROPPATCH\",\n  Put = \"PUT\",\n  RPCInData = \"RPC_IN_DATA\",\n  RPCOutData = \"RPC_OUT_DATA\",\n  Report = \"REPORT\",\n  Search = \"SEARCH\",\n  Subscribe = \"SUBSCRIBE\",\n  Trace = \"TRACE\",\n  Track = \"TRACK\",\n  Unlink = \"UNLINK\",\n  Unlock = \"UNLOCK\",\n  Unsubscribe = \"UNSUBSCRIBE\",\n  VersionControl = \"VERSION_CONTROL\",\n  XMSEnumatts = \"X-MS-ENUMATTS\",\n}\n\n/**\n * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n * is protected by Brute Force Protection feature.\n *\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface PurpleURL {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: PurpleDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: PurpleHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: PurpleMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: PurpleMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: PurplePositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: FluffySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: PurpleURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\n/**\n * This section defines parameters that the security policy permits in requests.\n */\nexport interface PurpleParameter {\n  /**\n   * Determines whether an empty value is allowed for a parameter.\n   */\n  allowEmptyValue?: boolean;\n  /**\n   * Determines whether multiple parameter instances with the same name are allowed in one\n   * request.\n   */\n  allowRepeatedParameterName?: boolean;\n  /**\n   * Specifies type of serialization for array of primitives parameter.\n   * Serialization defines how multiple values are delimited - format that can be transmitted\n   * and reconstructed later:\n   * - **pipe**: pipe-separated values. Array color=[\"blue\",\"black\"] -> color=blue|black.\n   * - **form**: ampersand-separated values. Array color=[\"blue\",\"black\"] ->\n   * color=blue,black.\n   * - **matrix**: semicolon-prefixed values. Array color=[\"blue\",\"black\"] ->\n   * ;color=blue,black.\n   * - **tsv**: tab-separated values. Aarray color=[\"blue\",\"black\"] -> color=blue\\tblack.\n   * - **csv**: comma-separated values. Array color=[\"blue\",\"black\"] -> color=blue,black.\n   * - **label**: dot-prefixed values. Array color=[\"blue\",\"black\"] -> .blue.black.\n   * - **multi**: multiple parameter instances rather than multiple values. Array\n   * color=[\"blue\",\"black\"] -> color=blue&color=black.\n   * - **ssv**: space-separated values. Array color=[\"blue\",\"black\"] -> color=blue black.\n   * - **multipart**: defines array of files.\n   *\n   * **Notes**:\n   * - This attribute is relevant only for parameters with **array** *valueType*.\n   * - **multi** and **form** serializations can be defined for parameter with *query*,\n   * *form-data* or *cookie* locations only.\n   * - **multipart** serialization can be defined for parameter with *form-data* location\n   * only.\n   * - **matrix** and **label** serializations can be defined for parameter with *path*\n   * location only.\n   */\n  arraySerializationFormat?: ArraySerializationFormat;\n  /**\n   * Determines whether items in an array parameter must be unique.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  arrayUniqueItemsCheck?: boolean;\n  /**\n   * Determines whether attack signatures and threat campaigns must be detected in a\n   * parameter's value.\n   * This attribute is relevant only for parameters with **alpha-numeric** or **binary**\n   * *dataType*.\n   */\n  attackSignaturesCheck?: boolean;\n  /**\n   * Determines whether an array parameter has a restricted maximum number of items.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  checkMaxItemsInArray?: boolean;\n  /**\n   * Determines whether the parameter has a restricted maximum value.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMaxValue?: boolean;\n  /**\n   * Determines whether a parameter has a restricted maximum length for value.\n   */\n  checkMaxValueLength?: boolean;\n  /**\n   * Determines whether disallowed metacharacters must be detected in a parameter's name.\n   * This attribute is relevant only for **wildcard** parameters with **alpha-numeric**\n   * *dataType*.\n   */\n  checkMetachars?: boolean;\n  /**\n   * Determines whether an array parameter has a restricted minimum number of items.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  checkMinItemsInArray?: boolean;\n  /**\n   * Determines whether a parameter has a restricted minimum value.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMinValue?: boolean;\n  /**\n   * Determines whether a parameter has a restricted minimum length for value.\n   */\n  checkMinValueLength?: boolean;\n  /**\n   * Determines whether a parameter's value is a multiple of a number defined in *multipleOf*.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMultipleOfValue?: boolean;\n  contentProfile?: PurpleContentProfile;\n  /**\n   * Specifies data type of parameter's value:\n   *\n   * - **none**: system data type which is used by policy builder and cannot be set manually.\n   * - **alpha-numeric**: specifies that the value of parameter can be any text consisting of\n   * letters, digits, and the underscore character.\n   * - **binary**: specifies there is no text limit for the value of a parameter (length\n   * checks only).\n   * - **phone**: specifies that the value of a parameter can be text in telephone number\n   * format only.\n   * - **email**: specifies that the value of a parameter must be text in email format only.\n   * - **boolean**: specifies that the value of a parameter must be boolean (only *true* and\n   * *false* values are allowed).\n   * - **integer**: specifies that the value of a parameter must be whole numbers only (no\n   * decimals).\n   * - **decimal**: specifies that the value of a parameter is numbers only and can include\n   * decimals.\n   *\n   * **Notes**:\n   * -  This attribute is relevant for parameters with **array** or **user-input** *valueType*\n   * only.\n   */\n  dataType?: DataType;\n  /**\n   * Determines whether a parameter's value cannot have binary executable content.\n   * This attribute is relevant only for parameters with **binary** *dataType*.\n   */\n  disallowFileUploadOfExecutables?: boolean;\n  /**\n   * Determines whether the parameter value includes the pattern defined in\n   * *regularExpression*.\n   * This attribute is relevant only for parameters with **alpha-numeric** *dataType*.\n   */\n  enableRegularExpression?: boolean;\n  /**\n   * Determines whether the maximum value defined in *maximumValue* attribute is exclusive.\n   * This attribute is relevant only if *checkMaxValue* is set to **true**.\n   */\n  exclusiveMax?: boolean;\n  /**\n   * Determines whether a minimum value defined in *minimumValue* attribute is exclusive.\n   * This attribute is relevant only if *checkMinValue* is set to **true**.\n   */\n  exclusiveMin?: boolean;\n  /**\n   * Specifies whether an array or object parameters should have separate values for each\n   * array item or object property.\n   * This attribute is relevant only if *objectSerializationStyle* is defined.\n   *\n   * **Notes**:\n   * -  This attribute is not relevant for parameters with **deep-object**,\n   * **space-delimited** or **pipe-delimited** *objectSerializationStyle*.\n   */\n  explodeObjectSerialization?: boolean;\n  /**\n   * Determines whether a parameter's value contains a Base64 encoded string.\n   * If the value is indeed Base64 encoded, the system decodes this value and continues with\n   * its security checks.\n   * This attribute is relevant only for parameters with **alpha-numeric** or **binary**\n   * *dataType*.\n   */\n  isBase64?: boolean;\n  /**\n   * Determines whether a parameter is located in the value of Cookie header.\n   * *parameterLocation* attribute is ignored if **isCookie** is set to *true*.\n   */\n  isCookie?: boolean;\n  /**\n   * Determines whether a parameter is located in headers as one of the headers.\n   * *parameterLocation* attribute is ignored if **isHeader** is set to *true*.\n   */\n  isHeader?: boolean;\n  /**\n   * Specifies whether the parameter is associated with a URL, a flow, or neither.\n   */\n  level?: Level;\n  /**\n   * Determines whether a parameter must exist in the request.\n   */\n  mandatory?: boolean;\n  /**\n   * Determines the restriction for the maximum length of parameter's value.\n   * This attribute is relevant only if *checkMaxValueLength* is set to **true**.\n   */\n  maximumLength?: number;\n  /**\n   * Determines the restriction for the maximum value of parameter.\n   * This attribute is relevant only if *checkMaxValue* is set to **true**.\n   */\n  maximumValue?: number;\n  /**\n   * Determines the restriction forthe  maximum number of items in an array parameter.\n   * This attribute is relevant only if *checkMaxItemsInArray* is set to **true**.\n   */\n  maxItemsInArray?: number;\n  /**\n   * Determines whether disallowed metacharacters must be detected in a parameter's value.\n   * This attribute is relevant only for parameters with **alpha-numeric** *dataType*.\n   */\n  metacharsOnParameterValueCheck?: boolean;\n  /**\n   * Determines the restriction for the minimum length of parameter's value.\n   * This attribute is relevant only if *checkMinValueLength* is set to **true**.\n   */\n  minimumLength?: number;\n  /**\n   * Determines the restriction for the minimum value of a parameter.\n   * This attribute is relevant only if *checkMinValue* is set to **true**.\n   */\n  minimumValue?: number;\n  /**\n   * Determines the restriction for the minimum number of items in an array parameter.\n   * This attribute is relevant only if *checkMinItemsInArray* is set to **true**.\n   */\n  minItemsInArray?: number;\n  /**\n   * Determines the number by which a parameter's value is divisible without remainder.\n   * This number must be positive and it may be a floating-point number.\n   * This attribute is relevant only if *checkMultipleOfValue* is set to **true**.\n   */\n  multipleOf?: number;\n  /**\n   * Specifies the name of a parameter which must be permitted in requests.\n   * Format of parameter name attribute differs depending on *type* attribute:\n   * - **explicit** *type*: name of permitted parameter in request should literally match.\n   * - **wildcard** *type*: name of permitted parameter in request should match wildcard\n   * expression.\n   *\n   * The syntax for wildcard entities is based on shell-style wildcard characters.\n   * The list below describes the wildcard characters that you can use so that the entity name\n   * can match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Notes**:\n   * - Wildcards do not match regular expressions. Do not use a regular expression as a\n   * wildcard.\n   * - Empty parameter name is allowed for **explicit** *type*\n   */\n  name: string;\n  /**\n   * Determines metacharacters whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that has these metacharacters in the name.\n   * This attribute is relevant only if *checkMetachars* is set to **true**.\n   */\n  nameMetacharOverrides?: PurpleNameMetacharOverride[];\n  /**\n   * Specifies the type of serialization for an object or complex array parameter.\n   * Serialization defines how multiple values are delimited - format that can be transmitted\n   * and reconstructed later:\n   * - **pipe-delimited**: pipe-separated values. Object color={\"R\":100,\"G\":200} ->\n   * color=R|100|G|200.\n   * - **form**: ampersand-separated values. Object color={\"R\":100,\"G\":200} ->\n   * color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> R=100&G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **space-delimited**: space-separated values. Object color={\"R\":100,\"G\":200} -> color=R\n   * 100 G 200.\n   * - **deep-object**: rendering nested objects. Object color={\"R\":100,\"G\":200} ->\n   * color[R]=100&color[G]=200.\n   * - **matrix**: semicolon-prefixed values. Object color={\"R\":100,\"G\":200} ->\n   * ;color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> ;R=100;G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **simple**: comma-separated values. Object color={\"R\":100,\"G\":200} -> R,100,G,200 if\n   * *explodeObjectSerialization* set to **false** or -> R=100,G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **label**: dot-prefixed values. Object color={\"R\":100,\"G\":200} -> .R.100.G.200 if\n   * *explodeObjectSerialization* set to **false** or -> .R=100.G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   *\n   * **Notes**:\n   * - This attribute is relevant only for parameters with **object** or **openapi-array**\n   * *valueType*.\n   * - **form** serialization can be defined for a parameter with *query*, *form-data* or\n   * *cookie* locations only.\n   * - **matrix** and **label** serializations can be defined for an array parameter with\n   * *path* location only.\n   * - **simple** serializations can be defined for a parameter with *path* and *header*\n   * locations only.\n   * - **deep-object** serialization can be defined for a parameter with *query* or\n   * *form-data* locations only.\n   */\n  objectSerializationStyle?: ObjectSerializationStyle;\n  /**\n   * Determines the set of possible parameter's values.\n   * This attribute is not relevant for parameters with **phone**, **email** or **binary**\n   * *dataType*.\n   */\n  parameterEnumValues?: string[];\n  /**\n   * Specifies location of parameter in request:\n   *\n   * - **any**: in query string, in POST data (body) or in URL path.\n   * - **query**: in query string.\n   * - **form-data**: in POST data (body).\n   * - **cookie**: in value of Cookie header.\n   * - **path**: in URL path.\n   * - **header**: in request headers.\n   *\n   * **Notes**:\n   * - **path** location can be defined for parameter with **global** *level* only.\n   * - **path**, **header** and **cookie** location can be defined for parameter with\n   * **explicit** *type* only.\n   * - **header** and **cookie** location cannot be defined for parameter with empty *name*.\n   */\n  parameterLocation?: ParameterLocation;\n  /**\n   * Determines the staging state of a parameter.\n   * If you place an entity in staging, the system does not block requests for this entity.\n   *\n   * Tip: Use staging on wildcard entities to build the security policy without explicit\n   * entities of this type, rather than configuring the wildcard entity itself to be enforced\n   * with the settings found on it.\n   */\n  performStaging?: boolean;\n  /**\n   * Determines a positive regular expression (PCRE) for a parameter's value.\n   * This attribute is relevant only if *enableRegularExpression* is set to **true**.\n   *\n   * **Notes**:\n   * - The length of a regular expression is limited to 254 characters.\n   */\n  regularExpression?: string;\n  /**\n   * Determines whether a parameter is sensitive and must be not visible in logs nor in the\n   * user interface.\n   * Instead of actual valu,e a string of asterisks is shown for this parameter.\n   * Use it to protect sensitive user input, such as a password or a credit card number, in a\n   * validated request.\n   */\n  sensitiveParameter?: boolean;\n  /**\n   * Determines attack signatures whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that matches these attack signatures.\n   * This attribute is relevant only if *signatureOverrides* is set to **true**.\n   */\n  signatureOverrides?: PurpleSignatureOverride[];\n  /**\n   * Determines the set of possible parameter's values.\n   * This attribute is relevant for parameters with **static-content** *valueType* only.\n   */\n  staticValues?: string[];\n  /**\n   * Specifies the type of the *name* attribute.\n   */\n  type?: HostNameTypeEnum;\n  url?: PurpleURL;\n  /**\n   * Determines metacharacters whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that has these metacharacters in value.\n   * This attribute is relevant only if *metacharsOnParameterValueCheck* is set to **true**.\n   */\n  valueMetacharOverrides?: PurpleValueMetacharOverride[];\n  /**\n   * Specifies type of parameter's value:\n   *\n   * - **object**: the parameter's value is complex object defined by JSON schema.\n   * - **dynamic-content**: the parameter's content changes dynamically.\n   * - **openapi-array**: the parameter's value is complex array defined by JSON schema.\n   * - **ignore**: the system does not perform validity checks on the value of the parameter.\n   * - **static-content**: the parameter has a static, or pre-defined, value(s).\n   * - **json**: the parameter's value is JSON data.\n   * - **array**: the parameter's value is array of primitives.\n   * - **user-input**: the parameter's value is provided by user-input.\n   * - **xml**: the parameter's value is XML data.\n   * - **auto-detect**: the parameter's value can be user-inpur, XML data or JSON data. The\n   * system automatically classifies the type of value.\n   * - **dynamic-parameter-name**: the parameter's name changes dynamically.\n   *\n   * **Notes**:\n   * - **dynamic-parameter-name** value type can be defined for a parameter with **flow**\n   * *level* and **explicit** *type* only.\n   * - **dynamic-content** value type can be defined for a parameter with **explicit** *type*\n   * only.\n   */\n  valueType?: ValueType;\n  /**\n   * Specifies the order in which wildcard entities are organized.\n   * Matching of an enforced parameter with a defined wildcard parameter happens based on\n   * order from smaller to larger.\n   */\n  wildcardOrder?: number;\n}\n\nexport interface PurplePositionalParameter {\n  parameter: PurpleParameter;\n  /**\n   * Select which to add: Text or Parameter and enter your desired segments. You can add\n   * multiple text and parameter segments.\n   */\n  urlSegmentIndex: number;\n}\n\n/**\n * Specifies whether the protocol for the URL is HTTP or HTTPS.\n */\nexport enum URLProtocol {\n  HTTP = \"http\",\n  HTTPS = \"https\",\n}\n\nexport interface FluffySignatureOverride {\n  /**\n   * Specifies, when true, that the overridden signature is enforced\n   */\n  enabled?: boolean;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n  /**\n   * The signature ID which identifies the signature.\n   */\n  signatureId?: number;\n  /**\n   * The signature tag, which along with the signature name, identifies the signature.\n   */\n  tag?: string;\n}\n\n/**\n * Specifies the type of the *name* attribute.\n *\n * Determines the type of the **name** attribute. Only when setting the type to wildcard\n * will the special wildcard characters in the name be interpreted as such.\n *\n * Determines the type of the **name** attribute.\n * Only when setting the type to wildcard will the special wildcard characters in the name\n * interpreted as such.\n *\n * Determines the type of the **name** attribute. Only when setting the type to wildcard\n * will the special wildcard characters in the name interpreted as such.\n */\nexport enum HostNameTypeEnum {\n  Explicit = \"explicit\",\n  Wildcard = \"wildcard\",\n}\n\nexport interface PurpleURLContentProfile {\n  contentProfile?: TentacledContentProfile;\n  /**\n   * Specifies an explicit header name that must appear in requests for this URL. This field\n   * is not case-sensitive.\n   */\n  headerName: string;\n  /**\n   * Displays the order in which the system checks header content of requests for this URL.\n   */\n  headerOrder?: HeaderOrderEnum | number;\n  /**\n   * Specifies a simple pattern string (glob pattern matching) for the header value that must\n   * appear in legal requests for this URL; for example, *json*, xml_method?, or method[0-9].\n   * If the header includes this pattern, the system assumes the request contains the type of\n   * data you select in the Request Body Handling setting. This field is case-sensitive.\n   */\n  headerValue: string;\n  /**\n   * Apply Content Signatures: Do not parse the content; scan the entire payload with\n   * full-content attack signatures.\n   * Apply Value and Content Signatures: Do not parse the content or extract parameters;\n   * process the entire payload with value and full-content attack signatures.\n   * Disallow: Block requests for an URL containing this header content. Log the Illegal\n   * Request Content Type violation.\n   * Do Nothing: Do not inspect or parse the content. Handle the header of the request as\n   * specified by the security policy.\n   * Form Data: Parse content as posted form data in either URL-encoded or multi-part formats.\n   * Enforce the form parameters according to the policy.\n   * GWT: Perform checks for data in requests, based on the configuration of the GWT (Google\n   * Web Toolkit) profile associated with this URL.\n   * JSON: Review JSON data using an associated JSON profile, and use value attack signatures\n   * to scan the element values.\n   * XML: Review XML data using an associated XML profile.\n   */\n  type?: URLContentProfileType;\n}\n\nexport interface TentacledContentProfile {\n  name?: string;\n}\n\nexport enum HeaderOrderEnum {\n  Default = \"default\",\n}\n\n/**\n * Apply Content Signatures: Do not parse the content; scan the entire payload with\n * full-content attack signatures.\n * Apply Value and Content Signatures: Do not parse the content or extract parameters;\n * process the entire payload with value and full-content attack signatures.\n * Disallow: Block requests for an URL containing this header content. Log the Illegal\n * Request Content Type violation.\n * Do Nothing: Do not inspect or parse the content. Handle the header of the request as\n * specified by the security policy.\n * Form Data: Parse content as posted form data in either URL-encoded or multi-part formats.\n * Enforce the form parameters according to the policy.\n * GWT: Perform checks for data in requests, based on the configuration of the GWT (Google\n * Web Toolkit) profile associated with this URL.\n * JSON: Review JSON data using an associated JSON profile, and use value attack signatures\n * to scan the element values.\n * XML: Review XML data using an associated XML profile.\n */\nexport enum URLContentProfileType {\n  ApplyContentSignatures = \"apply-content-signatures\",\n  ApplyValueAndContentSignatures = \"apply-value-and-content-signatures\",\n  Disallow = \"disallow\",\n  DoNothing = \"do-nothing\",\n  FormData = \"form-data\",\n  GWT = \"gwt\",\n  JSON = \"json\",\n  XML = \"xml\",\n}\n\n/**\n * Specifies type of serialization for array of primitives parameter.\n * Serialization defines how multiple values are delimited - format that can be transmitted\n * and reconstructed later:\n * - **pipe**: pipe-separated values. Array color=[\"blue\",\"black\"] -> color=blue|black.\n * - **form**: ampersand-separated values. Array color=[\"blue\",\"black\"] ->\n * color=blue,black.\n * - **matrix**: semicolon-prefixed values. Array color=[\"blue\",\"black\"] ->\n * ;color=blue,black.\n * - **tsv**: tab-separated values. Aarray color=[\"blue\",\"black\"] -> color=blue\\tblack.\n * - **csv**: comma-separated values. Array color=[\"blue\",\"black\"] -> color=blue,black.\n * - **label**: dot-prefixed values. Array color=[\"blue\",\"black\"] -> .blue.black.\n * - **multi**: multiple parameter instances rather than multiple values. Array\n * color=[\"blue\",\"black\"] -> color=blue&color=black.\n * - **ssv**: space-separated values. Array color=[\"blue\",\"black\"] -> color=blue black.\n * - **multipart**: defines array of files.\n *\n * **Notes**:\n * - This attribute is relevant only for parameters with **array** *valueType*.\n * - **multi** and **form** serializations can be defined for parameter with *query*,\n * *form-data* or *cookie* locations only.\n * - **multipart** serialization can be defined for parameter with *form-data* location\n * only.\n * - **matrix** and **label** serializations can be defined for parameter with *path*\n * location only.\n */\nexport enum ArraySerializationFormat {\n  CSV = \"csv\",\n  Form = \"form\",\n  Label = \"label\",\n  Matrix = \"matrix\",\n  Multi = \"multi\",\n  Multipart = \"multipart\",\n  Pipe = \"pipe\",\n  Ssv = \"ssv\",\n  Tsv = \"tsv\",\n}\n\nexport interface PurpleContentProfile {\n  contentProfile?: FluffyContentProfile;\n}\n\nexport interface FluffyContentProfile {\n  name?: string;\n}\n\n/**\n * Specifies data type of parameter's value:\n *\n * - **none**: system data type which is used by policy builder and cannot be set manually.\n * - **alpha-numeric**: specifies that the value of parameter can be any text consisting of\n * letters, digits, and the underscore character.\n * - **binary**: specifies there is no text limit for the value of a parameter (length\n * checks only).\n * - **phone**: specifies that the value of a parameter can be text in telephone number\n * format only.\n * - **email**: specifies that the value of a parameter must be text in email format only.\n * - **boolean**: specifies that the value of a parameter must be boolean (only *true* and\n * *false* values are allowed).\n * - **integer**: specifies that the value of a parameter must be whole numbers only (no\n * decimals).\n * - **decimal**: specifies that the value of a parameter is numbers only and can include\n * decimals.\n *\n * **Notes**:\n * -  This attribute is relevant for parameters with **array** or **user-input** *valueType*\n * only.\n */\nexport enum DataType {\n  AlphaNumeric = \"alpha-numeric\",\n  Binary = \"binary\",\n  Boolean = \"boolean\",\n  Decimal = \"decimal\",\n  Email = \"email\",\n  Integer = \"integer\",\n  None = \"none\",\n  Phone = \"phone\",\n}\n\n/**\n * Specifies whether the parameter is associated with a URL, a flow, or neither.\n */\nexport enum Level {\n  Flow = \"flow\",\n  Global = \"global\",\n  URL = \"url\",\n}\n\nexport interface PurpleNameMetacharOverride {\n  /**\n   * Specifies permission of *metachar* - when *false*, then character is prohibited.\n   */\n  isAllowed?: boolean;\n  /**\n   * Specifies character in hexadecimal format with special allowance.\n   */\n  metachar: string;\n}\n\n/**\n * Specifies the type of serialization for an object or complex array parameter.\n * Serialization defines how multiple values are delimited - format that can be transmitted\n * and reconstructed later:\n * - **pipe-delimited**: pipe-separated values. Object color={\"R\":100,\"G\":200} ->\n * color=R|100|G|200.\n * - **form**: ampersand-separated values. Object color={\"R\":100,\"G\":200} ->\n * color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> R=100&G=200 if\n * *explodeObjectSerialization* set to **true**.\n * - **space-delimited**: space-separated values. Object color={\"R\":100,\"G\":200} -> color=R\n * 100 G 200.\n * - **deep-object**: rendering nested objects. Object color={\"R\":100,\"G\":200} ->\n * color[R]=100&color[G]=200.\n * - **matrix**: semicolon-prefixed values. Object color={\"R\":100,\"G\":200} ->\n * ;color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> ;R=100;G=200 if\n * *explodeObjectSerialization* set to **true**.\n * - **simple**: comma-separated values. Object color={\"R\":100,\"G\":200} -> R,100,G,200 if\n * *explodeObjectSerialization* set to **false** or -> R=100,G=200 if\n * *explodeObjectSerialization* set to **true**.\n * - **label**: dot-prefixed values. Object color={\"R\":100,\"G\":200} -> .R.100.G.200 if\n * *explodeObjectSerialization* set to **false** or -> .R=100.G=200 if\n * *explodeObjectSerialization* set to **true**.\n *\n * **Notes**:\n * - This attribute is relevant only for parameters with **object** or **openapi-array**\n * *valueType*.\n * - **form** serialization can be defined for a parameter with *query*, *form-data* or\n * *cookie* locations only.\n * - **matrix** and **label** serializations can be defined for an array parameter with\n * *path* location only.\n * - **simple** serializations can be defined for a parameter with *path* and *header*\n * locations only.\n * - **deep-object** serialization can be defined for a parameter with *query* or\n * *form-data* locations only.\n */\nexport enum ObjectSerializationStyle {\n  DeepObject = \"deep-object\",\n  Form = \"form\",\n  Label = \"label\",\n  Matrix = \"matrix\",\n  PipeDelimited = \"pipe-delimited\",\n  Simple = \"simple\",\n  SpaceDelimited = \"space-delimited\",\n}\n\n/**\n * Specifies location of parameter in request:\n *\n * - **any**: in query string, in POST data (body) or in URL path.\n * - **query**: in query string.\n * - **form-data**: in POST data (body).\n * - **cookie**: in value of Cookie header.\n * - **path**: in URL path.\n * - **header**: in request headers.\n *\n * **Notes**:\n * - **path** location can be defined for parameter with **global** *level* only.\n * - **path**, **header** and **cookie** location can be defined for parameter with\n * **explicit** *type* only.\n * - **header** and **cookie** location cannot be defined for parameter with empty *name*.\n */\nexport enum ParameterLocation {\n  Any = \"any\",\n  Cookie = \"cookie\",\n  FormData = \"form-data\",\n  Header = \"header\",\n  Path = \"path\",\n  Query = \"query\",\n}\n\nexport interface PurpleSignatureOverride {\n  /**\n   * Specifies, when true, that the overridden signature is enforced\n   */\n  enabled?: boolean;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n  /**\n   * The signature ID which identifies the signature.\n   */\n  signatureId?: number;\n  /**\n   * The signature tag, which along with the signature name, identifies the signature.\n   */\n  tag?: string;\n}\n\nexport interface PurpleValueMetacharOverride {\n  /**\n   * Specifies permission of *metachar* - when *false*, then character is prohibited.\n   */\n  isAllowed?: boolean;\n  /**\n   * Specifies character in hexadecimal format with special allowance.\n   */\n  metachar: string;\n}\n\n/**\n * Specifies type of parameter's value:\n *\n * - **object**: the parameter's value is complex object defined by JSON schema.\n * - **dynamic-content**: the parameter's content changes dynamically.\n * - **openapi-array**: the parameter's value is complex array defined by JSON schema.\n * - **ignore**: the system does not perform validity checks on the value of the parameter.\n * - **static-content**: the parameter has a static, or pre-defined, value(s).\n * - **json**: the parameter's value is JSON data.\n * - **array**: the parameter's value is array of primitives.\n * - **user-input**: the parameter's value is provided by user-input.\n * - **xml**: the parameter's value is XML data.\n * - **auto-detect**: the parameter's value can be user-inpur, XML data or JSON data. The\n * system automatically classifies the type of value.\n * - **dynamic-parameter-name**: the parameter's name changes dynamically.\n *\n * **Notes**:\n * - **dynamic-parameter-name** value type can be defined for a parameter with **flow**\n * *level* and **explicit** *type* only.\n * - **dynamic-content** value type can be defined for a parameter with **explicit** *type*\n * only.\n */\nexport enum ValueType {\n  Array = \"array\",\n  AutoDetect = \"auto-detect\",\n  DynamicContent = \"dynamic-content\",\n  DynamicParameterName = \"dynamic-parameter-name\",\n  Ignore = \"ignore\",\n  JSON = \"json\",\n  Object = \"object\",\n  OpenapiArray = \"openapi-array\",\n  StaticContent = \"static-content\",\n  UserInput = \"user-input\",\n  XML = \"xml\",\n}\n\nexport interface CharacterSet {\n  characterSet?: CharacterSetElement[];\n  characterSetType: CharacterSetType;\n}\n\nexport interface CharacterSetElement {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport enum CharacterSetType {\n  GWTContent = \"gwt-content\",\n  Header = \"header\",\n  JSONContent = \"json-content\",\n  ParameterName = \"parameter-name\",\n  ParameterValue = \"parameter-value\",\n  PlainTextContent = \"plain-text-content\",\n  URL = \"url\",\n  XMLContent = \"xml-content\",\n}\n\n/**\n * The maximum length of a cookie header name and value that the system processes. The\n * system calculates and enforces a cookie header length based on the sum of the length of\n * the cookie header name and value.\n */\nexport interface CookieSettings {\n  /**\n   * Maximum Cookie Header Length must be greater than 0 and less than 65536 bytes (64K).\n   * Note: if 0 or *any* are set, then no restriction on the cookie header length is applied.\n   */\n  maximumCookieHeaderLength?: MaximumCookieHeaderLengthEnum | number;\n}\n\nexport enum MaximumCookieHeaderLengthEnum {\n  Any = \"any\",\n}\n\n/**\n * This section defines Cookie entities for your policy.\n * You can specify the cookies that you want to allow, and the ones you want to enforce in a\n * security policy:\n * - **Allowed cookies**: The system allows these cookies and clients can change them.\n * - **Enforced cookies**: The system enforces the cookies in the list\n * (not allowing clients to change them) and allows clients to change all others.\n */\nexport interface Cooky {\n  /**\n   * Specifies, when true, that the system adds the HttpOnly attribute to the domain cookie's\n   * response header.\n   * This is done to expose the cookie to only HTTP and HTTPS entities.\n   * This prevents the cookie from being modified, or intercepted even if it is not modified,\n   * by unwanted third parties that run scripts on the web page.\n   *\n   * **Notes**:\n   * - The system does not validate that the cookie has not been modified or intercepted.\n   * - The feature covers all security policy cookies, both enforced and allowed, explicit and\n   * wildcard.\n   */\n  accessibleOnlyThroughTheHttpProtocol?: boolean;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this cookie\n   * and possibly override the security policy settings of an attack signature or threat\n   * campaign specifically for this cookie.\n   * After you enable this setting, the system displays a list of attack signatures and threat\n   * campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  /**\n   * Specifies how the system treats this cookie.\n   *\n   * - **enforced**: Specifies that according to the security policy, this cookie may not be\n   * changed by the client.\n   * - **allowed**: Specifies that according to the security policy, this cookie may be\n   * changed by the client. The system ignores this cookie.\n   */\n  enforcementType?: EnforcementType;\n  /**\n   * The introduction of the SameSite http attribute (defined in\n   * [RFC6265bis](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00))\n   * allows you to declare if your cookie should be restricted to a first-party or same-site\n   * context.\n   * Introducing the SameSite attribute on a cookie provides three different ways of\n   * controlling same-site vs. cross-site cookie sending:\n   *\n   * - **strict**: Cookie will only be sent in a first-party context. In user terms, the\n   * cookie will only be sent if the site for the cookie matches the site currently shown in\n   * the browser's URL bar.\n   * - **lax**: Cookies will be sent with top level navigation\n   * - **none-value**: Cookies will be sent in a third-party context.\n   */\n  insertSameSiteAttribute?: InsertSameSiteAttribute;\n  /**\n   * You can enable the security policy to check whether cookie values contain a Base64\n   * encoded string.\n   * If the value is indeed Base64 encoded, the system decodes this value and continues with\n   * its security checks.\n   * Specifies, when true, that the security policy checks the cookie's value for Base64\n   * encoding, and decodes the value.\n   *\n   * **Note**: This setting is only available if Cookie Type is set to Allowed.\n   */\n  isBase64?: boolean;\n  /**\n   * Specifies, when true, that the cookie's value will be masked in the request log\n   */\n  maskValueInLogs?: boolean;\n  /**\n   * Specifies the cookie name as appearing in the http cookie header.\n   * The cookie name length is limited to 500 characters.\n   *\n   * Names can be one of the following according to the *type* attribute:\n   *\n   * - **explicit**: Specifies that the cookie has a specific name and is not a wildcard\n   * entity. Type the name of a cookie exactly as you expect it to appear in the request.\n   * - **wildcard**: Specifies that any cookie that matches the listed wildcard expression\n   * should be treated according to the wildcard attributes. Type a wildcard expression that\n   * matches the expected cookie. For example, the wildcard expression cookie_12* of type\n   * Enforced specifies that the security policy should not allow modified domain cookies for\n   * all cookies which match cookie_12*.\n   *\n   * The syntax for wildcard entities is based on shell-style wildcard characters.\n   * The list below describes the wildcard characters that you can use so that the entity name\n   * can match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * If *true* then any violation associated to the respective cookie will not be enforced,\n   * and the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * Specifies, when true, that the system adds the Secure attribute to the domain cookie's\n   * response header.\n   * This is done to ensure that the cookies are returned to the server only over SSL (by\n   * using the HTTPS protocol).\n   * This prevents the cookie from being intercepted, but does not guarantee its integrity.\n   *\n   * **Notes**:\n   * - The system does not validate that the cookie was received over SSL.\n   * - The feature covers all security policy cookies, both enforced and allowed, explicit and\n   * wildcard.\n   */\n  securedOverHttpsConnection?: boolean;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this\n   * cookie,\n   * and which action the security policy takes when it discovers a request for this cookie\n   * that matches these attack signatures.\n   */\n  signatureOverrides?: CookySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute.\n   * Only when setting the type to wildcard will the special wildcard characters in the name\n   * interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies the order index for wildcard cookies matching.\n   * Wildcard cookies with lower wildcard order will get checked for a match prior to cookies\n   * with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\n/**\n * Specifies how the system treats this cookie.\n *\n * - **enforced**: Specifies that according to the security policy, this cookie may not be\n * changed by the client.\n * - **allowed**: Specifies that according to the security policy, this cookie may be\n * changed by the client. The system ignores this cookie.\n */\nexport enum EnforcementType {\n  Allow = \"allow\",\n  Enforce = \"enforce\",\n}\n\n/**\n * The introduction of the SameSite http attribute (defined in\n * [RFC6265bis](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00))\n * allows you to declare if your cookie should be restricted to a first-party or same-site\n * context.\n * Introducing the SameSite attribute on a cookie provides three different ways of\n * controlling same-site vs. cross-site cookie sending:\n *\n * - **strict**: Cookie will only be sent in a first-party context. In user terms, the\n * cookie will only be sent if the site for the cookie matches the site currently shown in\n * the browser's URL bar.\n * - **lax**: Cookies will be sent with top level navigation\n * - **none-value**: Cookies will be sent in a third-party context.\n */\nexport enum InsertSameSiteAttribute {\n  Lax = \"lax\",\n  None = \"none\",\n  NoneValue = \"none-value\",\n  Strict = \"strict\",\n}\n\nexport interface CookySignatureOverride {\n  /**\n   * Specifies, when true, that the overridden signature is enforced\n   */\n  enabled?: boolean;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n  /**\n   * The signature ID which identifies the signature.\n   */\n  signatureId?: number;\n  /**\n   * The signature tag, which along with the signature name, identifies the signature.\n   */\n  tag?: string;\n}\n\nexport interface CSRFProtection {\n  enabled?: boolean;\n  expirationTimeInSeconds?: ExpirationTime | number;\n  sslOnly?: boolean;\n}\n\nexport enum ExpirationTime {\n  Disabled = \"disabled\",\n}\n\nexport interface CSRFURL {\n  enforcementAction?: EnforcementAction;\n  method?: CSRFURLMethod;\n  parametersList?: string[];\n  requiredParameters?: RequiredParameters;\n  url: string;\n  wildcardOrder?: number;\n}\n\nexport enum EnforcementAction {\n  None = \"none\",\n  VerifyCSRFToken = \"verify-csrf-token\",\n  VerifyOrigin = \"verify-origin\",\n}\n\nexport enum CSRFURLMethod {\n  Any = \"any\",\n  Get = \"GET\",\n  Post = \"POST\",\n}\n\nexport enum RequiredParameters {\n  AtLeastOne = \"at-least-one\",\n  FromParametersList = \"from-parameters-list\",\n  Ignore = \"ignore\",\n}\n\n/**\n * Data Guard feature can prevent responses from exposing sensitive information by masking\n * the data.\n */\nexport interface DataGuard {\n  /**\n   * If *true* the system considers credit card numbers as sensitive data.\n   */\n  creditCardNumbers?: boolean;\n  /**\n   * If *true* the system recognizes customized patterns as sensitive data.\n   */\n  customPatterns?: boolean;\n  /**\n   * List of PCRE regular expressions that specify the sensitive data patterns.\n   */\n  customPatternsList?: string[];\n  /**\n   * If *true* the system protects sensitive data.\n   */\n  enabled?: boolean;\n  /**\n   * Specifies the URLs for which the system enforces data guard protection.\n   *\n   * - **ignore-urls-in-list**: Specifies that the system enforces data guard protection for\n   * all URLs except for those URLs in the Enforcement Mode list.\n   * - **enforce-urls-in-list**: Specifies that the system enforces data guard protection only\n   * for those URLs in the Enforcement Mode list\n   */\n  enforcementMode?: DataGuardEnforcementMode;\n  /**\n   * List of URLS to be enforced based on enforcement mode of data guard protection.\n   */\n  enforcementUrls?: string[];\n  /**\n   * If *true* the system recognizes exception patterns as not being sensitive data.\n   */\n  exceptionPatterns?: boolean;\n  /**\n   * List of PCRE regular expressions that specify the data patterns that are not recognized\n   * as sensitive data.\n   */\n  exceptionPatternsList?: string[];\n  /**\n   * If *true* the system checks responses for file content.\n   */\n  fileContentDetection?: boolean;\n  /**\n   * File content types that the system considers to be sensitive data. Available file content\n   * types:\n   * - MS Office 2007 or later\n   * - MS Office 97-2003 document\n   * - PDF - Adobe Portable Document Format\n   * - Mach-O - Mach object file format - used in Mac OS X\n   * - PE - Portable Executable for Windows\n   * - ELF - binary file format for Unix\n   */\n  fileContentDetectionFormats?: FileContentDetectionFormat[];\n  /**\n   * Specifies the number of last digits in credit card numbers that are exposed.\n   */\n  lastCcnDigitsToExpose?: number;\n  /**\n   * Specifies the number of last digits in U.S Social Security numbers that are exposed.\n   */\n  lastSsnDigitsToExpose?: number;\n  /**\n   * If *true* the system intercepts the returned responses to mask sensitive data.\n   */\n  maskData?: boolean;\n  /**\n   * If *true* the system considers U.S Social Security numbers as sensitive data.\n   */\n  usSocialSecurityNumbers?: boolean;\n}\n\n/**\n * Specifies the URLs for which the system enforces data guard protection.\n *\n * - **ignore-urls-in-list**: Specifies that the system enforces data guard protection for\n * all URLs except for those URLs in the Enforcement Mode list.\n * - **enforce-urls-in-list**: Specifies that the system enforces data guard protection only\n * for those URLs in the Enforcement Mode list\n */\nexport enum DataGuardEnforcementMode {\n  EnforceUrlsInList = \"enforce-urls-in-list\",\n  IgnoreUrlsInList = \"ignore-urls-in-list\",\n}\n\nexport interface FileContentDetectionFormat {\n  name?: FileContentDetectionFormatName;\n}\n\nexport enum FileContentDetectionFormatName {\n  ELFBinaryFileFormatForUnix = \"ELF - binary file format for Unix\",\n  MSOffice2007OrLater = \"MS Office 2007 or later\",\n  MSOffice972003Document = \"MS Office 97-2003 document\",\n  MachOMachObjectFileFormatUsedInMACOSX = \"Mach-O - Mach object file format - used in Mac OS X\",\n  PDFAdobePortableDocumentFormat = \"PDF - Adobe Portable Document Format\",\n  PEPortableExecutableForWindows = \"PE - Portable Executable for Windows\",\n}\n\nexport interface DatabaseProtection {\n  databaseProtectionEnabled?: boolean;\n  userSource?: UserSource;\n}\n\nexport enum UserSource {\n  Apm = \"apm\",\n  LoginPages = \"login-pages\",\n}\n\nexport interface DeceptionResponsePage {\n  responseBody?: string;\n  responseHeaders?: string;\n  responseStatusCode: string;\n}\n\nexport interface DeceptionSettings {\n  enableCustomResponses?: boolean;\n  enableResponsePageByAttackType?: boolean;\n  responseStatusCodes?: string[];\n  serverTechnologyName?: string;\n}\n\nexport interface DisabledActionItem {\n  type: DisabledActionItemType;\n}\n\nexport enum DisabledActionItemType {\n  CookieStaging = \"cookie-staging\",\n  DefaultParameter = \"default-parameter\",\n  FiletypeStaging = \"filetype-staging\",\n  ModifiedPolicy = \"modified-policy\",\n  ParameterStaging = \"parameter-staging\",\n  PolicyValidation = \"policy-validation\",\n  ScannerVulnerabilities = \"scanner-vulnerabilities\",\n  SignatureStaging = \"signature-staging\",\n  ThreatCampaignStaging = \"threat-campaign-staging\",\n  TransparentPolicy = \"transparent-policy\",\n  URLStaging = \"url-staging\",\n  WebsocketURLStaging = \"websocket-url-staging\",\n}\n\n/**\n * Specifies a list of countries that may not access the web application.\n */\nexport interface DisallowedGeolocation {\n  /**\n   * Specifies the ISO country code of the selected country.\n   */\n  countryCode?: string;\n  /**\n   * Specifies the name of the country.\n   */\n  countryName: CountryName;\n}\n\n/**\n * Specifies the name of the country.\n */\nexport enum CountryName {\n  Afghanistan = \"Afghanistan\",\n  AlandIslands = \"Aland Islands\",\n  Albania = \"Albania\",\n  Algeria = \"Algeria\",\n  AmericanSamoa = \"American Samoa\",\n  Andorra = \"Andorra\",\n  Angola = \"Angola\",\n  Anguilla = \"Anguilla\",\n  AnonymousProxy = \"Anonymous Proxy\",\n  Antarctica = \"Antarctica\",\n  AntiguaAndBarbuda = \"Antigua and Barbuda\",\n  Argentina = \"Argentina\",\n  Armenia = \"Armenia\",\n  Aruba = \"Aruba\",\n  Australia = \"Australia\",\n  Austria = \"Austria\",\n  Azerbaijan = \"Azerbaijan\",\n  Bahamas = \"Bahamas\",\n  Bahrain = \"Bahrain\",\n  Bangladesh = \"Bangladesh\",\n  Barbados = \"Barbados\",\n  Belarus = \"Belarus\",\n  Belgium = \"Belgium\",\n  Belize = \"Belize\",\n  Benin = \"Benin\",\n  Bermuda = \"Bermuda\",\n  Bhutan = \"Bhutan\",\n  Bolivia = \"Bolivia\",\n  BosniaAndHerzegovina = \"Bosnia and Herzegovina\",\n  Botswana = \"Botswana\",\n  BouvetIsland = \"Bouvet Island\",\n  Brazil = \"Brazil\",\n  BritishIndianOceanTerritory = \"British Indian Ocean Territory\",\n  BruneiDarussalam = \"Brunei Darussalam\",\n  Bulgaria = \"Bulgaria\",\n  BurkinaFaso = \"Burkina Faso\",\n  Burundi = \"Burundi\",\n  Cambodia = \"Cambodia\",\n  Cameroon = \"Cameroon\",\n  Canada = \"Canada\",\n  CapeVerde = \"Cape Verde\",\n  CaymanIslands = \"Cayman Islands\",\n  CentralAfricanRepublic = \"Central African Republic\",\n  Chad = \"Chad\",\n  Chile = \"Chile\",\n  China = \"China\",\n  ChristmasIsland = \"Christmas Island\",\n  CocosKeelingIslands = \"Cocos (Keeling) Islands\",\n  Colombia = \"Colombia\",\n  Comoros = \"Comoros\",\n  Congo = \"Congo\",\n  CongoTheDemocraticRepublicOfThe = \"Congo, The Democratic Republic of the\",\n  CookIslands = \"Cook Islands\",\n  CostaRica = \"Costa Rica\",\n  CoteDIvoire = \"Cote D'Ivoire\",\n  Croatia = \"Croatia\",\n  Cuba = \"Cuba\",\n  Cyprus = \"Cyprus\",\n  CzechRepublic = \"Czech Republic\",\n  Denmark = \"Denmark\",\n  Djibouti = \"Djibouti\",\n  Dominica = \"Dominica\",\n  DominicanRepublic = \"Dominican Republic\",\n  Ecuador = \"Ecuador\",\n  Egypt = \"Egypt\",\n  ElSalvador = \"El Salvador\",\n  EquatorialGuinea = \"Equatorial Guinea\",\n  Eritrea = \"Eritrea\",\n  Estonia = \"Estonia\",\n  Ethiopia = \"Ethiopia\",\n  FalklandIslandsMalvinas = \"Falkland Islands (Malvinas)\",\n  FaroeIslands = \"Faroe Islands\",\n  Fiji = \"Fiji\",\n  Finland = \"Finland\",\n  France = \"France\",\n  FranceMetropolitan = \"France, Metropolitan\",\n  FrenchGuiana = \"French Guiana\",\n  FrenchPolynesia = \"French Polynesia\",\n  FrenchSouthernTerritories = \"French Southern Territories\",\n  Gabon = \"Gabon\",\n  Gambia = \"Gambia\",\n  Georgia = \"Georgia\",\n  Germany = \"Germany\",\n  Ghana = \"Ghana\",\n  Gibraltar = \"Gibraltar\",\n  Greece = \"Greece\",\n  Greenland = \"Greenland\",\n  Grenada = \"Grenada\",\n  Guadeloupe = \"Guadeloupe\",\n  Guam = \"Guam\",\n  Guatemala = \"Guatemala\",\n  Guernsey = \"Guernsey\",\n  Guinea = \"Guinea\",\n  GuineaBissau = \"Guinea-Bissau\",\n  Guyana = \"Guyana\",\n  Haiti = \"Haiti\",\n  HeardIslandAndMcDonaldIslands = \"Heard Island and McDonald Islands\",\n  HolySeeVaticanCityState = \"Holy See (Vatican City State)\",\n  Honduras = \"Honduras\",\n  HongKong = \"Hong Kong\",\n  Hungary = \"Hungary\",\n  Iceland = \"Iceland\",\n  India = \"India\",\n  Indonesia = \"Indonesia\",\n  IranIslamicRepublicOf = \"Iran, Islamic Republic of\",\n  Iraq = \"Iraq\",\n  Ireland = \"Ireland\",\n  IsleOfMan = \"Isle of Man\",\n  Israel = \"Israel\",\n  Italy = \"Italy\",\n  Jamaica = \"Jamaica\",\n  Japan = \"Japan\",\n  Jersey = \"Jersey\",\n  Jordan = \"Jordan\",\n  Kazakhstan = \"Kazakhstan\",\n  Kenya = \"Kenya\",\n  Kiribati = \"Kiribati\",\n  KoreaDemocraticPeopleSRepublicOf = \"Korea, Democratic People's Republic of\",\n  KoreaRepublicOf = \"Korea, Republic of\",\n  Kuwait = \"Kuwait\",\n  Kyrgyzstan = \"Kyrgyzstan\",\n  LaoPeopleSDemocraticRepublic = \"Lao People's Democratic Republic\",\n  Latvia = \"Latvia\",\n  Lebanon = \"Lebanon\",\n  Lesotho = \"Lesotho\",\n  Liberia = \"Liberia\",\n  LibyanArabJamahiriya = \"Libyan Arab Jamahiriya\",\n  Liechtenstein = \"Liechtenstein\",\n  Lithuania = \"Lithuania\",\n  Luxembourg = \"Luxembourg\",\n  Macau = \"Macau\",\n  Macedonia = \"Macedonia\",\n  Madagascar = \"Madagascar\",\n  Malawi = \"Malawi\",\n  Malaysia = \"Malaysia\",\n  Maldives = \"Maldives\",\n  Mali = \"Mali\",\n  Malta = \"Malta\",\n  MarshallIslands = \"Marshall Islands\",\n  Martinique = \"Martinique\",\n  Mauritania = \"Mauritania\",\n  Mauritius = \"Mauritius\",\n  Mayotte = \"Mayotte\",\n  Mexico = \"Mexico\",\n  MicronesiaFederatedStatesOf = \"Micronesia, Federated States of\",\n  MoldovaRepublicOf = \"Moldova, Republic of\",\n  Monaco = \"Monaco\",\n  Mongolia = \"Mongolia\",\n  Montenegro = \"Montenegro\",\n  Montserrat = \"Montserrat\",\n  Morocco = \"Morocco\",\n  Mozambique = \"Mozambique\",\n  Myanmar = \"Myanmar\",\n  NA = \"N/A\",\n  Namibia = \"Namibia\",\n  Nauru = \"Nauru\",\n  Nepal = \"Nepal\",\n  Netherlands = \"Netherlands\",\n  NetherlandsAntilles = \"Netherlands Antilles\",\n  NewCaledonia = \"New Caledonia\",\n  NewZealand = \"New Zealand\",\n  Nicaragua = \"Nicaragua\",\n  Niger = \"Niger\",\n  Nigeria = \"Nigeria\",\n  Niue = \"Niue\",\n  NorfolkIsland = \"Norfolk Island\",\n  NorthernMarianaIslands = \"Northern Mariana Islands\",\n  Norway = \"Norway\",\n  Oman = \"Oman\",\n  Other = \"Other\",\n  Pakistan = \"Pakistan\",\n  Palau = \"Palau\",\n  PalestinianTerritory = \"Palestinian Territory\",\n  Panama = \"Panama\",\n  PapuaNewGuinea = \"Papua New Guinea\",\n  Paraguay = \"Paraguay\",\n  Peru = \"Peru\",\n  Philippines = \"Philippines\",\n  PitcairnIslands = \"Pitcairn Islands\",\n  Poland = \"Poland\",\n  Portugal = \"Portugal\",\n  PuertoRico = \"Puerto Rico\",\n  Qatar = \"Qatar\",\n  Reunion = \"Reunion\",\n  Romania = \"Romania\",\n  RussianFederation = \"Russian Federation\",\n  Rwanda = \"Rwanda\",\n  SANMarino = \"San Marino\",\n  SaintBarthelemy = \"Saint Barthelemy\",\n  SaintHelena = \"Saint Helena\",\n  SaintKittsAndNevis = \"Saint Kitts and Nevis\",\n  SaintLucia = \"Saint Lucia\",\n  SaintMartin = \"Saint Martin\",\n  SaintPierreAndMiquelon = \"Saint Pierre and Miquelon\",\n  SaintVincentAndTheGrenadines = \"Saint Vincent and the Grenadines\",\n  Samoa = \"Samoa\",\n  SaoTomeAndPrincipe = \"Sao Tome and Principe\",\n  SatelliteProvider = \"Satellite Provider\",\n  SaudiArabia = \"Saudi Arabia\",\n  Senegal = \"Senegal\",\n  Serbia = \"Serbia\",\n  Seychelles = \"Seychelles\",\n  SierraLeone = \"Sierra Leone\",\n  Singapore = \"Singapore\",\n  Slovakia = \"Slovakia\",\n  Slovenia = \"Slovenia\",\n  SolomonIslands = \"Solomon Islands\",\n  Somalia = \"Somalia\",\n  SouthAfrica = \"South Africa\",\n  SouthGeorgiaAndTheSouthSandwichIslands = \"South Georgia and the South Sandwich Islands\",\n  Spain = \"Spain\",\n  SriLanka = \"Sri Lanka\",\n  Sudan = \"Sudan\",\n  Suriname = \"Suriname\",\n  SvalbardAndJanMayen = \"Svalbard and Jan Mayen\",\n  Swaziland = \"Swaziland\",\n  Sweden = \"Sweden\",\n  Switzerland = \"Switzerland\",\n  SyrianArabRepublic = \"Syrian Arab Republic\",\n  Taiwan = \"Taiwan\",\n  Tajikistan = \"Tajikistan\",\n  TanzaniaUnitedRepublicOf = \"Tanzania, United Republic of\",\n  Thailand = \"Thailand\",\n  TimorLeste = \"Timor-Leste\",\n  Togo = \"Togo\",\n  Tokelau = \"Tokelau\",\n  Tonga = \"Tonga\",\n  TrinidadAndTobago = \"Trinidad and Tobago\",\n  Tunisia = \"Tunisia\",\n  Turkey = \"Turkey\",\n  Turkmenistan = \"Turkmenistan\",\n  TurksAndCaicosIslands = \"Turks and Caicos Islands\",\n  Tuvalu = \"Tuvalu\",\n  Uganda = \"Uganda\",\n  Ukraine = \"Ukraine\",\n  UnitedArabEmirates = \"United Arab Emirates\",\n  UnitedKingdom = \"United Kingdom\",\n  UnitedStates = \"United States\",\n  UnitedStatesMinorOutlyingIslands = \"United States Minor Outlying Islands\",\n  Uruguay = \"Uruguay\",\n  Uzbekistan = \"Uzbekistan\",\n  Vanuatu = \"Vanuatu\",\n  Venezuela = \"Venezuela\",\n  Vietnam = \"Vietnam\",\n  VirginIslandsBritish = \"Virgin Islands, British\",\n  VirginIslandsUS = \"Virgin Islands, U.S.\",\n  WallisAndFutuna = \"Wallis and Futuna\",\n  WesternSahara = \"Western Sahara\",\n  Yemen = \"Yemen\",\n  Zambia = \"Zambia\",\n  Zimbabwe = \"Zimbabwe\",\n}\n\n/**\n * How the system processes a request that triggers a security policy violation.\n * - **Blocking:** When the enforcement mode is set to blocking, traffic is blocked if it\n * causes a violation (configured for blocking).\n * - **Transparent:** When the enforcement mode is set to transparent, traffic is not\n * blocked even if a violation is triggered.\n */\nexport enum PolicyEnforcementMode {\n  Blocking = \"blocking\",\n  Transparent = \"transparent\",\n}\n\n/**\n * File types are categorization of the URLs in the request by the extension appearing past\n * the last dot at the end of the URL. For example, the file type of /index.php\n * is \"php\". Other well known file types are html, aspx, png, jpeg and many more. A special\n * case is the \"empty\" file type called \"no-ext\" meaning, no extension in which the URL has\n * no dot at its last segment as in /foo_no_dot\n *\n * File types usually imply the expected content type in the response. For example, html and\n * php return HTML content, while jpeg, png and gif return images, each in its respective\n * format. File types also imply the server technology deployed for rendering the page. For\n * example, php (PHP), aspx (ASP) and many others.\n *\n * The security policy uses file types for several purposes:\n * 1. Ability to define which file types are allowed and which are disallowed. By including\n * the pure wildcard \"\\*\" file type and a list of disallowed file types you have a file type\n * denylist.\n * By having a list of explicit file type *without* the pure wildcard \"\\*\" you have a file\n * type allowlist.\n * 2. Each file type implies maximum *length resrictions* for the requests of that file\n * type. The checked lengths are per the URL, Query String, total request length and payload\n * (POST data).\n * 3. Each file type determines whether to detect *response signatures* for requests of that\n * file type. Typically, one would never check signatures for image file types.\n */\nexport interface Filetype {\n  /**\n   * Determines whether the file type is allowed or disallowed. In either of these cases the\n   * VIOL_FILETYPE violation is issued (if enabled) for an incoming request-\n   * 1. No allowed file type matched the file type of the request.\n   * 2. The file type of the request matched a disallowed file type.\n   */\n  allowed?: boolean;\n  /**\n   * Determines whether to enforce maximum length restriction for the body, a.k.a. \"POST data\"\n   * part of the requests that match the respective file type. The maximum length is\n   * determined by *postDataLength* attribute.\n   * Although named \"POST data\", this applies to any content type and not restricted to POST\n   * requests, e.g. PUT requests are also checked.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  checkPostDataLength?: boolean;\n  /**\n   * Determines whether to enforce maximum length restriction for the query string of the\n   * requests that match the respective file type. The maximum length is determined by\n   * *queryStringLength* attribute.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  checkQueryStringLength?: boolean;\n  /**\n   * Determines whether to enforce maximum length restriction for the total length of requests\n   * that match the respective file type. The maximum length is determined by *requestLength*\n   * attribute.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  checkRequestLength?: boolean;\n  /**\n   * Determines whether to enforce maximum length restriction for the URL of the requests that\n   * match the respective file type. The URL does *not* include the query string, past the &.\n   * The maximum length is determined by *urlLength* attribute.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  checkUrlLength?: boolean;\n  /**\n   * Specifies the file type name as appearing in the URL extension. Names can be one of the\n   * following according to the *type* attribute:\n   *\n   * - **Explicit** - Specifies that the name is the liternal file extension to which the file\n   * type refers. The *type* attribute has to be \"explicit\".\n   * - **No Extension** - Specifies the empty file type, lacking file extension. For this the\n   * reserved string **no_ext** should be used. The *type* attribute has to be \"explicit\".\n   * - **Wildcard** - Specifies that any file extension that matches the wildcard expression\n   * is matched to this file type in the policy. The *type* attribute has to be \"wildcard\".\n   *\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * If *true* then any violation associated to the respective file type will not be enforced,\n   * and the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * The maximum length in bytes of the body (POST data) of the request matching the file\n   * type. Enforced only if checkPostDataLength is set to *true*.\n   * If the value is exceeded then VIOL_POST_DATA_LENGTH violation is issued.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  postDataLength?: number;\n  /**\n   * The maximum length in bytes of the query string of the request matching the file type.\n   * Enforced only if checkQueryStringLength is set to *true*.\n   * If the value is exceeded then VIOL_QUERY_STRING_LENGTH violation is issued.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  queryStringLength?: number;\n  /**\n   * The maximum total length in bytes of the request matching the file type. Enforced only if\n   * checkRequestLength is set to *true*.\n   * If the value is exceeded then VIOL_REQUEST_LENGTH violation is issued.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  requestLength?: number;\n  /**\n   * Determines whether the responses to requests that match the respective file types are\n   * inspected for attack signature detection.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  responseCheck?: boolean;\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * The maximum length in bytes of the URL of the request matching the file type, excluding\n   * the query string. Enforced only if checkUrlLength is set to *true*.\n   * If the value is exceeded then VIOL_URL_LENGTH violation is issued.\n   * This attribute is relevant only to *allowed* file types.\n   */\n  urlLength?: number;\n  wildcardOrder?: number;\n}\n\n/**\n * This section includes several advanced policy configuration settings.\n */\nexport interface General {\n  /**\n   * You can specify which responses a security policy permits.\n   * By default, the system accepts all response codes from 100 to 399 as valid responses.\n   * Response codes from 400 to 599 are considered invalid unless added to the Allowed\n   * Response Status Codes list.\n   * By default, 400, 401, 404, 407, 417, and 503 are on the list as allowed HTTP response\n   * status codes.\n   */\n  allowedResponseCodes?: number[];\n  /**\n   * If you require the system to trust a server further than one hop toward the client (the\n   * last proxy traversed), you can use the Custom XFF Headers setting to define a specific\n   * header that is inserted closer to, or at the client, that the system will trust.\n   * Additionally, if you require the system to trust a proxy server that uses a different\n   * header name than the X-Forwarded-For header name, you can add the desired header name to\n   * the Custom XFF Headers setting.\n   * When adding a custom header, the X-Forwarded-For header is not trusted anymore. In case\n   * the X-Forwarded-For header is to be trusted along with other headers, you must add it to\n   * the custom headers list.\n   */\n  customXffHeaders?: string[];\n  /**\n   * A description of user-defined regular expression that the security policy uses to\n   * recognize dynamic sessions in URLs.\n   */\n  dynamicSessionIdDescription?: string;\n  /**\n   * A user-defined regular expression that the security policy uses to recognize dynamic\n   * sessions in URLs.\n   */\n  dynamicSessionIdInUrl?: string;\n  /**\n   * This feature designed to provide an aggregated view of security events in the\n   * Configuration utility.\n   * When two or more illegal requests are sent to the web application within a short period\n   * of time, the system correlates them as a security event.\n   * For example, the system aggregates requests into a single event if a single user causes\n   * multiple violations over time.\n   * When enabled, Event Correlation Reporting logs are collected.\n   */\n  enableEventCorrelation?: boolean;\n  /**\n   * For each security policy, you can configure the number of days used as the enforcement\n   * readiness period, also called staging.\n   * Security policy entities and attack signatures remain in staging for this period of time\n   * before the system suggests that you enforce them.\n   * Staging allows you to test security policy entities and attack signatures for false\n   * positives without enforcing them.\n   * The default value of 7 days works for most situations so you typically do not need to\n   * change it.\n   */\n  enforcementReadinessPeriod?: number;\n  /**\n   * When enabled, the security policy masks credit card numbers that appear in any part of\n   * requests. The system does not mask the information in the actual requests, but rather in\n   * various logs:\n   * * Credit card numbers appearing in entity names are masked in the requests of the\n   * Requests log.\n   * * Credit card numbers appearing in entity values are masked wherever requests can be\n   * viewed: the Requests log, violation details within that log, manual learning, and\n   * reports.\n   * This setting is enabled by default, and exists in addition to masking parameters defined\n   * as containing sensitive information.\n   */\n  maskCreditCardNumbersInRequest?: boolean;\n  /**\n   * A URI path parameter is the part of a path segment that occurs after its name. You can\n   * configure how a security policy handles path parameters that are attached to path\n   * segments in URIs.\n   * You can enforce different levels of security based on your needs:\n   *\n   * - **as-parameter**: The system normalizes and enforces path parameters. For each path\n   * parameter, the system removes it from URLs as part of the normalization process, finds a\n   * corresponding parameter in the security policy (first at the matching URL level, and if\n   * not found, then at the Global level), and enforces it according to its attributes like\n   * any other parameters.\n   * - **as-url**: The system does not normalize nor enforce path parameters. Path parameters\n   * are considered an integral part of the URL.\n   * - **ignore**: The system removes path parameters from URLs as part of the normalization\n   * process, but does not enforce them.\n   */\n  pathParameterHandling?: PathParameterHandling;\n  /**\n   * When enabled, the system activates ASM iRule events. When disabled, the system does not\n   * activate ASM iRule events. Enable this option if you have written iRules that process ASM\n   * iRule events, and assigned them to a specific virtual server. The default setting is\n   * disabled.\n   *\n   * - **disabled**: Leave this option disabled if you either have not written any ASM iRules.\n   * - **enabled-normal**: The system invokes the event ASM_REQUEST_DONE after the system\n   * completes processing each request, regardless of whether the request triggered\n   * violations. This gives you the opportunity, using iRules, to configure the system to\n   * perform actions after ASM handles requests whether they trigger, or do not trigger,\n   * violations.\n   * - **enabled-compatibility**: The system invokes the event ASM_REQUEST_VIOLATION after the\n   * system completes processing each request that triggered a violation. This gives you the\n   * opportunity, using iRules, to configure the system to perform actions after ASM handles\n   * requests only that trigger violations.\n   */\n  triggerAsmIruleEvent?: TriggerASMIruleEvent;\n  /**\n   * When enabled, the system has confidence in an XFF (X-Forwarded-For) header in the\n   * request. When disabled, that the system does not have confidence in an XFF header in the\n   * request. The default setting is disabled.\n   *\n   * Select this option if the system is deployed behind an internal or other trusted proxy.\n   * Then, the system uses the IP address that initiated the connection to the proxy instead\n   * of the internal proxy's IP address.\n   *\n   * Leave this option disabled if you think the HTTP header may be spoofed, or crafted, by a\n   * malicious client. With this setting disabled, if the system is deployed behind an\n   * internal proxy, the system uses the internal proxy's IP address instead of the client's\n   * IP address.\n   */\n  trustXff?: boolean;\n  /**\n   * How the security policy processes URLs that use dynamic sessions. When disabled the\n   * security policy does not enforce dynamic sessions in URLs.\n   * When enabled the system will use a default or user-defined pattern for recognizing\n   * dynamic sessions in URLs.\n   */\n  useDynamicSessionIdInUrl?: boolean;\n}\n\n/**\n * A URI path parameter is the part of a path segment that occurs after its name. You can\n * configure how a security policy handles path parameters that are attached to path\n * segments in URIs.\n * You can enforce different levels of security based on your needs:\n *\n * - **as-parameter**: The system normalizes and enforces path parameters. For each path\n * parameter, the system removes it from URLs as part of the normalization process, finds a\n * corresponding parameter in the security policy (first at the matching URL level, and if\n * not found, then at the Global level), and enforces it according to its attributes like\n * any other parameters.\n * - **as-url**: The system does not normalize nor enforce path parameters. Path parameters\n * are considered an integral part of the URL.\n * - **ignore**: The system removes path parameters from URLs as part of the normalization\n * process, but does not enforce them.\n */\nexport enum PathParameterHandling {\n  AsParameters = \"as-parameters\",\n  AsURL = \"as-url\",\n  Ignore = \"ignore\",\n}\n\n/**\n * When enabled, the system activates ASM iRule events. When disabled, the system does not\n * activate ASM iRule events. Enable this option if you have written iRules that process ASM\n * iRule events, and assigned them to a specific virtual server. The default setting is\n * disabled.\n *\n * - **disabled**: Leave this option disabled if you either have not written any ASM iRules.\n * - **enabled-normal**: The system invokes the event ASM_REQUEST_DONE after the system\n * completes processing each request, regardless of whether the request triggered\n * violations. This gives you the opportunity, using iRules, to configure the system to\n * perform actions after ASM handles requests whether they trigger, or do not trigger,\n * violations.\n * - **enabled-compatibility**: The system invokes the event ASM_REQUEST_VIOLATION after the\n * system completes processing each request that triggered a violation. This gives you the\n * opportunity, using iRules, to configure the system to perform actions after ASM handles\n * requests only that trigger violations.\n */\nexport enum TriggerASMIruleEvent {\n  Disabled = \"disabled\",\n  EnabledCompatibility = \"enabled-compatibility\",\n  EnabledNormal = \"enabled-normal\",\n}\n\nexport interface GWTProfile {\n  attackSignaturesCheck?: boolean;\n  defenseAttributes?: GWTProfileDefenseAttributes;\n  description?: string;\n  metacharElementCheck?: boolean;\n  metacharOverrides?: GWTProfileMetacharOverride[];\n  name: string;\n  signatureOverrides?: GWTProfileSignatureOverride[];\n}\n\nexport interface GWTProfileDefenseAttributes {\n  maximumTotalLengthOfGWTData?: MaximumCookieHeaderLengthEnum | number;\n  maximumValueLength?: MaximumCookieHeaderLengthEnum | number;\n  tolerateGWTParsingWarnings?: boolean;\n}\n\nexport interface GWTProfileMetacharOverride {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface GWTProfileSignatureOverride {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\n/**\n * The maximum length of an HTTP header name and value that the system processes. The system\n * calculates and enforces the HTTP header length based on the sum of the length of the HTTP\n * header name and value.\n */\nexport interface HeaderSettings {\n  /**\n   * Maximum HTTP Header Length must be greater than 0 and less than 65536 bytes (64K). Note:\n   * if 0 or *any* are set, then no restriction on the HTTP header length is applied.\n   */\n  maximumHttpHeaderLength?: MaximumCookieHeaderLengthEnum | number;\n}\n\nexport interface Header {\n  allowRepeatedOccurrences?: boolean;\n  base64Decoding?: boolean;\n  checkSignatures?: boolean;\n  htmlNormalization?: boolean;\n  mandatory?: boolean;\n  maskValueInLogs?: boolean;\n  name: string;\n  normalizationViolations?: boolean;\n  percentDecoding?: boolean;\n  signatureOverrides?: HeaderSignatureOverride[];\n  type?: HostNameTypeEnum;\n  urlNormalization?: boolean;\n  wildcardOrder?: number;\n}\n\nexport interface HeaderSignatureOverride {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport interface HostName {\n  includeSubdomains?: boolean;\n  name: string;\n}\n\nexport interface IPIntelligence {\n  enabled?: boolean;\n  ipIntelligenceCategories?: IPIntelligenceCategory[];\n}\n\nexport interface IPIntelligenceCategory {\n  alarm?: boolean;\n  block?: boolean;\n  category: Category;\n  description?: IPIntelligenceCategoryDescription;\n}\n\nexport enum Category {\n  AnonymousProxy = \"Anonymous Proxy\",\n  BotNets = \"BotNets\",\n  CloudBasedServices = \"Cloud-based Services\",\n  DenialOfService = \"Denial of Service\",\n  InfectedSources = \"Infected Sources\",\n  MobileThreats = \"Mobile Threats\",\n  PhishingProxies = \"Phishing Proxies\",\n  Scanners = \"Scanners\",\n  SpamSources = \"Spam Sources\",\n  TorProxies = \"Tor Proxies\",\n  WebAttacks = \"Web Attacks\",\n  WindowsExploits = \"Windows Exploits\",\n}\n\nexport enum IPIntelligenceCategoryDescription {\n  TheAnonymousProxyCategoryIncludesIPAddressesThatProvideProxyAndAnonymizingServices = \"The Anonymous Proxy category includes IP addresses that provide proxy and anonymizing services.\",\n  TheBotnetsCategoryIncludesBotnetCCChannelsAndAnInfectedZombieMachineControlledByABotMaster = \"The Botnets category includes Botnet C&C channels and an infected zombie machine controlled by a Bot master.\",\n  TheCloudBasedServicesCategoryIncludesIPAddressesAndNetworksThatAreUsedByCloudProviders = \"The Cloud-based Services category includes IP addresses and networks that are used by cloud providers.\",\n  TheDenialOfServicesCategoryIncludesDOSDDOSAnomalousSynFloodAndAnomalousTrafficDetection = \"The Denial of Services category includes DOS, DDOS, anomalous syn flood, and anomalous traffic detection.\",\n  TheInfectedSourcesCategoryIncludesIPAddressesCurrentlyKnownToBeInfectedWithMalwareAndIPAddressesWithAnAverageLowReputationIndexScoreEnablingThisCategoryPreventsAccessFromSourcesIdentifiedToContactMalwareDistributionPoints = \"The Infected Sources category includes IP addresses currently known to be infected with malware, and IP addresses with an average low Reputation Index score. Enabling this category prevents access from sources identified to contact malware distribution points.\",\n  TheMobileThreatsCategoryIncludesIPAddressesOfMaliciousAndUnwantedMobileApplications = \"The Mobile Threats category includes IP addresses of malicious and unwanted mobile applications.\",\n  ThePhishingProxiesCategoryIncludesIPAddressesHostingPhishingSitesAndOtherKindOfFraudActivitiesSuchAsAdClickFraudAndGamingFraud = \"The Phishing Proxies category includes IP addresses hosting phishing sites, and other kind of fraud activities such as Ad Click Fraud and Gaming fraud.\",\n  TheScannersCategoryIncludesAllReconnaissanceSuchAsProbesHostScanDomainScanAndPasswordBruteForce = \"The Scanners category includes all reconnaissance, such as probes, host scan, domain scan, and password brute force.\",\n  TheSpamSourcesCategoryIncludesTunnelingSpamMessagesThroughProxyAnomalousSMTPActivitiesAndForumSpamActivities = \"The Spam Sources category includes Tunneling Spam messages through proxy, anomalous SMTP activities, and Forum Spam activities.\",\n  TheTorProxiesCategoryIncludesIPAddressesActingAsExitNodesForTheTorNetworkExitNodesAreTheLastPointAlongTheProxyChainAndMakeADirectConnectionToTheOriginatorâSIntendedDestination = \"The Tor Proxies category includes IP addresses acting as exit nodes for the Tor Network. Exit nodes are the last point along the proxy chain and make a direct connection to the originatorâ\\u0080\\u0099s intended destination.\",\n  TheWebAttacksCategoryIncludesCrossSiteScriptingIFrameInjectionSQLInjectionCrossDomainInjectionAndDomainPasswordBruteForce = \"The Web Attacks category includes cross site scripting, iFrame injection, SQL injection, cross domain injection, and domain password brute force.\",\n  TheWindowsExploitsCategoryIncludesActiveIPAddressOfferingOrDistributingMalwareShellCodeRootkitsWormsAndViruses = \"The Windows Exploits category includes active IP address offering or distributing malware, shell code, rootkits, worms, and viruses.\",\n}\n\nexport interface JSONProfile {\n  attackSignaturesCheck?: boolean;\n  defenseAttributes?: JSONProfileDefenseAttributes;\n  description?: string;\n  handleJsonValuesAsParameters?: boolean;\n  hasValidationFiles?: boolean;\n  metacharElementCheck?: boolean;\n  metacharOverrides?: JSONProfileMetacharOverride[];\n  name: string;\n  sensitiveData?: JSONProfileSensitiveDatum[];\n  signatureOverrides?: JSONProfileSignatureOverride[];\n  validationFiles?: JSONProfileValidationFile[];\n}\n\nexport interface JSONProfileDefenseAttributes {\n  maximumArrayLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumStructureDepth?: MaximumCookieHeaderLengthEnum | number;\n  maximumTotalLengthOfJSONData?: MaximumCookieHeaderLengthEnum | number;\n  maximumValueLength?: MaximumCookieHeaderLengthEnum | number;\n  tolerateJSONParsingWarnings?: boolean;\n}\n\nexport interface JSONProfileMetacharOverride {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface JSONProfileSensitiveDatum {\n  parameterName: string;\n}\n\nexport interface JSONProfileSignatureOverride {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport interface JSONProfileValidationFile {\n  importUrl: string;\n  isPrimary?: boolean;\n  jsonValidationFile: PurpleJSONValidationFile;\n}\n\nexport interface PurpleJSONValidationFile {\n  contents: string;\n  fileName: string;\n  isBase64?: boolean;\n}\n\nexport interface JSONValidationFile {\n  contents: string;\n  fileName: string;\n  isBase64?: boolean;\n}\n\nexport interface LoginEnforcement {\n  authenticatedUrls?: string[];\n  expirationTimePeriod?: ExpirationTime | number;\n  logoutUrls?: LogoutURL[];\n}\n\nexport interface LogoutURL {\n  requestContains?: string;\n  requestOmits?: string;\n  url: LogoutURLURL;\n}\n\n/**\n * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n * is protected by Brute Force Protection feature.\n *\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface LogoutURLURL {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: PurpleDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: PurpleHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: PurpleMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: PurpleMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: PurplePositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: FluffySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: PurpleURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\n/**\n * A login page is a URL in a web application that requests must pass through to get to the\n * authenticated URLs. Use login pages, for example, to prevent forceful browsing of\n * restricted parts of the web application, by defining access permissions for users. Login\n * pages also allow session tracking of user sessions.\n */\nexport interface LoginPage {\n  /**\n   * Access Validation define validation criteria for the login page response. If you define\n   * more than one validation criteria, the response must meet all the criteria before the\n   * system allows the user to access the application login URL.\n   */\n  accessValidation?: LoginPageAccessValidation;\n  /**\n   * Authentication Type is method the web server uses to authenticate the login URL's\n   * credentials with a web user.\n   *\n   * - **none**: The web server does not authenticate users trying to access the web\n   * application through the login URL. This is the default setting.\n   * - **form**: The web application uses a form to collect and authenticate user credentials.\n   * If using this option, you also need to type the user name and password parameters written\n   * in the code of the HTML form.\n   * - **http-basic**: The user name and password are transmitted in Base64 and stored on the\n   * server in plain text.\n   * - **http-digest**: The web server performs the authentication; user names and passwords\n   * are not transmitted over the network, nor are they stored in plain text.\n   * - **ntlm**: Microsoft LAN Manager authentication (also called Integrated Windows\n   * Authentication) does not transmit credentials in plain text, but requires a continuous\n   * TCP connection between the server and client.\n   * - **ajax-or-json-request**: The web server uses JSON and AJAX requests to authenticate\n   * users trying to access the web application through the login URL. For this option, you\n   * also need to type the name of the JSON element containing the user name and password.\n   */\n  authenticationType?: AuthenticationType;\n  /**\n   * A name of parameter which will contain password string.\n   */\n  passwordParameterName?: string;\n  /**\n   * URL string used for login page.\n   */\n  url: LoginPageURL;\n  /**\n   * A name of parameter which will contain username string.\n   */\n  usernameParameterName?: string;\n}\n\n/**\n * Access Validation define validation criteria for the login page response. If you define\n * more than one validation criteria, the response must meet all the criteria before the\n * system allows the user to access the application login URL.\n */\nexport interface LoginPageAccessValidation {\n  /**\n   * A defined domain cookie name that the response to the login URL must match to permit user\n   * access to the authenticated URL.\n   */\n  cookieContains?: string;\n  /**\n   * A header name and value that the response to the login URL must match to permit user\n   * access to the authenticated URL.\n   */\n  headerContains?: string;\n  /**\n   * A header name and value that indicates a failed login attempt and prohibits user access\n   * to the authenticated URL.\n   */\n  headerOmits?: string;\n  /**\n   * A parameter that must exist in the login URL's HTML body to allow access to the\n   * authenticated URL.\n   */\n  parameterContains?: string;\n  /**\n   * A string that must appear in the response for the system to allow the user to access the\n   * authenticated URL; for example, \"Successful Login\".\n   */\n  responseContains?: string;\n  /**\n   * An HTTP response code that the server must return to the user to allow access to the\n   * authenticated URL; for example, \"200\".\n   */\n  responseHttpStatus?: string;\n  /**\n   * An HTTP response code that indicates a failed login attempt and prohibits user access to\n   * the authenticated URL.\n   */\n  responseHttpStatusOmits?: string[];\n  /**\n   * A string that indicates a failed login attempt and prohibits user access to the\n   * authenticated URL; for example, \"Authentication failed\".\n   */\n  responseOmits?: string;\n}\n\n/**\n * Authentication Type is method the web server uses to authenticate the login URL's\n * credentials with a web user.\n *\n * - **none**: The web server does not authenticate users trying to access the web\n * application through the login URL. This is the default setting.\n * - **form**: The web application uses a form to collect and authenticate user credentials.\n * If using this option, you also need to type the user name and password parameters written\n * in the code of the HTML form.\n * - **http-basic**: The user name and password are transmitted in Base64 and stored on the\n * server in plain text.\n * - **http-digest**: The web server performs the authentication; user names and passwords\n * are not transmitted over the network, nor are they stored in plain text.\n * - **ntlm**: Microsoft LAN Manager authentication (also called Integrated Windows\n * Authentication) does not transmit credentials in plain text, but requires a continuous\n * TCP connection between the server and client.\n * - **ajax-or-json-request**: The web server uses JSON and AJAX requests to authenticate\n * users trying to access the web application through the login URL. For this option, you\n * also need to type the name of the JSON element containing the user name and password.\n */\nexport enum AuthenticationType {\n  AjaxOrJSONRequest = \"ajax-or-json-request\",\n  Form = \"form\",\n  HTTPBasic = \"http-basic\",\n  HTTPDigest = \"http-digest\",\n  NTLM = \"ntlm\",\n  None = \"none\",\n}\n\n/**\n * URL string used for login page.\n *\n * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n * is protected by Brute Force Protection feature.\n *\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface LoginPageURL {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: PurpleDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: PurpleHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: PurpleMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: PurpleMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: PurplePositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: FluffySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: PurpleURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\nexport interface MethodElement {\n  actAsMethod?: ActAsMethod;\n  name: string;\n}\n\nexport enum ActAsMethod {\n  Get = \"GET\",\n  Post = \"POST\",\n}\n\nexport interface Microservice {\n  description?: string;\n  enforcementMode?: MicroserviceEnforcementMode;\n  evasionOverrides?: EvasionOverride[];\n  hostName: string;\n  hostNameType?: HostNameTypeEnum;\n  httpProtocolOverrides?: HTTPProtocolOverride[];\n  urlName: string;\n  urlType?: HostNameTypeEnum;\n  violationOverrides?: ViolationOverride[];\n  wildcardOrder?: number;\n  wildcardUrlIncludesSlash?: boolean;\n}\n\nexport enum MicroserviceEnforcementMode {\n  Blocking = \"blocking\",\n  PolicyDefault = \"policy-default\",\n  Transparent = \"transparent\",\n}\n\nexport interface EvasionOverride {\n  description?: EvasionDescription;\n  enabled?: boolean;\n  learn?: boolean;\n  maxDecodingPasses?: number;\n}\n\nexport interface HTTPProtocolOverride {\n  description?: HTTPProtocolDescription;\n  enabled?: boolean;\n  learn?: boolean;\n  maxHeaders?: number;\n  maxParams?: number;\n}\n\nexport interface ViolationOverride {\n  alarm?: boolean;\n  block?: boolean;\n  learn?: boolean;\n  name?: string;\n}\n\nexport interface NavigationParameter {\n  name: string;\n  urlName: string;\n}\n\nexport interface OpenAPIFile {\n  link: string;\n}\n\n/**\n * This section defines parameters that the security policy permits in requests.\n */\nexport interface ParameterElement {\n  /**\n   * Determines whether an empty value is allowed for a parameter.\n   */\n  allowEmptyValue?: boolean;\n  /**\n   * Determines whether multiple parameter instances with the same name are allowed in one\n   * request.\n   */\n  allowRepeatedParameterName?: boolean;\n  /**\n   * Specifies type of serialization for array of primitives parameter.\n   * Serialization defines how multiple values are delimited - format that can be transmitted\n   * and reconstructed later:\n   * - **pipe**: pipe-separated values. Array color=[\"blue\",\"black\"] -> color=blue|black.\n   * - **form**: ampersand-separated values. Array color=[\"blue\",\"black\"] ->\n   * color=blue,black.\n   * - **matrix**: semicolon-prefixed values. Array color=[\"blue\",\"black\"] ->\n   * ;color=blue,black.\n   * - **tsv**: tab-separated values. Aarray color=[\"blue\",\"black\"] -> color=blue\\tblack.\n   * - **csv**: comma-separated values. Array color=[\"blue\",\"black\"] -> color=blue,black.\n   * - **label**: dot-prefixed values. Array color=[\"blue\",\"black\"] -> .blue.black.\n   * - **multi**: multiple parameter instances rather than multiple values. Array\n   * color=[\"blue\",\"black\"] -> color=blue&color=black.\n   * - **ssv**: space-separated values. Array color=[\"blue\",\"black\"] -> color=blue black.\n   * - **multipart**: defines array of files.\n   *\n   * **Notes**:\n   * - This attribute is relevant only for parameters with **array** *valueType*.\n   * - **multi** and **form** serializations can be defined for parameter with *query*,\n   * *form-data* or *cookie* locations only.\n   * - **multipart** serialization can be defined for parameter with *form-data* location\n   * only.\n   * - **matrix** and **label** serializations can be defined for parameter with *path*\n   * location only.\n   */\n  arraySerializationFormat?: ArraySerializationFormat;\n  /**\n   * Determines whether items in an array parameter must be unique.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  arrayUniqueItemsCheck?: boolean;\n  /**\n   * Determines whether attack signatures and threat campaigns must be detected in a\n   * parameter's value.\n   * This attribute is relevant only for parameters with **alpha-numeric** or **binary**\n   * *dataType*.\n   */\n  attackSignaturesCheck?: boolean;\n  /**\n   * Determines whether an array parameter has a restricted maximum number of items.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  checkMaxItemsInArray?: boolean;\n  /**\n   * Determines whether the parameter has a restricted maximum value.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMaxValue?: boolean;\n  /**\n   * Determines whether a parameter has a restricted maximum length for value.\n   */\n  checkMaxValueLength?: boolean;\n  /**\n   * Determines whether disallowed metacharacters must be detected in a parameter's name.\n   * This attribute is relevant only for **wildcard** parameters with **alpha-numeric**\n   * *dataType*.\n   */\n  checkMetachars?: boolean;\n  /**\n   * Determines whether an array parameter has a restricted minimum number of items.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  checkMinItemsInArray?: boolean;\n  /**\n   * Determines whether a parameter has a restricted minimum value.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMinValue?: boolean;\n  /**\n   * Determines whether a parameter has a restricted minimum length for value.\n   */\n  checkMinValueLength?: boolean;\n  /**\n   * Determines whether a parameter's value is a multiple of a number defined in *multipleOf*.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMultipleOfValue?: boolean;\n  contentProfile?: StickyContentProfile;\n  /**\n   * Specifies data type of parameter's value:\n   *\n   * - **none**: system data type which is used by policy builder and cannot be set manually.\n   * - **alpha-numeric**: specifies that the value of parameter can be any text consisting of\n   * letters, digits, and the underscore character.\n   * - **binary**: specifies there is no text limit for the value of a parameter (length\n   * checks only).\n   * - **phone**: specifies that the value of a parameter can be text in telephone number\n   * format only.\n   * - **email**: specifies that the value of a parameter must be text in email format only.\n   * - **boolean**: specifies that the value of a parameter must be boolean (only *true* and\n   * *false* values are allowed).\n   * - **integer**: specifies that the value of a parameter must be whole numbers only (no\n   * decimals).\n   * - **decimal**: specifies that the value of a parameter is numbers only and can include\n   * decimals.\n   *\n   * **Notes**:\n   * -  This attribute is relevant for parameters with **array** or **user-input** *valueType*\n   * only.\n   */\n  dataType?: DataType;\n  /**\n   * Determines whether a parameter's value cannot have binary executable content.\n   * This attribute is relevant only for parameters with **binary** *dataType*.\n   */\n  disallowFileUploadOfExecutables?: boolean;\n  /**\n   * Determines whether the parameter value includes the pattern defined in\n   * *regularExpression*.\n   * This attribute is relevant only for parameters with **alpha-numeric** *dataType*.\n   */\n  enableRegularExpression?: boolean;\n  /**\n   * Determines whether the maximum value defined in *maximumValue* attribute is exclusive.\n   * This attribute is relevant only if *checkMaxValue* is set to **true**.\n   */\n  exclusiveMax?: boolean;\n  /**\n   * Determines whether a minimum value defined in *minimumValue* attribute is exclusive.\n   * This attribute is relevant only if *checkMinValue* is set to **true**.\n   */\n  exclusiveMin?: boolean;\n  /**\n   * Specifies whether an array or object parameters should have separate values for each\n   * array item or object property.\n   * This attribute is relevant only if *objectSerializationStyle* is defined.\n   *\n   * **Notes**:\n   * -  This attribute is not relevant for parameters with **deep-object**,\n   * **space-delimited** or **pipe-delimited** *objectSerializationStyle*.\n   */\n  explodeObjectSerialization?: boolean;\n  /**\n   * Determines whether a parameter's value contains a Base64 encoded string.\n   * If the value is indeed Base64 encoded, the system decodes this value and continues with\n   * its security checks.\n   * This attribute is relevant only for parameters with **alpha-numeric** or **binary**\n   * *dataType*.\n   */\n  isBase64?: boolean;\n  /**\n   * Determines whether a parameter is located in the value of Cookie header.\n   * *parameterLocation* attribute is ignored if **isCookie** is set to *true*.\n   */\n  isCookie?: boolean;\n  /**\n   * Determines whether a parameter is located in headers as one of the headers.\n   * *parameterLocation* attribute is ignored if **isHeader** is set to *true*.\n   */\n  isHeader?: boolean;\n  /**\n   * Specifies whether the parameter is associated with a URL, a flow, or neither.\n   */\n  level?: Level;\n  /**\n   * Determines whether a parameter must exist in the request.\n   */\n  mandatory?: boolean;\n  /**\n   * Determines the restriction for the maximum length of parameter's value.\n   * This attribute is relevant only if *checkMaxValueLength* is set to **true**.\n   */\n  maximumLength?: number;\n  /**\n   * Determines the restriction for the maximum value of parameter.\n   * This attribute is relevant only if *checkMaxValue* is set to **true**.\n   */\n  maximumValue?: number;\n  /**\n   * Determines the restriction forthe  maximum number of items in an array parameter.\n   * This attribute is relevant only if *checkMaxItemsInArray* is set to **true**.\n   */\n  maxItemsInArray?: number;\n  /**\n   * Determines whether disallowed metacharacters must be detected in a parameter's value.\n   * This attribute is relevant only for parameters with **alpha-numeric** *dataType*.\n   */\n  metacharsOnParameterValueCheck?: boolean;\n  /**\n   * Determines the restriction for the minimum length of parameter's value.\n   * This attribute is relevant only if *checkMinValueLength* is set to **true**.\n   */\n  minimumLength?: number;\n  /**\n   * Determines the restriction for the minimum value of a parameter.\n   * This attribute is relevant only if *checkMinValue* is set to **true**.\n   */\n  minimumValue?: number;\n  /**\n   * Determines the restriction for the minimum number of items in an array parameter.\n   * This attribute is relevant only if *checkMinItemsInArray* is set to **true**.\n   */\n  minItemsInArray?: number;\n  /**\n   * Determines the number by which a parameter's value is divisible without remainder.\n   * This number must be positive and it may be a floating-point number.\n   * This attribute is relevant only if *checkMultipleOfValue* is set to **true**.\n   */\n  multipleOf?: number;\n  /**\n   * Specifies the name of a parameter which must be permitted in requests.\n   * Format of parameter name attribute differs depending on *type* attribute:\n   * - **explicit** *type*: name of permitted parameter in request should literally match.\n   * - **wildcard** *type*: name of permitted parameter in request should match wildcard\n   * expression.\n   *\n   * The syntax for wildcard entities is based on shell-style wildcard characters.\n   * The list below describes the wildcard characters that you can use so that the entity name\n   * can match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Notes**:\n   * - Wildcards do not match regular expressions. Do not use a regular expression as a\n   * wildcard.\n   * - Empty parameter name is allowed for **explicit** *type*\n   */\n  name: string;\n  /**\n   * Determines metacharacters whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that has these metacharacters in the name.\n   * This attribute is relevant only if *checkMetachars* is set to **true**.\n   */\n  nameMetacharOverrides?: FluffyNameMetacharOverride[];\n  /**\n   * Specifies the type of serialization for an object or complex array parameter.\n   * Serialization defines how multiple values are delimited - format that can be transmitted\n   * and reconstructed later:\n   * - **pipe-delimited**: pipe-separated values. Object color={\"R\":100,\"G\":200} ->\n   * color=R|100|G|200.\n   * - **form**: ampersand-separated values. Object color={\"R\":100,\"G\":200} ->\n   * color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> R=100&G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **space-delimited**: space-separated values. Object color={\"R\":100,\"G\":200} -> color=R\n   * 100 G 200.\n   * - **deep-object**: rendering nested objects. Object color={\"R\":100,\"G\":200} ->\n   * color[R]=100&color[G]=200.\n   * - **matrix**: semicolon-prefixed values. Object color={\"R\":100,\"G\":200} ->\n   * ;color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> ;R=100;G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **simple**: comma-separated values. Object color={\"R\":100,\"G\":200} -> R,100,G,200 if\n   * *explodeObjectSerialization* set to **false** or -> R=100,G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **label**: dot-prefixed values. Object color={\"R\":100,\"G\":200} -> .R.100.G.200 if\n   * *explodeObjectSerialization* set to **false** or -> .R=100.G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   *\n   * **Notes**:\n   * - This attribute is relevant only for parameters with **object** or **openapi-array**\n   * *valueType*.\n   * - **form** serialization can be defined for a parameter with *query*, *form-data* or\n   * *cookie* locations only.\n   * - **matrix** and **label** serializations can be defined for an array parameter with\n   * *path* location only.\n   * - **simple** serializations can be defined for a parameter with *path* and *header*\n   * locations only.\n   * - **deep-object** serialization can be defined for a parameter with *query* or\n   * *form-data* locations only.\n   */\n  objectSerializationStyle?: ObjectSerializationStyle;\n  /**\n   * Determines the set of possible parameter's values.\n   * This attribute is not relevant for parameters with **phone**, **email** or **binary**\n   * *dataType*.\n   */\n  parameterEnumValues?: string[];\n  /**\n   * Specifies location of parameter in request:\n   *\n   * - **any**: in query string, in POST data (body) or in URL path.\n   * - **query**: in query string.\n   * - **form-data**: in POST data (body).\n   * - **cookie**: in value of Cookie header.\n   * - **path**: in URL path.\n   * - **header**: in request headers.\n   *\n   * **Notes**:\n   * - **path** location can be defined for parameter with **global** *level* only.\n   * - **path**, **header** and **cookie** location can be defined for parameter with\n   * **explicit** *type* only.\n   * - **header** and **cookie** location cannot be defined for parameter with empty *name*.\n   */\n  parameterLocation?: ParameterLocation;\n  /**\n   * Determines the staging state of a parameter.\n   * If you place an entity in staging, the system does not block requests for this entity.\n   *\n   * Tip: Use staging on wildcard entities to build the security policy without explicit\n   * entities of this type, rather than configuring the wildcard entity itself to be enforced\n   * with the settings found on it.\n   */\n  performStaging?: boolean;\n  /**\n   * Determines a positive regular expression (PCRE) for a parameter's value.\n   * This attribute is relevant only if *enableRegularExpression* is set to **true**.\n   *\n   * **Notes**:\n   * - The length of a regular expression is limited to 254 characters.\n   */\n  regularExpression?: string;\n  /**\n   * Determines whether a parameter is sensitive and must be not visible in logs nor in the\n   * user interface.\n   * Instead of actual valu,e a string of asterisks is shown for this parameter.\n   * Use it to protect sensitive user input, such as a password or a credit card number, in a\n   * validated request.\n   */\n  sensitiveParameter?: boolean;\n  /**\n   * Determines attack signatures whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that matches these attack signatures.\n   * This attribute is relevant only if *signatureOverrides* is set to **true**.\n   */\n  signatureOverrides?: TentacledSignatureOverride[];\n  /**\n   * Determines the set of possible parameter's values.\n   * This attribute is relevant for parameters with **static-content** *valueType* only.\n   */\n  staticValues?: string[];\n  /**\n   * Specifies the type of the *name* attribute.\n   */\n  type?: HostNameTypeEnum;\n  url?: FluffyURL;\n  /**\n   * Determines metacharacters whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that has these metacharacters in value.\n   * This attribute is relevant only if *metacharsOnParameterValueCheck* is set to **true**.\n   */\n  valueMetacharOverrides?: FluffyValueMetacharOverride[];\n  /**\n   * Specifies type of parameter's value:\n   *\n   * - **object**: the parameter's value is complex object defined by JSON schema.\n   * - **dynamic-content**: the parameter's content changes dynamically.\n   * - **openapi-array**: the parameter's value is complex array defined by JSON schema.\n   * - **ignore**: the system does not perform validity checks on the value of the parameter.\n   * - **static-content**: the parameter has a static, or pre-defined, value(s).\n   * - **json**: the parameter's value is JSON data.\n   * - **array**: the parameter's value is array of primitives.\n   * - **user-input**: the parameter's value is provided by user-input.\n   * - **xml**: the parameter's value is XML data.\n   * - **auto-detect**: the parameter's value can be user-inpur, XML data or JSON data. The\n   * system automatically classifies the type of value.\n   * - **dynamic-parameter-name**: the parameter's name changes dynamically.\n   *\n   * **Notes**:\n   * - **dynamic-parameter-name** value type can be defined for a parameter with **flow**\n   * *level* and **explicit** *type* only.\n   * - **dynamic-content** value type can be defined for a parameter with **explicit** *type*\n   * only.\n   */\n  valueType?: ValueType;\n  /**\n   * Specifies the order in which wildcard entities are organized.\n   * Matching of an enforced parameter with a defined wildcard parameter happens based on\n   * order from smaller to larger.\n   */\n  wildcardOrder?: number;\n}\n\nexport interface StickyContentProfile {\n  contentProfile?: IndigoContentProfile;\n}\n\nexport interface IndigoContentProfile {\n  name?: string;\n}\n\nexport interface FluffyNameMetacharOverride {\n  /**\n   * Specifies permission of *metachar* - when *false*, then character is prohibited.\n   */\n  isAllowed?: boolean;\n  /**\n   * Specifies character in hexadecimal format with special allowance.\n   */\n  metachar: string;\n}\n\nexport interface TentacledSignatureOverride {\n  /**\n   * Specifies, when true, that the overridden signature is enforced\n   */\n  enabled?: boolean;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n  /**\n   * The signature ID which identifies the signature.\n   */\n  signatureId?: number;\n  /**\n   * The signature tag, which along with the signature name, identifies the signature.\n   */\n  tag?: string;\n}\n\n/**\n * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n * is protected by Brute Force Protection feature.\n *\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface FluffyURL {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: PurpleDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: PurpleHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: PurpleMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: PurpleMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: PurplePositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: FluffySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: PurpleURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\nexport interface FluffyValueMetacharOverride {\n  /**\n   * Specifies permission of *metachar* - when *false*, then character is prohibited.\n   */\n  isAllowed?: boolean;\n  /**\n   * Specifies character in hexadecimal format with special allowance.\n   */\n  metachar: string;\n}\n\nexport interface PlainTextProfile {\n  attackSignaturesCheck?: boolean;\n  defenseAttributes?: PlainTextProfileDefenseAttributes;\n  description?: string;\n  metacharElementCheck?: boolean;\n  metacharOverrides?: PlainTextProfileMetacharOverride[];\n  name: string;\n  signatureOverrides?: PlainTextProfileSignatureOverride[];\n}\n\nexport interface PlainTextProfileDefenseAttributes {\n  maximumLineLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumTotalLength?: MaximumCookieHeaderLengthEnum | number;\n  performPercentDecoding?: boolean;\n}\n\nexport interface PlainTextProfileMetacharOverride {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface PlainTextProfileSignatureOverride {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport interface PolicyBuilder {\n  autoApply?: AutoApply;\n  enableFullPolicyInspection?: boolean;\n  enableTrustedTrafficSiteChangeTracking?: boolean;\n  enableUntrustedTrafficSiteChangeTracking?: boolean;\n  fullyAutomatic?: boolean;\n  inactiveEntityInactivityDurationInDays?: number;\n  learnFromResponses?: boolean;\n  learnInactiveEntities?: boolean;\n  learningMode?: LearningMode;\n  learnOnlyFromNonBotTraffic?: boolean;\n  responseStatusCodes?: string[];\n  trafficTighten?: TrafficTighten;\n  trustAllIps?: boolean;\n  trustedTrafficLoosen?: TrustedTrafficLoosen;\n  trustedTrafficSiteChangeTracking?: TrustedTrafficSiteChangeTracking;\n  untrustedTrafficLoosen?: UntrustedTrafficLoosen;\n  untrustedTrafficSiteChangeTracking?: UntrustedTrafficSiteChangeTracking;\n}\n\nexport interface AutoApply {\n  applyAtAllTimes?: boolean;\n  applyOnAllDays?: boolean;\n  applyOnFridays?: boolean;\n  applyOnMondays?: boolean;\n  applyOnSaturdays?: boolean;\n  applyOnSundays?: boolean;\n  applyOnThursdays?: boolean;\n  applyOnTuesdays?: boolean;\n  applyOnWednesdays?: boolean;\n  endTime?: string;\n  frequency?: Frequency;\n  startTime?: string;\n}\n\nexport enum Frequency {\n  Never = \"never\",\n  RealTime = \"real-time\",\n  Scheduled = \"scheduled\",\n}\n\nexport enum LearningMode {\n  Automatic = \"automatic\",\n  Disabled = \"disabled\",\n  Manual = \"manual\",\n}\n\nexport interface TrafficTighten {\n  maxModificationSuggestionScore?: number;\n  minDaysBetweenSamples?: number;\n  totalRequests?: number;\n}\n\nexport interface TrustedTrafficLoosen {\n  differentSources?: number;\n  maxDaysBetweenSamples?: number;\n  minHoursBetweenSamples?: number;\n}\n\nexport interface TrustedTrafficSiteChangeTracking {\n  differentSources?: number;\n  maxDaysBetweenSamples?: number;\n  minMinutesBetweenSamples?: number;\n}\n\nexport interface UntrustedTrafficLoosen {\n  differentSources?: number;\n  maxDaysBetweenSamples?: number;\n  minHoursBetweenSamples?: number;\n}\n\nexport interface UntrustedTrafficSiteChangeTracking {\n  differentSources?: number;\n  maxDaysBetweenSamples?: number;\n  minMinutesBetweenSamples?: number;\n}\n\n/**\n * Defines Policy Builder learning location and related configuration.\n */\nexport interface PolicyBuilderCentralConfiguration {\n  /**\n   * Specifies learning location.\n   *\n   * - **central**: Security policy learning is done centrally and managed via a BIG-IQ\n   * system. Centralized learning can be enabled from BIG-IQ only and, when enabled, all\n   * interim local policy learning will be lost. When learning is centralized, you cannot make\n   * local changes on your BIG-IP that will affect the security policy learning.\n   * - **local**: Security policy learning is done locally and managed on BIG-IP\n   */\n  buildingMode?: Mode;\n  /**\n   * Specifies list of BIG-IQ machines that local Policy Builder is sending data to.\n   */\n  centralPbAddresses?: CentralPbAddress[];\n  /**\n   * Specifies event correlation location.\n   *\n   * - **central**: Event correlation is done centrally and stored in a BIG-IQ system.\n   * - **local**: Event correlation is done locally and stored on BIG-IP.\n   */\n  eventCorrelationMode?: Mode;\n}\n\n/**\n * Specifies learning location.\n *\n * - **central**: Security policy learning is done centrally and managed via a BIG-IQ\n * system. Centralized learning can be enabled from BIG-IQ only and, when enabled, all\n * interim local policy learning will be lost. When learning is centralized, you cannot make\n * local changes on your BIG-IP that will affect the security policy learning.\n * - **local**: Security policy learning is done locally and managed on BIG-IP\n *\n * Specifies event correlation location.\n *\n * - **central**: Event correlation is done centrally and stored in a BIG-IQ system.\n * - **local**: Event correlation is done locally and stored on BIG-IP.\n */\nexport enum Mode {\n  Central = \"central\",\n  Local = \"local\",\n}\n\nexport interface CentralPbAddress {\n  /**\n   * Host name of BIG-IQ machine.\n   */\n  hostName?: string;\n  /**\n   * IP address of BIG-IQ machine.\n   */\n  ipAddress: string;\n  /**\n   * Order or BIG-IQ machine in the list.\n   */\n  order?: number;\n  /**\n   * Port that BIG-IQ machine is listening to.\n   */\n  port: number;\n  /**\n   * If enabled - certificate should be verified when connecting to BIG-IQ machine\n   */\n  verifyCertificate?: boolean;\n}\n\nexport interface PolicyBuilderCookie {\n  collapseCookieOccurrences?: number;\n  collapseCookiesIntoOneEntity?: boolean;\n  enforceUnmodifiedCookies?: boolean;\n  learnExplicitCookies?: LearnExplicitCookies;\n  maximumCookies?: number;\n}\n\nexport enum LearnExplicitCookies {\n  Never = \"never\",\n  Selective = \"selective\",\n}\n\n/**\n * Defines Policy Builder behavior for filetypes\n */\nexport interface PolicyBuilderFiletype {\n  /**\n   * Specifies under which circumstances the Policy Builder adds, or suggests you add,\n   * explicit file types to the security policy:\n   *\n   * - **compact**: Specifies that the system will create a list of the most commonly used\n   * file types (while enforcing all other file types with a wildcard rule), together with a\n   * pre-populated list of known disallowed file types. This option serves as a good balance\n   * between **selective** and **always**\n   * - **selective**: Specifies that when false positives occur (applicable only for the *\n   * wildcard), the system will add/suggest to add an explicit file type with relaxed settings\n   * that avoid the false positive. This option serves as a good balance between security,\n   * policy size, and ease of maintenance\n   * - **always**: Specifies you would like to create a comprehensive whitelist policy that\n   * includes ALL of the website file types. This option will form a large set of security\n   * policy entities, which will produce a granular object-level configuration and high\n   * security level, it may take more time to maintain such a policy\n   * - **never**: Specifies that when false positives occur the system will suggest to relax\n   * the settings of the wildcard file type\n   */\n  learnExplicitFiletypes?: LearnExplicit;\n  /**\n   * Specifies approximately the largest number of file types that Policy Builder will learn\n   */\n  maximumFileTypes?: number;\n}\n\n/**\n * Specifies under which circumstances the Policy Builder adds, or suggests you add,\n * explicit file types to the security policy:\n *\n * - **compact**: Specifies that the system will create a list of the most commonly used\n * file types (while enforcing all other file types with a wildcard rule), together with a\n * pre-populated list of known disallowed file types. This option serves as a good balance\n * between **selective** and **always**\n * - **selective**: Specifies that when false positives occur (applicable only for the *\n * wildcard), the system will add/suggest to add an explicit file type with relaxed settings\n * that avoid the false positive. This option serves as a good balance between security,\n * policy size, and ease of maintenance\n * - **always**: Specifies you would like to create a comprehensive whitelist policy that\n * includes ALL of the website file types. This option will form a large set of security\n * policy entities, which will produce a granular object-level configuration and high\n * security level, it may take more time to maintain such a policy\n * - **never**: Specifies that when false positives occur the system will suggest to relax\n * the settings of the wildcard file type\n *\n * Specifies under which circumstances the Policy Builder adds, or suggests you add,\n * explicit parameters to the security policy:\n *\n * - **compact**: Specifies that the system will create a list of the most commonly used\n * parameters, while enforcing all other parameters with a wildcard rule. This option serves\n * as a good balance between **selective** and **always**\n * - **selective**: Specifies that when false positives occur (applicable only for the *\n * wildcard), the system will add/suggest to add an explicit parameter with relaxed settings\n * that avoid the false positive. This option serves as a good balance between security,\n * policy size, and ease of maintenance\n * - **always**: Specifies you would like to create a comprehensive whitelist policy that\n * includes ALL of the website parameters. This option will form a large set of security\n * policy entities, which will produce a granular object-level configuration and high\n * security level, it may take more time to maintain such a policy\n * - **never**: Specifies that when false positives occur the system will suggest to relax\n * the settings of the wildcard parameter\n */\nexport enum LearnExplicit {\n  Always = \"always\",\n  Compact = \"compact\",\n  Never = \"never\",\n  Selective = \"selective\",\n}\n\nexport interface PolicyBuilderHeader {\n  maximumHosts?: number;\n  validHostNames?: boolean;\n}\n\n/**\n * Defines Policy Builder behavior for parameters\n */\nexport interface PolicyBuilderParameter {\n  /**\n   * When enabled, if the Policy Builder detects legitimate XML or JSON data to parameters\n   * configured in the security policy, the Policy Builder adds XML or JSON profiles to the\n   * security policy and configures their attributes according to the data it detects\n   */\n  classifyParameters?: boolean;\n  /**\n   * Defines how many common explicit parameters the Policy Builder must detect (the number of\n   * occurrences) before collapsing them to one wildcard parameter.\n   * The minimum number of occurrences allowed is 2.\n   */\n  collapseParameterOccurrences?: number;\n  /**\n   * When enabled, the system collapses many common parameters into one wildcard parameter.\n   */\n  collapseParametersIntoOneEntity?: boolean;\n  /**\n   * Defines the conditions under which the Policy Builder adds dynamic parameters to the\n   * security policy\n   * To enabled this functionality there are several prerequisites:\n   * - learnExplicitParameters is **always** or **selective**\n   * - learnExplicitUrls in policy-builder-url and/or learnExplicitFiletypes in\n   * policy-builder-filetype is **always** or **selective**\n   * - learnFromResponses is enabled in policy-builder\n   * - at least one of the allHiddenFields/formParameters/linkParameters is enabled\n   */\n  dynamicParameters?: DynamicParameters;\n  /**\n   * Specifies under which circumstances the Policy Builder adds, or suggests you add,\n   * explicit parameters to the security policy:\n   *\n   * - **compact**: Specifies that the system will create a list of the most commonly used\n   * parameters, while enforcing all other parameters with a wildcard rule. This option serves\n   * as a good balance between **selective** and **always**\n   * - **selective**: Specifies that when false positives occur (applicable only for the *\n   * wildcard), the system will add/suggest to add an explicit parameter with relaxed settings\n   * that avoid the false positive. This option serves as a good balance between security,\n   * policy size, and ease of maintenance\n   * - **always**: Specifies you would like to create a comprehensive whitelist policy that\n   * includes ALL of the website parameters. This option will form a large set of security\n   * policy entities, which will produce a granular object-level configuration and high\n   * security level, it may take more time to maintain such a policy\n   * - **never**: Specifies that when false positives occur the system will suggest to relax\n   * the settings of the wildcard parameter\n   */\n  learnExplicitParameters?: LearnExplicit;\n  /**\n   * Specifies approximately the largest number of parameters that Policy Builder will learn\n   */\n  maximumParameters?: number;\n  /**\n   * Defines how the Policy Builder determines on which level to add, or suggest you add,\n   * parameters to the security policy\n   *\n   * - **global**: The system creates learning suggestions based on the properties of entities\n   * that already exist in the security policy.\n   * When manually learning a suggestion for a parameter violation, the resolve action\n   * suggested by the system is based on the parameter name and level of the parameter in the\n   * security policy that caused this violation.\n   * When automatically building the security policy, the Policy Builder adds parameters on\n   * the Global level.\n   * - **url**: The system creates learning suggestions based on real traffic, and is not\n   * limited to the current properties of entities that exist in the security\n   * policy.\n   * When manually learning a suggestion for a parameter violation, the resolve action\n   * suggested by the system is based on the actual parameter name and the URL or flow on\n   * which the violation was detected.\n   * When automatically building the security policy, the Policy Builder adds parameters on\n   * the URL level.\n   * In addition, if the actual URL does not exist in the security policy, the system adds the\n   * URL and file type (if it also does not exist) on which the violation was detected.\n   */\n  parameterLearningLevel?: ParameterLearningLevel;\n  /**\n   * When enabled, the Policy Builder learns integer parameters (parameters with a Data Type\n   * of Integer).\n   */\n  parametersIntegerValue?: boolean;\n}\n\n/**\n * Defines the conditions under which the Policy Builder adds dynamic parameters to the\n * security policy\n * To enabled this functionality there are several prerequisites:\n * - learnExplicitParameters is **always** or **selective**\n * - learnExplicitUrls in policy-builder-url and/or learnExplicitFiletypes in\n * policy-builder-filetype is **always** or **selective**\n * - learnFromResponses is enabled in policy-builder\n * - at least one of the allHiddenFields/formParameters/linkParameters is enabled\n */\nexport interface DynamicParameters {\n  /**\n   * When enabled, the Policy Builder adds to the security policy all HIDDEN form input\n   * parameters, seen in responses, as dynamic content value parameters\n   */\n  allHiddenFields?: boolean;\n  /**\n   * When enabled, the Policy Builder adds parameters, found in forms, to the security policy\n   * as dynamic content value if a number of unique value sets are seen in responses for that\n   * parameter.\n   * Use uniqueValueSets to specify how many different value sets must be seen for that\n   * parameter in order for the Policy Builder to consider it dynamic content value.\n   * A value set is an aggregation of server-supplied value(s) of the parameter as seen in the\n   * web form, for example, all the values of a radio button or select boxes taken together\n   * are a value set.\n   */\n  formParameters?: boolean;\n  /**\n   * When enabled, the Policy Builder adds parameters, found in links, to the security policy\n   * as dynamic content value if a number of unique values are seen in responses for that\n   * parameter.\n   * Use the uniqueValueSets to specify how many different values must be seen for that\n   * parameter in order for the Policy Builder to consider it dynamic content value.\n   */\n  linkParameters?: boolean;\n  /**\n   * Specifies how many different values must be seen for that parameter in order for the\n   * Policy Builder to consider it dynamic content value\n   */\n  uniqueValueSets?: number;\n}\n\n/**\n * Defines how the Policy Builder determines on which level to add, or suggest you add,\n * parameters to the security policy\n *\n * - **global**: The system creates learning suggestions based on the properties of entities\n * that already exist in the security policy.\n * When manually learning a suggestion for a parameter violation, the resolve action\n * suggested by the system is based on the parameter name and level of the parameter in the\n * security policy that caused this violation.\n * When automatically building the security policy, the Policy Builder adds parameters on\n * the Global level.\n * - **url**: The system creates learning suggestions based on real traffic, and is not\n * limited to the current properties of entities that exist in the security\n * policy.\n * When manually learning a suggestion for a parameter violation, the resolve action\n * suggested by the system is based on the actual parameter name and the URL or flow on\n * which the violation was detected.\n * When automatically building the security policy, the Policy Builder adds parameters on\n * the URL level.\n * In addition, if the actual URL does not exist in the security policy, the system adds the\n * URL and file type (if it also does not exist) on which the violation was detected.\n */\nexport enum ParameterLearningLevel {\n  Global = \"global\",\n  URL = \"url\",\n}\n\nexport interface PolicyBuilderRedirectionProtection {\n  learnExplicitRedirectionDomains?: LearnExplicitRedirectionDomains;\n  maximumRedirectionDomains?: number;\n}\n\nexport enum LearnExplicitRedirectionDomains {\n  Always = \"always\",\n  Never = \"never\",\n}\n\n/**\n * Defines Policy Builder behavior for Server Technologies\n */\nexport interface PolicyBuilderServerTechnologies {\n  /**\n   * When enabled, the Policy Builder suggests to add Server Technologies that have not yet\n   * been added to the policy.\n   * The system learns server technologies from responses regardless of the learnFromResponses\n   * flag setting in the policy-builder endpoint.\n   */\n  enableServerTechnologiesDetection?: boolean;\n}\n\nexport interface PolicyBuilderSessionsAndLogins {\n  learnLoginPage?: boolean;\n}\n\nexport interface PolicyBuilderURL {\n  classifyUrls?: boolean;\n  classifyWebsocketUrls?: boolean;\n  collapseUrlDepth?: number;\n  collapseUrlOccurrences?: number;\n  collapseUrlsIntoOneEntity?: boolean;\n  learnExplicitUrls?: LearnExplicit;\n  learnExplicitWebsocketUrls?: LearnExplicitWebsocketUrls;\n  learnMethodsOnUrls?: boolean;\n  maximumUrls?: number;\n  maximumWebsocketUrls?: number;\n  wildcardUrlFiletypes?: string[];\n}\n\nexport enum LearnExplicitWebsocketUrls {\n  Always = \"always\",\n  Never = \"never\",\n  Selective = \"selective\",\n}\n\nexport interface RedirectionProtection {\n  redirectionDomains?: RedirectionDomain[];\n  redirectionProtectionEnabled?: boolean;\n}\n\nexport interface RedirectionDomain {\n  domainName: string;\n  includeSubdomains?: boolean;\n  type?: HostNameTypeEnum;\n  wildcardOrder?: number;\n}\n\nexport interface RedirectionProtectionDomain {\n  domainName: string;\n  includeSubdomains?: boolean;\n  type?: HostNameTypeEnum;\n  wildcardOrder?: number;\n}\n\nexport interface RequestLogger {\n  destination?: string;\n  filter?: FilterElement[];\n  formatString?: string;\n  formatType?: FormatType;\n  maxMessageSize?: number;\n  name: string;\n}\n\nexport interface FilterElement {\n  field: Field;\n  values?: string;\n}\n\nexport enum Field {\n  RequestStatus = \"request_status\",\n}\n\nexport enum FormatType {\n  Arcsight = \"arcsight\",\n  Bigiq = \"bigiq\",\n  Default = \"default\",\n  Splunk = \"splunk\",\n}\n\n/**\n * The Application Security Manager has a default blocking response page that it returns to\n * the client when the client request, or the web server response, is blocked by the\n * security policy. The system also has a login response page for login violations. You can\n * change the way the system responds to blocked logins or blocked requests. All default\n * response pages contain a variable, <%TS.request.ID()%>, that the system replaces with a\n * support ID number when it issues the page.\n */\nexport interface ResponsePage {\n  /**\n   * Which content, or URL, the system sends to the client as a response to an AJAX request\n   * that does not comply with the security policy.\n   * - **alert-popup**: The system opens a message as a popup screen. Type the message the\n   * system displays in the popup screen, or leave the default text.\n   * - **custom**: A response text that will replace the frame or page which generated the\n   * AJAX request. The system provides additional options where you can type the response body\n   * you prefer.\n   * - **redirect**: The system redirects the user to a specific web page instead of viewing a\n   * response page. Type the web page's full URL path, for example,\n   * http://www.redirectpage.com.\n   */\n  ajaxActionType?: AjaxActionType;\n  /**\n   * Custom message typed by user as a response for blocked AJAX request.\n   */\n  ajaxCustomContent?: string;\n  /**\n   * When enabled, the system injects JavaScript code into responses. You must enable this\n   * toggle in order to configure an Application Security Manager AJAX response page which is\n   * returned when the system detects an AJAX request that does not comply with the security\n   * policy.\n   */\n  ajaxEnabled?: boolean;\n  /**\n   * Default message provided by the system as a response for blocked AJAX request. Can be\n   * manipulated by user, but <%TS.request.ID()%> must be included in this message.\n   */\n  ajaxPopupMessage?: string;\n  /**\n   * The system redirects the user to a specific web page instead of viewing a response page.\n   * Type the web page's full URL path, for example, http://www.redirectpage.com. To redirect\n   * the blocking page to a URL with a support ID in the query string, type the URL and the\n   * support ID in the following format:\n   * http://www.example.com/blocking_page.php?support_id=<%TS.request.ID()%>. The system\n   * replaces <%TS.request.ID%> with the relevant support ID so that the blocked request is\n   * redirected to the URL with the relevant support ID.\n   */\n  ajaxRedirectUrl?: string;\n  /**\n   * Which action the system takes, and which content the system sends to the client, as a\n   * response when the security policy blocks the client request.\n   * - **custom**: The system returns a response page with HTML code that the user defines.\n   * - **default**: The system returns the system-supplied response page in HTML. No further\n   * configuration is needed.\n   * - **erase-cookies**:  The system deletes all client side domain cookies. This is done in\n   * order to block web application users once, and not from the entire web application. The\n   * system displays this text in the response page. You cannot edit this text.\n   * - **redirect**: The system redirects the user to a specific web page instead of viewing a\n   * response page. The system provides an additional setting where you can indicate the\n   * redirect web page.\n   * - **soap-fault**:  Displays the system-supplied response written in SOAP fault message\n   * structure. Use this type when a SOAP request is blocked due to an XML related violation.\n   * You cannot edit this text.\n   */\n  responseActionType?: ResponseActionType;\n  /**\n   * The content the system sends to the client in response to an illegal blocked request.\n   */\n  responseContent?: string;\n  /**\n   * The response headers that the system sends to the client as a response to an illegal\n   * blocked request.\n   */\n  responseHeader?: string;\n  /**\n   * The different types of blocking response pages which are available from the system:\n   * - **ajax**: The system sends the AJAX Blocking Response Page when the security policy\n   * blocks an AJAX request that does not comply with the security policy.\n   * - **ajax-login**: The system sends the AJAX Login Page Response after the user sends an\n   * AJAX request that attempts to directly access a URL that is allowed to be accessed only\n   * after visiting a login page.\n   * - **captcha**: The system sends the CAPTCHA response page when the system suspects that a\n   * session is being run by a bot rather than a human, especially in the case of a brute\n   * force attack.\n   * - **captcha-fail**: The system sends the CAPTCHA fail response page to a failed CAPTCHA\n   * challenge.\n   * - **default**: The system sends the default response when the security policy blocks a\n   * client request.\n   * - **failed-login-honeypot**: The Honeypot page is used for attacker deception. The page\n   * should look like an application failed login page. Unlike with the Blocking page, when\n   * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n   * from a mitigation.\n   * - **failed-login-honeypot-ajax**: The Honeypot page is used for attacker deception\n   * sending AJAX request. The page should look like an application failed login page. Unlike\n   * with the Blocking page, when the Honeypot page is sent an attacker is not able to\n   * distinguish a failed login response from a mitigation.\n   * - **hijack**: The system sends the cookie hijacking response page when the system detects\n   * that an attacker tried to hijack the session.\n   * - **leaked-credentials**: The system sends the leaked credentials response when the\n   * system detects the use of stolen credentials.\n   * - **leaked-credentials-ajax**: The system sends the leaked credentials response following\n   * an AJAX request which includes usage of stolen credentials.\n   * - **mobile**: The system sends the mobile application response page when the system\n   * detects that a session is being run by a bot rather than a human.\n   * - **persistent-flow**: The system sends the login page response after the user violates\n   * one of the preconditions when requesting the target URL of a configured login page.\n   * - **xml**: The system sends the XML response page when the security policy blocks a\n   * client request that contains XML content that does not comply with the settings of an XML\n   * profile configured in the security policy.\n   */\n  responsePageType: ResponsePageType;\n  /**\n   * The particular URL to which the system redirects the user. To redirect the blocking page\n   * to a URL with a support ID in the query string, type the URL and the support ID in the\n   * following format:\n   * http://www.example.com/blocking_page.php?support_id=<%TS.request.ID()%>. The system\n   * replaces <%TS.request.ID%> with the relevant support ID so that the blocked request is\n   * redirected to the URL with the relevant support ID.\n   */\n  responseRedirectUrl?: string;\n}\n\n/**\n * Which content, or URL, the system sends to the client as a response to an AJAX request\n * that does not comply with the security policy.\n * - **alert-popup**: The system opens a message as a popup screen. Type the message the\n * system displays in the popup screen, or leave the default text.\n * - **custom**: A response text that will replace the frame or page which generated the\n * AJAX request. The system provides additional options where you can type the response body\n * you prefer.\n * - **redirect**: The system redirects the user to a specific web page instead of viewing a\n * response page. Type the web page's full URL path, for example,\n * http://www.redirectpage.com.\n */\nexport enum AjaxActionType {\n  AlertPopup = \"alert-popup\",\n  Custom = \"custom\",\n  Redirect = \"redirect\",\n}\n\n/**\n * Which action the system takes, and which content the system sends to the client, as a\n * response when the security policy blocks the client request.\n * - **custom**: The system returns a response page with HTML code that the user defines.\n * - **default**: The system returns the system-supplied response page in HTML. No further\n * configuration is needed.\n * - **erase-cookies**:  The system deletes all client side domain cookies. This is done in\n * order to block web application users once, and not from the entire web application. The\n * system displays this text in the response page. You cannot edit this text.\n * - **redirect**: The system redirects the user to a specific web page instead of viewing a\n * response page. The system provides an additional setting where you can indicate the\n * redirect web page.\n * - **soap-fault**:  Displays the system-supplied response written in SOAP fault message\n * structure. Use this type when a SOAP request is blocked due to an XML related violation.\n * You cannot edit this text.\n */\nexport enum ResponseActionType {\n  Custom = \"custom\",\n  Default = \"default\",\n  EraseCookies = \"erase-cookies\",\n  Redirect = \"redirect\",\n  SoapFault = \"soap-fault\",\n}\n\n/**\n * The different types of blocking response pages which are available from the system:\n * - **ajax**: The system sends the AJAX Blocking Response Page when the security policy\n * blocks an AJAX request that does not comply with the security policy.\n * - **ajax-login**: The system sends the AJAX Login Page Response after the user sends an\n * AJAX request that attempts to directly access a URL that is allowed to be accessed only\n * after visiting a login page.\n * - **captcha**: The system sends the CAPTCHA response page when the system suspects that a\n * session is being run by a bot rather than a human, especially in the case of a brute\n * force attack.\n * - **captcha-fail**: The system sends the CAPTCHA fail response page to a failed CAPTCHA\n * challenge.\n * - **default**: The system sends the default response when the security policy blocks a\n * client request.\n * - **failed-login-honeypot**: The Honeypot page is used for attacker deception. The page\n * should look like an application failed login page. Unlike with the Blocking page, when\n * the Honeypot page is sent an attacker is not able to distinguish a failed login response\n * from a mitigation.\n * - **failed-login-honeypot-ajax**: The Honeypot page is used for attacker deception\n * sending AJAX request. The page should look like an application failed login page. Unlike\n * with the Blocking page, when the Honeypot page is sent an attacker is not able to\n * distinguish a failed login response from a mitigation.\n * - **hijack**: The system sends the cookie hijacking response page when the system detects\n * that an attacker tried to hijack the session.\n * - **leaked-credentials**: The system sends the leaked credentials response when the\n * system detects the use of stolen credentials.\n * - **leaked-credentials-ajax**: The system sends the leaked credentials response following\n * an AJAX request which includes usage of stolen credentials.\n * - **mobile**: The system sends the mobile application response page when the system\n * detects that a session is being run by a bot rather than a human.\n * - **persistent-flow**: The system sends the login page response after the user violates\n * one of the preconditions when requesting the target URL of a configured login page.\n * - **xml**: The system sends the XML response page when the security policy blocks a\n * client request that contains XML content that does not comply with the settings of an XML\n * profile configured in the security policy.\n */\nexport enum ResponsePageType {\n  Ajax = \"ajax\",\n  AjaxLogin = \"ajax-login\",\n  CAPTCHA = \"captcha\",\n  CAPTCHAFail = \"captcha-fail\",\n  Default = \"default\",\n  FailedLoginHoneypot = \"failed-login-honeypot\",\n  FailedLoginHoneypotAjax = \"failed-login-honeypot-ajax\",\n  Hijack = \"hijack\",\n  LeakedCredentials = \"leaked-credentials\",\n  LeakedCredentialsAjax = \"leaked-credentials-ajax\",\n  Mobile = \"mobile\",\n  PersistentFlow = \"persistent-flow\",\n  XML = \"xml\",\n}\n\n/**\n * This section defines sensitive parameters.\n * The contents of these parameters are not visible in logs nor in the user interfaces.\n * Instead of actual values a string of asterisks is shown for these parameters.\n * Use these parameters to protect sensitive user input, such as a password or a credit card\n * number, in a validated request.\n * Sensitive parameter \"password\" always defined by default.\n */\nexport interface SensitiveParameter {\n  /**\n   * Name of a parameter whose values the system should consider sensitive.\n   */\n  name: string;\n}\n\n/**\n * The server technology is a server side application, framework, Web Server or Operating\n * System type that is configured in the policy in order to adapt the policy to the checks\n * needed for the respective technology.\n */\nexport interface ServerTechnology {\n  /**\n   * Specifies the name of the selected policy. For example, PHP will add attack signatures\n   * that cover known PHP vulnerabilities.\n   */\n  serverTechnologyName?: string;\n}\n\nexport interface SessionTracking {\n  blockAll?: BlockAll;\n  delayBlocking?: DelayBlocking;\n  logAllRequests?: LogAllRequests;\n  sessionTrackingConfiguration?: SessionTrackingConfiguration;\n  violationDetectionActions?: ViolationDetectionActions;\n}\n\nexport interface BlockAll {\n  checkDeviceIdThreshold?: boolean;\n  checkIpThreshold?: boolean;\n  checkPeriod?: boolean;\n  checkSessionThreshold?: boolean;\n  checkUsernameThreshold?: boolean;\n  deviceIdThreshold?: number;\n  ipThreshold?: number;\n  period?: number;\n  sessionThreshold?: number;\n  urlBlockingMode?: URLBlockingMode;\n  usernameThreshold?: number;\n}\n\nexport enum URLBlockingMode {\n  BlockAllUrls = \"block-all-urls\",\n  BlockAuthenticatedUrls = \"block-authenticated-urls\",\n}\n\nexport interface DelayBlocking {\n  checkDeviceIdThreshold?: boolean;\n  checkIpThreshold?: boolean;\n  checkSessionThreshold?: boolean;\n  checkUsernameThreshold?: boolean;\n  deviceIdThreshold?: number;\n  ipThreshold?: number;\n  period?: number;\n  sessionThreshold?: number;\n  usernameThreshold?: number;\n  violations?: DelayBlockingViolation[];\n}\n\nexport interface DelayBlockingViolation {\n  name?: string;\n}\n\nexport interface LogAllRequests {\n  checkDeviceIdThreshold?: boolean;\n  checkIpThreshold?: boolean;\n  checkSessionThreshold?: boolean;\n  checkUsernameThreshold?: boolean;\n  deviceIdThreshold?: number;\n  ipThreshold?: number;\n  period?: number;\n  sessionThreshold?: number;\n  usernameThreshold?: number;\n}\n\nexport interface SessionTrackingConfiguration {\n  detectUsernameFromLoginPages?: DetectUsernameFromLoginPage[];\n  enableSessionAwareness?: boolean;\n  enableTrackingSessionHijackingByDeviceId?: boolean;\n  userNameSource?: UserNameSource;\n}\n\nexport interface DetectUsernameFromLoginPage {\n  loginPage: LoginPageObject;\n}\n\n/**\n * A login page is a URL in a web application that requests must pass through to get to the\n * authenticated URLs. Use login pages, for example, to prevent forceful browsing of\n * restricted parts of the web application, by defining access permissions for users. Login\n * pages also allow session tracking of user sessions.\n */\nexport interface LoginPageObject {\n  /**\n   * Access Validation define validation criteria for the login page response. If you define\n   * more than one validation criteria, the response must meet all the criteria before the\n   * system allows the user to access the application login URL.\n   */\n  accessValidation?: LoginPageAccessValidationObject;\n  /**\n   * Authentication Type is method the web server uses to authenticate the login URL's\n   * credentials with a web user.\n   *\n   * - **none**: The web server does not authenticate users trying to access the web\n   * application through the login URL. This is the default setting.\n   * - **form**: The web application uses a form to collect and authenticate user credentials.\n   * If using this option, you also need to type the user name and password parameters written\n   * in the code of the HTML form.\n   * - **http-basic**: The user name and password are transmitted in Base64 and stored on the\n   * server in plain text.\n   * - **http-digest**: The web server performs the authentication; user names and passwords\n   * are not transmitted over the network, nor are they stored in plain text.\n   * - **ntlm**: Microsoft LAN Manager authentication (also called Integrated Windows\n   * Authentication) does not transmit credentials in plain text, but requires a continuous\n   * TCP connection between the server and client.\n   * - **ajax-or-json-request**: The web server uses JSON and AJAX requests to authenticate\n   * users trying to access the web application through the login URL. For this option, you\n   * also need to type the name of the JSON element containing the user name and password.\n   */\n  authenticationType?: AuthenticationType;\n  /**\n   * A name of parameter which will contain password string.\n   */\n  passwordParameterName?: string;\n  /**\n   * URL string used for login page.\n   */\n  url: LoginPageURLObject;\n  /**\n   * A name of parameter which will contain username string.\n   */\n  usernameParameterName?: string;\n}\n\n/**\n * Access Validation define validation criteria for the login page response. If you define\n * more than one validation criteria, the response must meet all the criteria before the\n * system allows the user to access the application login URL.\n */\nexport interface LoginPageAccessValidationObject {\n  /**\n   * A defined domain cookie name that the response to the login URL must match to permit user\n   * access to the authenticated URL.\n   */\n  cookieContains?: string;\n  /**\n   * A header name and value that the response to the login URL must match to permit user\n   * access to the authenticated URL.\n   */\n  headerContains?: string;\n  /**\n   * A header name and value that indicates a failed login attempt and prohibits user access\n   * to the authenticated URL.\n   */\n  headerOmits?: string;\n  /**\n   * A parameter that must exist in the login URL's HTML body to allow access to the\n   * authenticated URL.\n   */\n  parameterContains?: string;\n  /**\n   * A string that must appear in the response for the system to allow the user to access the\n   * authenticated URL; for example, \"Successful Login\".\n   */\n  responseContains?: string;\n  /**\n   * An HTTP response code that the server must return to the user to allow access to the\n   * authenticated URL; for example, \"200\".\n   */\n  responseHttpStatus?: string;\n  /**\n   * An HTTP response code that indicates a failed login attempt and prohibits user access to\n   * the authenticated URL.\n   */\n  responseHttpStatusOmits?: string[];\n  /**\n   * A string that indicates a failed login attempt and prohibits user access to the\n   * authenticated URL; for example, \"Authentication failed\".\n   */\n  responseOmits?: string;\n}\n\n/**\n * URL string used for login page.\n *\n * Reference to the URL used in login URL configuration (policy/login-pages). This login URL\n * is protected by Brute Force Protection feature.\n *\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface LoginPageURLObject {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: PurpleDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: PurpleHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: PurpleMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: PurpleMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: PurplePositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: FluffySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: PurpleURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\nexport enum UserNameSource {\n  AllLoginPages = \"all-login-pages\",\n  Apm = \"apm\",\n  LoginPages = \"login-pages\",\n  None = \"none\",\n}\n\nexport interface ViolationDetectionActions {\n  trackViolationsAndPerformActions?: boolean;\n  violationDetectionPeriod?: number;\n}\n\nexport interface SessionTrackingStatus {\n  action: SessionTrackingStatusAction;\n  createdDatetime?: string;\n  expirationDatetime?: ExpirationDatetime;\n  scope: Scope;\n  value: string;\n}\n\nexport enum SessionTrackingStatusAction {\n  BlockAll = \"block-all\",\n  DelayBlocking = \"delay-blocking\",\n  LogAll = \"log-all\",\n}\n\nexport enum ExpirationDatetime {\n  NA = \"N/A\",\n}\n\nexport enum Scope {\n  Device = \"device\",\n  IP = \"ip\",\n  Session = \"session\",\n  User = \"user\",\n}\n\nexport interface SignatureRequirement {\n  maxRevisionDatetime?: Date;\n  minRevisionDatetime?: Date;\n  tag?: string;\n}\n\n/**\n * Defines behavior of signature set signatures when they are detected in a request.\n */\nexport interface SignatureSet {\n  /**\n   * If enabled - when a signature from this signature set is detected in a request - the\n   * request is logged.\n   */\n  alarm?: boolean;\n  /**\n   * If enabled - when a signature from this signature set is detected in a request (and the\n   * signature is not in staging and the policy is in blocking mode) - the request is blocked.\n   */\n  block?: boolean;\n  /**\n   * If enabled - when a signature from this signature set is detected in a request -the\n   * policy builder creates a learning suggestion to disable it.\n   */\n  learn?: boolean;\n  /**\n   * Signature set name.\n   */\n  name?: string;\n  /**\n   * Defines signature set.\n   */\n  signatureSet?: SignatureSetObject;\n}\n\n/**\n * Defines signature set.\n */\nexport interface SignatureSetObject {\n  /**\n   * Specifies filter that defines signature set.\n   */\n  filter?: SignatureSetFilter;\n  signatures?: SignatureSetSignature[];\n  type?: SignatureSetType;\n}\n\n/**\n * Specifies filter that defines signature set.\n */\nexport interface SignatureSetFilter {\n  accuracyFilter?: Filter;\n  accuracyValue?: Value;\n  hasCve?: HasCve;\n  lastUpdatedFilter?: LastUpdatedFilter;\n  lastUpdatedValue?: string;\n  name?: string;\n  riskFilter?: Filter;\n  riskValue?: Value;\n  signatureType?: SignatureType;\n  /**\n   * Filter by signature tagValue.\n   *\n   * - **all**: no filter applied.\n   * - **eq**: only signatures with a tag that equals tagValue are added to the signature set.\n   * - **untagged**: only signatures without a tag are added to the signature set.\n   */\n  tagFilter?: TagFilter;\n  /**\n   * Value for the tagFilter.\n   * Relevant only for the **eq** value of tagFilter.\n   */\n  tagValue?: string;\n  userDefinedFilter?: HasCve;\n}\n\nexport enum Filter {\n  All = \"all\",\n  Eq = \"eq\",\n  Ge = \"ge\",\n  LE = \"le\",\n}\n\nexport enum Value {\n  All = \"all\",\n  High = \"high\",\n  Low = \"low\",\n  Medium = \"medium\",\n}\n\nexport enum HasCve {\n  All = \"all\",\n  No = \"no\",\n  Yes = \"yes\",\n}\n\nexport enum LastUpdatedFilter {\n  After = \"after\",\n  All = \"all\",\n  Before = \"before\",\n}\n\nexport enum SignatureType {\n  All = \"all\",\n  Request = \"request\",\n  Response = \"response\",\n}\n\n/**\n * Filter by signature tagValue.\n *\n * - **all**: no filter applied.\n * - **eq**: only signatures with a tag that equals tagValue are added to the signature set.\n * - **untagged**: only signatures without a tag are added to the signature set.\n */\nexport enum TagFilter {\n  All = \"all\",\n  Eq = \"eq\",\n  Untagged = \"untagged\",\n}\n\nexport interface SignatureSetSignature {\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport enum SignatureSetType {\n  FilterBased = \"filter-based\",\n  Manual = \"manual\",\n}\n\nexport interface SignatureSettings {\n  attackSignatureFalsePositiveMode?: AttackSignatureFalsePositiveMode;\n  minimumAccuracyForAutoAddedSignatures?: MinimumAccuracyForAutoAddedSignatures;\n  placeSignaturesInStaging?: boolean;\n  signatureStaging?: boolean;\n}\n\nexport enum AttackSignatureFalsePositiveMode {\n  Detect = \"detect\",\n  DetectAndAllow = \"detect-and-allow\",\n  Disabled = \"disabled\",\n}\n\nexport enum MinimumAccuracyForAutoAddedSignatures {\n  High = \"high\",\n  Low = \"low\",\n  Medium = \"medium\",\n}\n\n/**\n * This section defines the properties of signature on the policy.\n */\nexport interface PolicySignature {\n  alarm?: boolean;\n  block?: boolean;\n  /**\n   * Specifies, if true, that the signature is enabled on the security policy. When false, the\n   * signature is disable on the security policy.\n   */\n  enabled?: boolean;\n  inPolicy?: InPolicy;\n  isPriorRuleEnforced?: boolean;\n  learn?: boolean;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n  /**\n   * Specifies, if true, that the signature is in staging.\n   * The system does not enforce signatures in staging. Instead, the system records the\n   * request information and keeps it for a period of time\n   * (the Enforcement Readiness Period whose default time period is 7 days).\n   * Specifies, when false, that the staging feature is not in use, and that the system\n   * enforces the signatures' Learn/Alarm/Block settings immediately.\n   * (Blocking is performed only if the security policy's enforcement mode is Blocking.)\n   */\n  performStaging?: boolean;\n  /**\n   * The signature ID which identifies the signature.\n   */\n  signatureId?: number;\n  /**\n   * The signature tag, which along with the signature name, identifies the signature.\n   */\n  tag?: string;\n}\n\nexport enum InPolicy {\n  False = \"false\",\n  True = \"true\",\n}\n\n/**\n * Specifies the template to populate the attributes of a new policy. The template is only\n * used when creating the policy - a security policy is always created based on a\n * user-defined or system-supplied template.\n * Unlike parent policies, the templates do not affect the policy after it is created. If\n * you modify a template, policies created from it in the past are not affected.\n */\nexport interface Template {\n  /**\n   * Specifies the name of the template used for the policy creation.\n   */\n  name: string;\n}\n\nexport interface ThreatCampaignSettings {\n  threatCampaignEnforcementReadinessPeriod?: number;\n  threatCampaignStaging?: boolean;\n}\n\n/**\n * This section defines the enforcement state for the threat campaigns in the security\n * policy.\n */\nexport interface ThreatCampaign {\n  /**\n   * If enabled - threat campaign is enforced in the security policy.\n   */\n  isEnabled?: boolean;\n  /**\n   * Name of the threat campaign.\n   */\n  name?: string;\n  /**\n   * If enabled - there will be only reporting (no blocking) for requests with a detected\n   * treat campaign.\n   * For this feature to work, threatCampaignStaging should be enabled in\n   * threat-campaign-settings.\n   * After staging period (threatCampaignEnforcementReadinessPeriod in\n   * threat-campaign-settings), the system will suggest to enforce (disable staging) for the\n   * threat campaign.\n   */\n  performStaging?: boolean;\n}\n\n/**\n * The type of policy you want to create. The default policy type is Security.\n * - **Parent:** A parent policy can be used as a basis for similar child policies. Parent\n * policy settings can be inherited to its child policies. A parent policy cannot be applied\n * to Virtual Servers. No traffic can flow through them. They are just models.\n * - **Security:** A security policy can be created from a parent policy or as a stand-alone\n * policy. Changes to a security policy do not affect other security policies. A security\n * policy can be applied to a virtual server.\n */\nexport enum PolicyType {\n  Parent = \"parent\",\n  Security = \"security\",\n}\n\n/**\n * In a security policy, you can manually specify the HTTP URLs that are allowed (or\n * disallowed) in traffic to the web application being protected. If you are using automatic\n * policy building (and the policy includes learning URLs), the system can determine which\n * URLs to add, based on legitimate traffic. When you create a security policy, wildcard\n * URLs of * (representing all HTTP URLs) are added to the Allowed HTTP URLs lists. During\n * the enforcement readiness period, the system examines the URLs in the traffic and makes\n * learning suggestions that you can review and add the URLs to the policy as needed. This\n * way, the security policy includes the HTTP URLs that are typically used. When you think\n * all the URLs are included in the security policy, you can remove the * wildcards from the\n * allowed URLs lists.\n */\nexport interface URLElement {\n  /**\n   * Specifies the conditions for when the browser should allow this URL to be rendered in a\n   * frame or iframe.\n   * Never: Specifies that this URL must never be rendered in a frame or iframe. The web\n   * application instructs browsers to hide, or disable, frame and iframe parts of this URL.\n   * Same Origin Only: Specifies that the browser may load the frame or iframe if the\n   * referring page is from the same protocol, port, and domain as this URL. This limits the\n   * user to navigate only within the same web application.\n   * Only From URL: Specifies that the browser may load the frame or iframe from a specified\n   * domain. Type the protocol and domain in URL format for example, http://www.mywebsite.com.\n   * Do not enter a sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFrames?: AllowRenderingInFrames;\n  /**\n   * Specifies that the browser may load the frame or iframe from a specified domain. Type the\n   * protocol and domain in URL format for example, http://www.mywebsite.com. Do not enter a\n   * sub-URL, such as http://www.mywebsite.com/index.\n   */\n  allowRenderingInFramesOnlyFrom?: string;\n  /**\n   * Specifies, when true, that you want attack signatures and threat campaigns to be detected\n   * on this URL and possibly override the security policy settings of an attack signature or\n   * threat campaign specifically for this URL. After you enable this setting, the system\n   * displays a list of attack signatures and threat campaigns.\n   */\n  attackSignaturesCheck?: boolean;\n  canChangeDomainCookie?: boolean;\n  /**\n   * Specifies that the system adds the X-Frame-Options header to the domain URL's response\n   * header. This is done to protect the web application against clickjacking. Clickjacking\n   * occurs when an attacker lures a user to click illegitimate frames and iframes because the\n   * attacker hid them on legitimate visible website buttons. Therefore, enabling this option\n   * protects the web application from other web sites hiding malicious code behind them. The\n   * default is disabled. After you enable this option, you can select whether, and under what\n   * conditions, the browser should allow this URL to be rendered in a frame or iframe.\n   */\n  clickjackingProtection?: boolean;\n  /**\n   * Describes the URL (optional).\n   */\n  description?: string;\n  disallowFileUploadOfExecutables?: boolean;\n  dynamicFlows?: FluffyDynamicFlow[];\n  /**\n   * The system extracts the Origin (domain) of the request from the Origin header.\n   */\n  html5CrossOriginRequestsEnforcement?: FluffyHtml5CrossOriginRequestsEnforcement;\n  /**\n   * If *true*, the URLs allowed by the security policy.\n   */\n  isAllowed?: boolean;\n  /**\n   * A request body is mandatory. This is relevant for any method acting as POST.\n   */\n  mandatoryBody?: boolean;\n  /**\n   * To allow or disallow specific meta characters in the name of this specific URL (and thus\n   * override the global meta character settings).\n   */\n  metacharOverrides?: FluffyMetacharOverride[];\n  /**\n   * Specifies, when true, that you want meta characters to be detected on this URL and\n   * possibly override the security policy settings of a meta character specifically for this\n   * URL. After you enable this setting, the system displays a list of meta characters.\n   */\n  metacharsOnUrlCheck?: boolean;\n  /**\n   * Unique ID of a URL with a protocol type and name. Select a Method for the URL to create\n   * an API endpoint: URL + Method.\n   */\n  method?: URLMethod;\n  /**\n   * Specifies a list of methods that are allowed or disallowed for a specific URL. The list\n   * overrides the list of methods allowed or disallowed globally at the policy level.\n   */\n  methodOverrides?: FluffyMethodOverride[];\n  /**\n   * Specifies, when true, that you want methods to be detected on this URL and possibly\n   * override the security policy settings of a method specifically for this URL. After you\n   * enable this setting, the system displays a list of methods.\n   */\n  methodsOverrideOnUrlCheck?: boolean;\n  /**\n   * Specifies an HTTP URL that the security policy allows. The available types are:\n   *\n   * - **Explicit**: Specifies that the URL has a specific name and is not a wildcard entity.\n   * Type the name of a URL exactly as you expect it to appear in the request.\n   * - **Wildcard**: Specifies that any URL that matches the listed wildcard expression should\n   * be treated according to the wildcard attributes. Type a wildcard expression that matches\n   * the expected URL. For example, entering the wildcard expression * specifies that any URL\n   * is allowed by the security policy.\n   * The syntax for wildcard entities is based on shell-style wildcard characters. The list\n   * below describes the wildcard characters that you can use so that the entity name can\n   * match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Note**: Wildcards do not match regular expressions. Do not use a regular expression as\n   * a wildcard.\n   */\n  name: string;\n  /**\n   * The attribute operationId is used as an OpenAPI endpint identifier.\n   */\n  operationId?: string;\n  /**\n   * If *true* then any violation associated to the respective URL will not be enforced, and\n   * the request will not be considered illegal.\n   */\n  performStaging?: boolean;\n  /**\n   * When checked (enabled), positional parameters are enabled in the URL.\n   */\n  positionalParameters?: FluffyPositionalParameter[];\n  /**\n   * Specifies whether the protocol for the URL is HTTP or HTTPS.\n   */\n  protocol?: URLProtocol;\n  /**\n   * Array of signature overrides.\n   * Specifies attack signatures whose security policy settings are overridden for this URL,\n   * and which action the security policy takes when it discovers a request for this URL that\n   * matches these attack signatures.\n   */\n  signatureOverrides?: StickySignatureOverride[];\n  /**\n   * Determines the type of the **name** attribute. Only when setting the type to wildcard\n   * will the special wildcard characters in the name be interpreted as such.\n   */\n  type?: HostNameTypeEnum;\n  /**\n   * Specifies how the system recognizes and enforces requests for this URL according to the\n   * requests' header content. The system automatically creates a default header-based content\n   * profile for HTTP, and you cannot delete it. However, requests for a URL may contain other\n   * types of content, such as JSON, XML, or other proprietary formats.\n   */\n  urlContentProfiles?: FluffyURLContentProfile[];\n  /**\n   * Specifies that an asterisk in a wildcard URL matches any number of path segments\n   * (separated by slashes); when cleared, specifies that an asterisk matches at most one\n   * segment. For example: the wildcard /art/* matches /art/abc/index.html if the wildcard\n   * match includes slashes (default value), but does not match it if the check box is\n   * cleared. In that case, it matches /art/go.html (only one segment below /art).\n   */\n  wildcardIncludesSlash?: boolean;\n  /**\n   * Specifies the order index for wildcard URLs matching. Wildcard URLs with lower wildcard\n   * order will get checked for a match prior to URLs with higher wildcard order.\n   */\n  wildcardOrder?: number;\n}\n\nexport interface FluffyDynamicFlow {\n  prefix: string;\n  regexp: string;\n  suffix: string;\n}\n\n/**\n * The system extracts the Origin (domain) of the request from the Origin header.\n */\nexport interface FluffyHtml5CrossOriginRequestsEnforcement {\n  /**\n   * Specifies whether requests from other web applications hosted in different domains may\n   * include user credentials.\n   */\n  allowCredentials?: boolean;\n  /**\n   * Allows you to specify a list of origins allowed to share data returned by this URL.\n   */\n  allowOriginsEnforcementMode?: AllowOriginsEnforcementMode;\n  /**\n   * Allows you to specify a list of request headers that other web applications hosted in\n   * different domains can use when requesting this URL. Or you can delete non-simple headers\n   * returned in response to requests.\n   */\n  checkAllowedHeaders?: boolean;\n  /**\n   * Allows you to specify a list of methods that other web applications hosted in different\n   * domains can use when requesting this URL.\n   */\n  checkAllowedMethods?: boolean;\n  /**\n   * If *false*, requests from other web applications hosted in different domains are not\n   * allowed to include user credentials.\n   */\n  checkCredentials?: boolean;\n  /**\n   * Optionally, for Exposed Headers, select Replace with, then specify the headers that\n   * JavaScript can expose and share with other applications when requesting this URL from\n   * another domain.\n   * Exposed headers are the headers the server returns in the response. For example, to\n   * discover server side web application technology, type X-Powered-By.\n   */\n  checkExposedHeaders?: boolean;\n  /**\n   * Optionally, for Maximum Age, select Replace with, then specify the number of seconds that\n   * the results of a preflight request can be cached or use the default.\n   */\n  checkMaximumAge?: boolean;\n  crossDomainAllowedHeader?: FluffyCrossDomainAllowedHeader[];\n  /**\n   * Allows you to specify a list of methods that other web applications hosted in different\n   * domains can use when requesting this URL.\n   */\n  crossDomainAllowedMethod?: FluffyCrossDomainAllowedMethod[];\n  /**\n   * Allows you to specify a list of origins allowed to share data returned by this URL.\n   */\n  crossDomainAllowedOrigin?: FluffyCrossDomainAllowedOrigin[];\n  /**\n   * Exposed headers are the headers the server returns in the response. For example, to\n   * discover server side web application technology, type X-Powered-By.\n   */\n  crossDomainExposedHeader?: FluffyCrossDomainExposedHeader[];\n  /**\n   * Specify the option to determine how to handle CORS requests.\n   * Disabled: Do nothing related to cross-domain requests. Pass CORS requests exactly as set\n   * by the server.\n   * Remove all CORS headers: Remove all CORS headers from the response. The response is sent\n   * to the browser, and the browser does not allow cross-origin requests.\n   * Replace CORS headers: Replace the CORS header in the response with another header\n   * specified on the tab, including allowed origins, allowed methods, allowed headers, and so\n   * on. The browser enforces the policy. Then after Replace with specify the protocol,\n   * origin, and port for replacing CORS headers.\n   * Enforce on the system: Allow cross-origin resource sharing as configured in the Allowed\n   * Origins setting. CORS requests are allowed from the domains specified as allowed origins.\n   * The system enforces the policy. Specify the protocol, origin, and port of allowed origins\n   */\n  enforcementMode?: PurpleEnforcementMode;\n  /**\n   * Specifies how long (in seconds) to cache in the browser the results of a preflight\n   * request (a special request that the browser sends to your web application to determine if\n   * JavaScript from another domain may access your resource).\n   */\n  maximumAge?: number;\n}\n\nexport interface FluffyCrossDomainAllowedHeader {\n  /**\n   * Optionally, for Allowed Headers, select Replace with, then type the headers that other\n   * applications can use when requesting this URL from another domain.\n   */\n  allowedHeaderName: string;\n}\n\nexport interface FluffyCrossDomainAllowedMethod {\n  /**\n   * Optionally, for Allowed Methods, specify which methods other applications may use when\n   * requesting this URL from another domain.\n   */\n  methodName: string;\n}\n\nexport interface FluffyCrossDomainAllowedOrigin {\n  /**\n   * If *true*, sub-domains of the allowed origin are also allowed to receive data from your\n   * web application.\n   */\n  includeSubDomains?: boolean;\n  /**\n   * Type the domain name or IP address with which the URL can share data.\n   * Wildcards are allowed in the names. For example: *.f5.com will match b.f5.com; however it\n   * will not match a.b.f5.com.\n   */\n  originName: string;\n  /**\n   * Select the port that other web applications can use to request data from your web\n   * application, or use the * wildcard for all ports.\n   */\n  originPort: OriginPortEnum | number;\n  /**\n   * Select the appropriate protocol for the allowed origin.\n   */\n  originProtocol: OriginProtocol;\n}\n\nexport interface FluffyCrossDomainExposedHeader {\n  /**\n   * Optionally, for Exposed Headers, select Replace with, then specify the headers that\n   * JavaScript can expose and share with other applications when requesting this URL from\n   * another domain.\n   */\n  exposedHeaderName: string;\n}\n\nexport interface FluffyMetacharOverride {\n  /**\n   * If *true*, metacharacters and other characters are allowed in a URL.\n   */\n  isAllowed?: boolean;\n  /**\n   * ASCII representation of the character in Hex format\n   */\n  metachar: string;\n}\n\nexport interface FluffyMethodOverride {\n  /**\n   * Specifies that the system allows you to override allowed methods for this URL. When\n   * selected, the global policy settings for methods are listed, and you can change what is\n   * allowed or disallowed for this URL.\n   */\n  allowed?: boolean;\n  /**\n   * Specifies a list of existing HTTP methods. All security policies accept standard HTTP\n   * methods by default.\n   */\n  method: MethodOverrideMethod;\n}\n\nexport interface FluffyPositionalParameter {\n  parameter: FluffyParameter;\n  /**\n   * Select which to add: Text or Parameter and enter your desired segments. You can add\n   * multiple text and parameter segments.\n   */\n  urlSegmentIndex: number;\n}\n\n/**\n * This section defines parameters that the security policy permits in requests.\n */\nexport interface FluffyParameter {\n  /**\n   * Determines whether an empty value is allowed for a parameter.\n   */\n  allowEmptyValue?: boolean;\n  /**\n   * Determines whether multiple parameter instances with the same name are allowed in one\n   * request.\n   */\n  allowRepeatedParameterName?: boolean;\n  /**\n   * Specifies type of serialization for array of primitives parameter.\n   * Serialization defines how multiple values are delimited - format that can be transmitted\n   * and reconstructed later:\n   * - **pipe**: pipe-separated values. Array color=[\"blue\",\"black\"] -> color=blue|black.\n   * - **form**: ampersand-separated values. Array color=[\"blue\",\"black\"] ->\n   * color=blue,black.\n   * - **matrix**: semicolon-prefixed values. Array color=[\"blue\",\"black\"] ->\n   * ;color=blue,black.\n   * - **tsv**: tab-separated values. Aarray color=[\"blue\",\"black\"] -> color=blue\\tblack.\n   * - **csv**: comma-separated values. Array color=[\"blue\",\"black\"] -> color=blue,black.\n   * - **label**: dot-prefixed values. Array color=[\"blue\",\"black\"] -> .blue.black.\n   * - **multi**: multiple parameter instances rather than multiple values. Array\n   * color=[\"blue\",\"black\"] -> color=blue&color=black.\n   * - **ssv**: space-separated values. Array color=[\"blue\",\"black\"] -> color=blue black.\n   * - **multipart**: defines array of files.\n   *\n   * **Notes**:\n   * - This attribute is relevant only for parameters with **array** *valueType*.\n   * - **multi** and **form** serializations can be defined for parameter with *query*,\n   * *form-data* or *cookie* locations only.\n   * - **multipart** serialization can be defined for parameter with *form-data* location\n   * only.\n   * - **matrix** and **label** serializations can be defined for parameter with *path*\n   * location only.\n   */\n  arraySerializationFormat?: ArraySerializationFormat;\n  /**\n   * Determines whether items in an array parameter must be unique.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  arrayUniqueItemsCheck?: boolean;\n  /**\n   * Determines whether attack signatures and threat campaigns must be detected in a\n   * parameter's value.\n   * This attribute is relevant only for parameters with **alpha-numeric** or **binary**\n   * *dataType*.\n   */\n  attackSignaturesCheck?: boolean;\n  /**\n   * Determines whether an array parameter has a restricted maximum number of items.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  checkMaxItemsInArray?: boolean;\n  /**\n   * Determines whether the parameter has a restricted maximum value.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMaxValue?: boolean;\n  /**\n   * Determines whether a parameter has a restricted maximum length for value.\n   */\n  checkMaxValueLength?: boolean;\n  /**\n   * Determines whether disallowed metacharacters must be detected in a parameter's name.\n   * This attribute is relevant only for **wildcard** parameters with **alpha-numeric**\n   * *dataType*.\n   */\n  checkMetachars?: boolean;\n  /**\n   * Determines whether an array parameter has a restricted minimum number of items.\n   * This attribute is relevant only for parameters with **array** *valueType*.\n   */\n  checkMinItemsInArray?: boolean;\n  /**\n   * Determines whether a parameter has a restricted minimum value.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMinValue?: boolean;\n  /**\n   * Determines whether a parameter has a restricted minimum length for value.\n   */\n  checkMinValueLength?: boolean;\n  /**\n   * Determines whether a parameter's value is a multiple of a number defined in *multipleOf*.\n   * This attribute is relevant only for parameters with **integer** or **decimal** *dataType*.\n   */\n  checkMultipleOfValue?: boolean;\n  contentProfile?: PurpleContentProfile;\n  /**\n   * Specifies data type of parameter's value:\n   *\n   * - **none**: system data type which is used by policy builder and cannot be set manually.\n   * - **alpha-numeric**: specifies that the value of parameter can be any text consisting of\n   * letters, digits, and the underscore character.\n   * - **binary**: specifies there is no text limit for the value of a parameter (length\n   * checks only).\n   * - **phone**: specifies that the value of a parameter can be text in telephone number\n   * format only.\n   * - **email**: specifies that the value of a parameter must be text in email format only.\n   * - **boolean**: specifies that the value of a parameter must be boolean (only *true* and\n   * *false* values are allowed).\n   * - **integer**: specifies that the value of a parameter must be whole numbers only (no\n   * decimals).\n   * - **decimal**: specifies that the value of a parameter is numbers only and can include\n   * decimals.\n   *\n   * **Notes**:\n   * -  This attribute is relevant for parameters with **array** or **user-input** *valueType*\n   * only.\n   */\n  dataType?: DataType;\n  /**\n   * Determines whether a parameter's value cannot have binary executable content.\n   * This attribute is relevant only for parameters with **binary** *dataType*.\n   */\n  disallowFileUploadOfExecutables?: boolean;\n  /**\n   * Determines whether the parameter value includes the pattern defined in\n   * *regularExpression*.\n   * This attribute is relevant only for parameters with **alpha-numeric** *dataType*.\n   */\n  enableRegularExpression?: boolean;\n  /**\n   * Determines whether the maximum value defined in *maximumValue* attribute is exclusive.\n   * This attribute is relevant only if *checkMaxValue* is set to **true**.\n   */\n  exclusiveMax?: boolean;\n  /**\n   * Determines whether a minimum value defined in *minimumValue* attribute is exclusive.\n   * This attribute is relevant only if *checkMinValue* is set to **true**.\n   */\n  exclusiveMin?: boolean;\n  /**\n   * Specifies whether an array or object parameters should have separate values for each\n   * array item or object property.\n   * This attribute is relevant only if *objectSerializationStyle* is defined.\n   *\n   * **Notes**:\n   * -  This attribute is not relevant for parameters with **deep-object**,\n   * **space-delimited** or **pipe-delimited** *objectSerializationStyle*.\n   */\n  explodeObjectSerialization?: boolean;\n  /**\n   * Determines whether a parameter's value contains a Base64 encoded string.\n   * If the value is indeed Base64 encoded, the system decodes this value and continues with\n   * its security checks.\n   * This attribute is relevant only for parameters with **alpha-numeric** or **binary**\n   * *dataType*.\n   */\n  isBase64?: boolean;\n  /**\n   * Determines whether a parameter is located in the value of Cookie header.\n   * *parameterLocation* attribute is ignored if **isCookie** is set to *true*.\n   */\n  isCookie?: boolean;\n  /**\n   * Determines whether a parameter is located in headers as one of the headers.\n   * *parameterLocation* attribute is ignored if **isHeader** is set to *true*.\n   */\n  isHeader?: boolean;\n  /**\n   * Specifies whether the parameter is associated with a URL, a flow, or neither.\n   */\n  level?: Level;\n  /**\n   * Determines whether a parameter must exist in the request.\n   */\n  mandatory?: boolean;\n  /**\n   * Determines the restriction for the maximum length of parameter's value.\n   * This attribute is relevant only if *checkMaxValueLength* is set to **true**.\n   */\n  maximumLength?: number;\n  /**\n   * Determines the restriction for the maximum value of parameter.\n   * This attribute is relevant only if *checkMaxValue* is set to **true**.\n   */\n  maximumValue?: number;\n  /**\n   * Determines the restriction forthe  maximum number of items in an array parameter.\n   * This attribute is relevant only if *checkMaxItemsInArray* is set to **true**.\n   */\n  maxItemsInArray?: number;\n  /**\n   * Determines whether disallowed metacharacters must be detected in a parameter's value.\n   * This attribute is relevant only for parameters with **alpha-numeric** *dataType*.\n   */\n  metacharsOnParameterValueCheck?: boolean;\n  /**\n   * Determines the restriction for the minimum length of parameter's value.\n   * This attribute is relevant only if *checkMinValueLength* is set to **true**.\n   */\n  minimumLength?: number;\n  /**\n   * Determines the restriction for the minimum value of a parameter.\n   * This attribute is relevant only if *checkMinValue* is set to **true**.\n   */\n  minimumValue?: number;\n  /**\n   * Determines the restriction for the minimum number of items in an array parameter.\n   * This attribute is relevant only if *checkMinItemsInArray* is set to **true**.\n   */\n  minItemsInArray?: number;\n  /**\n   * Determines the number by which a parameter's value is divisible without remainder.\n   * This number must be positive and it may be a floating-point number.\n   * This attribute is relevant only if *checkMultipleOfValue* is set to **true**.\n   */\n  multipleOf?: number;\n  /**\n   * Specifies the name of a parameter which must be permitted in requests.\n   * Format of parameter name attribute differs depending on *type* attribute:\n   * - **explicit** *type*: name of permitted parameter in request should literally match.\n   * - **wildcard** *type*: name of permitted parameter in request should match wildcard\n   * expression.\n   *\n   * The syntax for wildcard entities is based on shell-style wildcard characters.\n   * The list below describes the wildcard characters that you can use so that the entity name\n   * can match multiple objects.\n   *\n   * - *****: Matches all characters\n   * - **?**: Matches any single character\n   * - **[abcde]**: Matches exactly one of the characters listed\n   * - **[!abcde]**: Matches any character not listed\n   * - **[a-e]**: Matches exactly one character in the range\n   * - **[!a-e]**: Matches any character not in the range\n   *\n   * **Notes**:\n   * - Wildcards do not match regular expressions. Do not use a regular expression as a\n   * wildcard.\n   * - Empty parameter name is allowed for **explicit** *type*\n   */\n  name: string;\n  /**\n   * Determines metacharacters whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that has these metacharacters in the name.\n   * This attribute is relevant only if *checkMetachars* is set to **true**.\n   */\n  nameMetacharOverrides?: PurpleNameMetacharOverride[];\n  /**\n   * Specifies the type of serialization for an object or complex array parameter.\n   * Serialization defines how multiple values are delimited - format that can be transmitted\n   * and reconstructed later:\n   * - **pipe-delimited**: pipe-separated values. Object color={\"R\":100,\"G\":200} ->\n   * color=R|100|G|200.\n   * - **form**: ampersand-separated values. Object color={\"R\":100,\"G\":200} ->\n   * color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> R=100&G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **space-delimited**: space-separated values. Object color={\"R\":100,\"G\":200} -> color=R\n   * 100 G 200.\n   * - **deep-object**: rendering nested objects. Object color={\"R\":100,\"G\":200} ->\n   * color[R]=100&color[G]=200.\n   * - **matrix**: semicolon-prefixed values. Object color={\"R\":100,\"G\":200} ->\n   * ;color=R,100,G,200 if *explodeObjectSerialization* set to **false** or -> ;R=100;G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **simple**: comma-separated values. Object color={\"R\":100,\"G\":200} -> R,100,G,200 if\n   * *explodeObjectSerialization* set to **false** or -> R=100,G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   * - **label**: dot-prefixed values. Object color={\"R\":100,\"G\":200} -> .R.100.G.200 if\n   * *explodeObjectSerialization* set to **false** or -> .R=100.G=200 if\n   * *explodeObjectSerialization* set to **true**.\n   *\n   * **Notes**:\n   * - This attribute is relevant only for parameters with **object** or **openapi-array**\n   * *valueType*.\n   * - **form** serialization can be defined for a parameter with *query*, *form-data* or\n   * *cookie* locations only.\n   * - **matrix** and **label** serializations can be defined for an array parameter with\n   * *path* location only.\n   * - **simple** serializations can be defined for a parameter with *path* and *header*\n   * locations only.\n   * - **deep-object** serialization can be defined for a parameter with *query* or\n   * *form-data* locations only.\n   */\n  objectSerializationStyle?: ObjectSerializationStyle;\n  /**\n   * Determines the set of possible parameter's values.\n   * This attribute is not relevant for parameters with **phone**, **email** or **binary**\n   * *dataType*.\n   */\n  parameterEnumValues?: string[];\n  /**\n   * Specifies location of parameter in request:\n   *\n   * - **any**: in query string, in POST data (body) or in URL path.\n   * - **query**: in query string.\n   * - **form-data**: in POST data (body).\n   * - **cookie**: in value of Cookie header.\n   * - **path**: in URL path.\n   * - **header**: in request headers.\n   *\n   * **Notes**:\n   * - **path** location can be defined for parameter with **global** *level* only.\n   * - **path**, **header** and **cookie** location can be defined for parameter with\n   * **explicit** *type* only.\n   * - **header** and **cookie** location cannot be defined for parameter with empty *name*.\n   */\n  parameterLocation?: ParameterLocation;\n  /**\n   * Determines the staging state of a parameter.\n   * If you place an entity in staging, the system does not block requests for this entity.\n   *\n   * Tip: Use staging on wildcard entities to build the security policy without explicit\n   * entities of this type, rather than configuring the wildcard entity itself to be enforced\n   * with the settings found on it.\n   */\n  performStaging?: boolean;\n  /**\n   * Determines a positive regular expression (PCRE) for a parameter's value.\n   * This attribute is relevant only if *enableRegularExpression* is set to **true**.\n   *\n   * **Notes**:\n   * - The length of a regular expression is limited to 254 characters.\n   */\n  regularExpression?: string;\n  /**\n   * Determines whether a parameter is sensitive and must be not visible in logs nor in the\n   * user interface.\n   * Instead of actual valu,e a string of asterisks is shown for this parameter.\n   * Use it to protect sensitive user input, such as a password or a credit card number, in a\n   * validated request.\n   */\n  sensitiveParameter?: boolean;\n  /**\n   * Determines attack signatures whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that matches these attack signatures.\n   * This attribute is relevant only if *signatureOverrides* is set to **true**.\n   */\n  signatureOverrides?: PurpleSignatureOverride[];\n  /**\n   * Determines the set of possible parameter's values.\n   * This attribute is relevant for parameters with **static-content** *valueType* only.\n   */\n  staticValues?: string[];\n  /**\n   * Specifies the type of the *name* attribute.\n   */\n  type?: HostNameTypeEnum;\n  url?: PurpleURL;\n  /**\n   * Determines metacharacters whose security policy settings are overridden for this\n   * parameter, and which action the security policy takes when it discovers a request for\n   * this parameter that has these metacharacters in value.\n   * This attribute is relevant only if *metacharsOnParameterValueCheck* is set to **true**.\n   */\n  valueMetacharOverrides?: PurpleValueMetacharOverride[];\n  /**\n   * Specifies type of parameter's value:\n   *\n   * - **object**: the parameter's value is complex object defined by JSON schema.\n   * - **dynamic-content**: the parameter's content changes dynamically.\n   * - **openapi-array**: the parameter's value is complex array defined by JSON schema.\n   * - **ignore**: the system does not perform validity checks on the value of the parameter.\n   * - **static-content**: the parameter has a static, or pre-defined, value(s).\n   * - **json**: the parameter's value is JSON data.\n   * - **array**: the parameter's value is array of primitives.\n   * - **user-input**: the parameter's value is provided by user-input.\n   * - **xml**: the parameter's value is XML data.\n   * - **auto-detect**: the parameter's value can be user-inpur, XML data or JSON data. The\n   * system automatically classifies the type of value.\n   * - **dynamic-parameter-name**: the parameter's name changes dynamically.\n   *\n   * **Notes**:\n   * - **dynamic-parameter-name** value type can be defined for a parameter with **flow**\n   * *level* and **explicit** *type* only.\n   * - **dynamic-content** value type can be defined for a parameter with **explicit** *type*\n   * only.\n   */\n  valueType?: ValueType;\n  /**\n   * Specifies the order in which wildcard entities are organized.\n   * Matching of an enforced parameter with a defined wildcard parameter happens based on\n   * order from smaller to larger.\n   */\n  wildcardOrder?: number;\n}\n\nexport interface StickySignatureOverride {\n  /**\n   * Specifies, when true, that the overridden signature is enforced\n   */\n  enabled?: boolean;\n  /**\n   * The signature name, which along with the signature tag, identifies the signature.\n   */\n  name?: string;\n  /**\n   * The signature ID which identifies the signature.\n   */\n  signatureId?: number;\n  /**\n   * The signature tag, which along with the signature name, identifies the signature.\n   */\n  tag?: string;\n}\n\nexport interface FluffyURLContentProfile {\n  contentProfile?: IndecentContentProfile;\n  /**\n   * Specifies an explicit header name that must appear in requests for this URL. This field\n   * is not case-sensitive.\n   */\n  headerName: string;\n  /**\n   * Displays the order in which the system checks header content of requests for this URL.\n   */\n  headerOrder?: HeaderOrderEnum | number;\n  /**\n   * Specifies a simple pattern string (glob pattern matching) for the header value that must\n   * appear in legal requests for this URL; for example, *json*, xml_method?, or method[0-9].\n   * If the header includes this pattern, the system assumes the request contains the type of\n   * data you select in the Request Body Handling setting. This field is case-sensitive.\n   */\n  headerValue: string;\n  /**\n   * Apply Content Signatures: Do not parse the content; scan the entire payload with\n   * full-content attack signatures.\n   * Apply Value and Content Signatures: Do not parse the content or extract parameters;\n   * process the entire payload with value and full-content attack signatures.\n   * Disallow: Block requests for an URL containing this header content. Log the Illegal\n   * Request Content Type violation.\n   * Do Nothing: Do not inspect or parse the content. Handle the header of the request as\n   * specified by the security policy.\n   * Form Data: Parse content as posted form data in either URL-encoded or multi-part formats.\n   * Enforce the form parameters according to the policy.\n   * GWT: Perform checks for data in requests, based on the configuration of the GWT (Google\n   * Web Toolkit) profile associated with this URL.\n   * JSON: Review JSON data using an associated JSON profile, and use value attack signatures\n   * to scan the element values.\n   * XML: Review XML data using an associated XML profile.\n   */\n  type?: URLContentProfileType;\n}\n\nexport interface IndecentContentProfile {\n  name?: string;\n}\n\nexport interface Webhook {\n  body?: string;\n  contentType?: string;\n  name: string;\n  triggerEvent?: TriggerEvent;\n  url?: string;\n}\n\nexport enum TriggerEvent {\n  ApplyPolicy = \"apply-policy\",\n  ApplyPolicyFailed = \"apply-policy-failed\",\n  HTTPRequestIllegal = \"http-request-illegal\",\n  HTTPRequestLikelyMalicious = \"http-request-likely-malicious\",\n  HTTPRequestNeedingExamination = \"http-request-needing-examination\",\n  IncidentEnd = \"incident-end\",\n  IncidentStart = \"incident-start\",\n}\n\nexport interface WebsocketURL {\n  allowBinaryMessage?: boolean;\n  allowJsonMessage?: boolean;\n  allowTextMessage?: boolean;\n  binaryMessageMaxSize?: number;\n  checkBinaryMessageMaxSize?: boolean;\n  checkMessageFrameMaxCount?: boolean;\n  checkMessageFrameMaxSize?: boolean;\n  checkPayload?: boolean;\n  description?: string;\n  extension?: Extension;\n  html5CrossOriginRequestsEnforcement?: WebsocketURLHtml5CrossOriginRequestsEnforcement;\n  isAllowed?: boolean;\n  jsonProfile?: JSONProfileObject;\n  messageFrameMaxCount?: number;\n  messageFrameMaxSize?: number;\n  metacharOverrides?: WebsocketURLMetacharOverride[];\n  metacharsOnWebsocketUrlCheck?: boolean;\n  name: string;\n  performStaging?: boolean;\n  plainTextProfile?: PlainTextProfileObject;\n  protocol?: WebsocketURLProtocol;\n  type?: HostNameTypeEnum;\n  unsupportedExtensions?: Extension;\n  wildcardIncludesSlash?: boolean;\n  wildcardOrder?: number;\n}\n\nexport enum Extension {\n  Block = \"block\",\n  Ignore = \"ignore\",\n  Remove = \"remove\",\n}\n\nexport interface WebsocketURLHtml5CrossOriginRequestsEnforcement {\n  crossDomainAllowedOrigin?: TentacledCrossDomainAllowedOrigin[];\n  enforcementMode?: FluffyEnforcementMode;\n}\n\nexport interface TentacledCrossDomainAllowedOrigin {\n  includeSubDomains?: boolean;\n  originName: string;\n  originPort: OriginPortEnum | number;\n  originProtocol: OriginProtocol;\n}\n\nexport enum FluffyEnforcementMode {\n  Disabled = \"disabled\",\n  Enforce = \"enforce\",\n  RemoveAllHeaders = \"remove-all-headers\",\n}\n\nexport interface JSONProfileObject {\n  attackSignaturesCheck?: boolean;\n  defenseAttributes?: JSONProfileDefenseAttributesObject;\n  description?: string;\n  handleJsonValuesAsParameters?: boolean;\n  hasValidationFiles?: boolean;\n  metacharElementCheck?: boolean;\n  metacharOverrides?: JSONProfileMetacharOverrideObject[];\n  name: string;\n  sensitiveData?: JSONProfileSensitiveDatumObject[];\n  signatureOverrides?: JSONProfileSignatureOverrideObject[];\n  validationFiles?: JSONProfileValidationFileObject[];\n}\n\nexport interface JSONProfileDefenseAttributesObject {\n  maximumArrayLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumStructureDepth?: MaximumCookieHeaderLengthEnum | number;\n  maximumTotalLengthOfJSONData?: MaximumCookieHeaderLengthEnum | number;\n  maximumValueLength?: MaximumCookieHeaderLengthEnum | number;\n  tolerateJSONParsingWarnings?: boolean;\n}\n\nexport interface JSONProfileMetacharOverrideObject {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface JSONProfileSensitiveDatumObject {\n  parameterName: string;\n}\n\nexport interface JSONProfileSignatureOverrideObject {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport interface JSONProfileValidationFileObject {\n  importUrl: string;\n  isPrimary?: boolean;\n  jsonValidationFile: FluffyJSONValidationFile;\n}\n\nexport interface FluffyJSONValidationFile {\n  contents: string;\n  fileName: string;\n  isBase64?: boolean;\n}\n\nexport interface WebsocketURLMetacharOverride {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface PlainTextProfileObject {\n  attackSignaturesCheck?: boolean;\n  defenseAttributes?: PlainTextProfileDefenseAttributesObject;\n  description?: string;\n  metacharElementCheck?: boolean;\n  metacharOverrides?: PlainTextProfileMetacharOverrideObject[];\n  name: string;\n  signatureOverrides?: PlainTextProfileSignatureOverrideObject[];\n}\n\nexport interface PlainTextProfileDefenseAttributesObject {\n  maximumLineLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumTotalLength?: MaximumCookieHeaderLengthEnum | number;\n  performPercentDecoding?: boolean;\n}\n\nexport interface PlainTextProfileMetacharOverrideObject {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface PlainTextProfileSignatureOverrideObject {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport enum WebsocketURLProtocol {\n  Ws = \"ws\",\n  Wss = \"wss\",\n}\n\n/**\n * An IP address exception is an IP address that you want the system to treat in a specific\n * way for a security policy.\n * For example, you can specify IP addresses from which the system should always trust\n * traffic, IP addresses for which you do not want the system to generate learning\n * suggestions for the traffic, and IP addresses for which you want to exclude information\n * from the logs.\n * You can use the IP address exception feature to create exceptions for IP addresses of\n * internal tools that your company uses, such as penetration tools, manual or automatic\n * scanners, or web scraping tools.\n * You can add an IP address exception and instruct the system how to handle traffic coming\n * from that address.\n */\nexport interface WhitelistIP {\n  /**\n   * Specifies how the system responds to blocking requests sent from this IP address.\n   * - **Policy Default:** Specifies that the Policy Blocking Settings will be used for\n   * requests from this IP address.\n   * - **Never Block:** Specifies that the system does not block requests sent from this IP\n   * address, even if your security policy is configured to block all traffic.\n   * - **Always Block:** Specifies that the system blocks requests sent from this IP address\n   * on condition that IP is denylisted is set to Block under Policy Building Settings.\n   */\n  blockRequests?: BlockRequests;\n  /**\n   * Specifies a brief description of the IP address.\n   */\n  description?: string;\n  /**\n   * Specifies when enabled that the system considers this IP address legitimate and does not\n   * take it into account when performing brute force prevention.\n   * Specifies when disabled that the system does not consider traffic from this IP address as\n   * being any safer than traffic from any other IP address. The system performs brute force\n   * prevention to traffic from this IP address according to the configuration of the security\n   * policy.\n   */\n  ignoreAnomalies?: boolean;\n  /**\n   * Specifies when enabled that the system considers this IP address legitimate even if it is\n   * found in the IP Intelligence database (a database of questionable IP addresses).\n   * Specifies when disabled that the system does not consider traffic from this IP address as\n   * being any safer than traffic from any other IP address. Therefore, if the IP Intelligence\n   * feature is enabled, the system checks whether this IP address matches any IP addresses in\n   * the IP Intelligence database.\n   */\n  ignoreIpReputation?: boolean;\n  /**\n   * Specifies the IP address that you want the system to trust.\n   */\n  ipAddress: string;\n  /**\n   * Specifies the netmask of the exceptional IP address. This is an optional field.\n   */\n  ipMask: string;\n  /**\n   * Specifies when enabled that the system should not generate learning suggestions from\n   * traffic sent from this IP address.\n   * Specifies when disabled that the system should generate learning suggestions from traffic\n   * sent from this IP address for violations with the Learn flag enabled on the Policy\n   * Building Settings.\n   */\n  neverLearnRequests?: boolean;\n  /**\n   * Specifies when enabled that the system does not log requests or responses sent from this\n   * IP address, even if the traffic is illegal, and even if your security policy is\n   * configured to log all traffic.\n   * Specifies when disabled that the system logs traffic sent this IP address according to\n   * the settings of the security policy's Logging Profile, and the violation settings on the\n   * Policy Building Settings.\n   */\n  neverLogRequests?: boolean;\n  /**\n   * Specifies when enabled the Policy Builder considers traffic from this IP address as being\n   * safe.\n   * The Policy Builder automatically adds to the security policy the data logged from traffic\n   * sent from this IP address.\n   * Specifies when disabled that the Policy Builder does not consider traffic from this IP\n   * address as being any different than traffic from any other IP address.\n   */\n  trustedByPolicyBuilder?: boolean;\n}\n\n/**\n * Specifies how the system responds to blocking requests sent from this IP address.\n * - **Policy Default:** Specifies that the Policy Blocking Settings will be used for\n * requests from this IP address.\n * - **Never Block:** Specifies that the system does not block requests sent from this IP\n * address, even if your security policy is configured to block all traffic.\n * - **Always Block:** Specifies that the system blocks requests sent from this IP address\n * on condition that IP is denylisted is set to Block under Policy Building Settings.\n */\nexport enum BlockRequests {\n  Always = \"always\",\n  Never = \"never\",\n  PolicyDefault = \"policy-default\",\n}\n\nexport interface XMLProfile {\n  attachmentsInSoapMessages?: boolean;\n  attackSignaturesCheck?: boolean;\n  defenseAttributes?: XMLProfileDefenseAttributes;\n  description?: string;\n  enableWss?: boolean;\n  followSchemaLinks?: boolean;\n  inspectSoapAttachments?: boolean;\n  metacharAttributeCheck?: boolean;\n  metacharElementCheck?: boolean;\n  metacharOverrides?: XMLProfileMetacharOverride[];\n  name: string;\n  sensitiveData?: XMLProfileSensitiveDatum[];\n  signatureOverrides?: XMLProfileSignatureOverride[];\n  soapMethods?: SoapMethod[];\n  useXmlResponsePage?: boolean;\n  validationFiles?: XMLProfileValidationFile[];\n  validationSoapActionHeader?: boolean;\n  wssConfiguration?: WssConfiguration;\n}\n\nexport interface XMLProfileDefenseAttributes {\n  allowCDATA?: boolean;\n  allowDTDs?: boolean;\n  allowExternalReferences?: boolean;\n  allowProcessingInstructions?: boolean;\n  maximumAttributesPerElement?: MaximumCookieHeaderLengthEnum | number;\n  maximumAttributeValueLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumChildrenPerElement?: MaximumCookieHeaderLengthEnum | number;\n  maximumDocumentDepth?: MaximumCookieHeaderLengthEnum | number;\n  maximumDocumentSize?: MaximumCookieHeaderLengthEnum | number;\n  maximumElements?: MaximumCookieHeaderLengthEnum | number;\n  maximumNameLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumNamespaceLength?: MaximumCookieHeaderLengthEnum | number;\n  maximumNSDeclarations?: MaximumCookieHeaderLengthEnum | number;\n  tolerateCloseTagShorthand?: boolean;\n  tolerateLeadingWhiteSpace?: boolean;\n  tolerateNumericNames?: boolean;\n}\n\nexport interface XMLProfileMetacharOverride {\n  isAllowed?: boolean;\n  metachar: string;\n}\n\nexport interface XMLProfileSensitiveDatum {\n  namespace: string;\n  paramName: string;\n  paramType: string;\n}\n\nexport interface XMLProfileSignatureOverride {\n  enabled?: boolean;\n  name?: string;\n  signatureId?: number;\n  tag?: string;\n}\n\nexport interface SoapMethod {\n  action?: string;\n  isAllowed?: boolean;\n  name: string;\n  namespace: string;\n}\n\nexport interface XMLProfileValidationFile {\n  importUrl: string;\n  isPrimary?: boolean;\n  xmlValidationFile: XMLValidationFile;\n}\n\nexport interface XMLValidationFile {\n  contents: string;\n  fileName: string;\n  isBase64?: boolean;\n}\n\nexport interface WssConfiguration {\n  addTimestamp?: boolean;\n  applyActionToDefinedRequestElements?: boolean;\n  applyActionToDefinedResponseElements?: boolean;\n  applyActionToEntireResponseBodyValue?: boolean;\n  clientCertificates?: ClientCertificate[];\n  decryptAll?: boolean;\n  elements?: Element[];\n  enableRequestRole?: boolean;\n  enableResponseRole?: boolean;\n  encryptionAlgorithm?: EncryptionAlgorithm;\n  enforceTimestampInRequest?: boolean;\n  keyTransportAlgorithm?: KeyTransportAlgorithm;\n  maxTimestampInterval?: number;\n  name?: string;\n  namespaceMapping?: NamespaceMapping[];\n  responseAction?: ResponseAction;\n  roles?: RoleElement[];\n  signatureAlgorithm?: SignatureAlgorithm;\n  soapBodyInRequestMustBeSignedAndVerified?: boolean;\n  verifyAll?: boolean;\n}\n\nexport interface ClientCertificate {\n  name?: string;\n}\n\nexport interface Element {\n  applyTo: ApplyTo;\n  encryptedPart?: EncryptedPart;\n  xPathName: string;\n}\n\nexport enum ApplyTo {\n  Request = \"request\",\n  Response = \"response\",\n}\n\nexport enum EncryptedPart {\n  Content = \"content\",\n  Element = \"element\",\n}\n\nexport enum EncryptionAlgorithm {\n  Aes128 = \"aes128\",\n  Aes256 = \"aes256\",\n  Tripledes = \"tripledes\",\n}\n\nexport enum KeyTransportAlgorithm {\n  RSA1_5 = \"rsa-1_5\",\n  RSAOaep = \"rsa-oaep\",\n}\n\nexport interface NamespaceMapping {\n  namespace?: string;\n  prefix: string;\n}\n\nexport enum ResponseAction {\n  Encrypt = \"encrypt\",\n  EncryptThenSign = \"encrypt-then-sign\",\n  Sign = \"sign\",\n  SignThenEncrypt = \"sign-then-encrypt\",\n}\n\nexport interface RoleElement {\n  applyTo: ApplyTo;\n  role: RoleEnum;\n}\n\nexport enum RoleEnum {\n  Next = \"next\",\n  None = \"none\",\n  UltimateReceiver = \"ultimateReceiver\",\n}\n\nexport enum SignatureAlgorithm {\n  HmacSha1 = \"hmac-sha1\",\n  RSASha1 = \"rsa-sha1\",\n}\n\nexport interface XMLValidationFileElement {\n  contents: string;\n  fileName: string;\n  isBase64?: boolean;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  public static toPolicyD(\n    json: string\n  ): any[] | boolean | number | number | null | PolicyDObject | string {\n    return cast(\n      JSON.parse(json),\n      u(a(\"any\"), true, 3.14, 0, null, r(\"PolicyDObject\"), \"\")\n    );\n  }\n\n  public static policyDToJson(\n    value: any[] | boolean | number | number | null | PolicyDObject | string\n  ): string {\n    return JSON.stringify(\n      uncast(value, u(a(\"any\"), true, 3.14, 0, null, r(\"PolicyDObject\"), \"\")),\n      null,\n      2\n    );\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = \"\"): never {\n  if (key) {\n    throw Error(\n      `Invalid value for key \"${key}\". Expected type ${JSON.stringify(\n        typ\n      )} but got ${JSON.stringify(val)}`\n    );\n  }\n  throw Error(\n    `Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`\n  );\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = \"\"): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map((el) => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(\n    props: { [k: string]: any },\n    additional: any,\n    val: any\n  ): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach((key) => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key)\n        ? val[key]\n        : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n    });\n    Object.getOwnPropertyNames(val).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val);\n  }\n  if (typ === false) return invalidValue(typ, val);\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\")\n      ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\")\n      ? transformArray(typ.arrayItems, val)\n      : typ.hasOwnProperty(\"props\")\n      ? transformObject(getProps(typ), typ.additional, val)\n      : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction m(additional: any) {\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nconst typeMap: any = {\n  PolicyDObject: o(\n    [{ json: \"policy\", js: \"policy\", typ: u(undefined, r(\"Policy\")) }],\n    \"any\"\n  ),\n  Policy: o(\n    [\n      { json: \"antivirus\", js: \"antivirus\", typ: u(undefined, r(\"Antivirus\")) },\n      {\n        json: \"applicationLanguage\",\n        js: \"applicationLanguage\",\n        typ: u(undefined, r(\"ApplicationLanguage\")),\n      },\n      {\n        json: \"behavioral-enforcement\",\n        js: \"behavioral-enforcement\",\n        typ: u(undefined, r(\"BehavioralEnforcement\")),\n      },\n      {\n        json: \"blocking-settings\",\n        js: \"blocking-settings\",\n        typ: u(undefined, r(\"BlockingSettings\")),\n      },\n      {\n        json: \"bot-defense\",\n        js: \"bot-defense\",\n        typ: u(undefined, r(\"BotDefense\")),\n      },\n      {\n        json: \"brute-force-attack-preventions\",\n        js: \"brute-force-attack-preventions\",\n        typ: u(undefined, a(r(\"BruteForceAttackPrevention\"))),\n      },\n      {\n        json: \"caseInsensitive\",\n        js: \"caseInsensitive\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"character-sets\",\n        js: \"character-sets\",\n        typ: u(undefined, a(r(\"CharacterSet\"))),\n      },\n      {\n        json: \"cookie-settings\",\n        js: \"cookie-settings\",\n        typ: u(undefined, r(\"CookieSettings\")),\n      },\n      { json: \"cookies\", js: \"cookies\", typ: u(undefined, a(r(\"Cooky\"))) },\n      {\n        json: \"csrf-protection\",\n        js: \"csrf-protection\",\n        typ: u(undefined, r(\"CSRFProtection\")),\n      },\n      {\n        json: \"csrf-urls\",\n        js: \"csrf-urls\",\n        typ: u(undefined, a(r(\"CSRFURL\"))),\n      },\n      {\n        json: \"data-guard\",\n        js: \"data-guard\",\n        typ: u(undefined, r(\"DataGuard\")),\n      },\n      {\n        json: \"database-protection\",\n        js: \"database-protection\",\n        typ: u(undefined, r(\"DatabaseProtection\")),\n      },\n      {\n        json: \"deception-response-pages\",\n        js: \"deception-response-pages\",\n        typ: u(undefined, a(r(\"DeceptionResponsePage\"))),\n      },\n      {\n        json: \"deception-settings\",\n        js: \"deception-settings\",\n        typ: u(undefined, r(\"DeceptionSettings\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disabled-action-items\",\n        js: \"disabled-action-items\",\n        typ: u(undefined, a(r(\"DisabledActionItem\"))),\n      },\n      {\n        json: \"disallowed-geolocations\",\n        js: \"disallowed-geolocations\",\n        typ: u(undefined, a(r(\"DisallowedGeolocation\"))),\n      },\n      {\n        json: \"enablePassiveMode\",\n        js: \"enablePassiveMode\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enforcementMode\",\n        js: \"enforcementMode\",\n        typ: u(undefined, r(\"PolicyEnforcementMode\")),\n      },\n      {\n        json: \"filetypes\",\n        js: \"filetypes\",\n        typ: u(undefined, a(r(\"Filetype\"))),\n      },\n      { json: \"fullPath\", js: \"fullPath\", typ: u(undefined, \"\") },\n      { json: \"general\", js: \"general\", typ: u(undefined, r(\"General\")) },\n      {\n        json: \"gwt-profiles\",\n        js: \"gwt-profiles\",\n        typ: u(undefined, a(r(\"GWTProfile\"))),\n      },\n      {\n        json: \"header-settings\",\n        js: \"header-settings\",\n        typ: u(undefined, r(\"HeaderSettings\")),\n      },\n      { json: \"headers\", js: \"headers\", typ: u(undefined, a(r(\"Header\"))) },\n      {\n        json: \"host-names\",\n        js: \"host-names\",\n        typ: u(undefined, a(r(\"HostName\"))),\n      },\n      {\n        json: \"ip-intelligence\",\n        js: \"ip-intelligence\",\n        typ: u(undefined, r(\"IPIntelligence\")),\n      },\n      {\n        json: \"json-profiles\",\n        js: \"json-profiles\",\n        typ: u(undefined, a(r(\"JSONProfile\"))),\n      },\n      {\n        json: \"json-validation-files\",\n        js: \"json-validation-files\",\n        typ: u(undefined, a(r(\"JSONValidationFile\"))),\n      },\n      {\n        json: \"login-enforcement\",\n        js: \"login-enforcement\",\n        typ: u(undefined, r(\"LoginEnforcement\")),\n      },\n      {\n        json: \"login-pages\",\n        js: \"login-pages\",\n        typ: u(undefined, a(r(\"LoginPage\"))),\n      },\n      {\n        json: \"methods\",\n        js: \"methods\",\n        typ: u(undefined, a(r(\"MethodElement\"))),\n      },\n      {\n        json: \"microservices\",\n        js: \"microservices\",\n        typ: u(undefined, a(r(\"Microservice\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"navigation-parameters\",\n        js: \"navigation-parameters\",\n        typ: u(undefined, a(r(\"NavigationParameter\"))),\n      },\n      {\n        json: \"open-api-files\",\n        js: \"open-api-files\",\n        typ: u(undefined, a(r(\"OpenAPIFile\"))),\n      },\n      {\n        json: \"parameters\",\n        js: \"parameters\",\n        typ: u(undefined, a(r(\"ParameterElement\"))),\n      },\n      {\n        json: \"plain-text-profiles\",\n        js: \"plain-text-profiles\",\n        typ: u(undefined, a(r(\"PlainTextProfile\"))),\n      },\n      {\n        json: \"policy-builder\",\n        js: \"policy-builder\",\n        typ: u(undefined, r(\"PolicyBuilder\")),\n      },\n      {\n        json: \"policy-builder-central-configuration\",\n        js: \"policy-builder-central-configuration\",\n        typ: u(undefined, r(\"PolicyBuilderCentralConfiguration\")),\n      },\n      {\n        json: \"policy-builder-cookie\",\n        js: \"policy-builder-cookie\",\n        typ: u(undefined, r(\"PolicyBuilderCookie\")),\n      },\n      {\n        json: \"policy-builder-filetype\",\n        js: \"policy-builder-filetype\",\n        typ: u(undefined, r(\"PolicyBuilderFiletype\")),\n      },\n      {\n        json: \"policy-builder-header\",\n        js: \"policy-builder-header\",\n        typ: u(undefined, r(\"PolicyBuilderHeader\")),\n      },\n      {\n        json: \"policy-builder-parameter\",\n        js: \"policy-builder-parameter\",\n        typ: u(undefined, r(\"PolicyBuilderParameter\")),\n      },\n      {\n        json: \"policy-builder-redirection-protection\",\n        js: \"policy-builder-redirection-protection\",\n        typ: u(undefined, r(\"PolicyBuilderRedirectionProtection\")),\n      },\n      {\n        json: \"policy-builder-server-technologies\",\n        js: \"policy-builder-server-technologies\",\n        typ: u(undefined, r(\"PolicyBuilderServerTechnologies\")),\n      },\n      {\n        json: \"policy-builder-sessions-and-logins\",\n        js: \"policy-builder-sessions-and-logins\",\n        typ: u(undefined, r(\"PolicyBuilderSessionsAndLogins\")),\n      },\n      {\n        json: \"policy-builder-url\",\n        js: \"policy-builder-url\",\n        typ: u(undefined, r(\"PolicyBuilderURL\")),\n      },\n      {\n        json: \"protocolIndependent\",\n        js: \"protocolIndependent\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"redirection-protection\",\n        js: \"redirection-protection\",\n        typ: u(undefined, r(\"RedirectionProtection\")),\n      },\n      {\n        json: \"redirection-protection-domains\",\n        js: \"redirection-protection-domains\",\n        typ: u(undefined, a(r(\"RedirectionProtectionDomain\"))),\n      },\n      {\n        json: \"request-loggers\",\n        js: \"request-loggers\",\n        typ: u(undefined, a(r(\"RequestLogger\"))),\n      },\n      {\n        json: \"response-pages\",\n        js: \"response-pages\",\n        typ: u(undefined, a(r(\"ResponsePage\"))),\n      },\n      {\n        json: \"sensitive-parameters\",\n        js: \"sensitive-parameters\",\n        typ: u(undefined, a(r(\"SensitiveParameter\"))),\n      },\n      {\n        json: \"server-technologies\",\n        js: \"server-technologies\",\n        typ: u(undefined, a(r(\"ServerTechnology\"))),\n      },\n      {\n        json: \"session-tracking\",\n        js: \"session-tracking\",\n        typ: u(undefined, r(\"SessionTracking\")),\n      },\n      {\n        json: \"session-tracking-statuses\",\n        js: \"session-tracking-statuses\",\n        typ: u(undefined, a(r(\"SessionTrackingStatus\"))),\n      },\n      {\n        json: \"signature-requirements\",\n        js: \"signature-requirements\",\n        typ: u(undefined, a(r(\"SignatureRequirement\"))),\n      },\n      {\n        json: \"signature-sets\",\n        js: \"signature-sets\",\n        typ: u(undefined, a(r(\"SignatureSet\"))),\n      },\n      {\n        json: \"signature-settings\",\n        js: \"signature-settings\",\n        typ: u(undefined, r(\"SignatureSettings\")),\n      },\n      {\n        json: \"signatures\",\n        js: \"signatures\",\n        typ: u(undefined, a(r(\"PolicySignature\"))),\n      },\n      { json: \"softwareVersion\", js: \"softwareVersion\", typ: u(undefined, \"\") },\n      { json: \"template\", js: \"template\", typ: r(\"Template\") },\n      {\n        json: \"threat-campaign-settings\",\n        js: \"threat-campaign-settings\",\n        typ: u(undefined, r(\"ThreatCampaignSettings\")),\n      },\n      {\n        json: \"threat-campaigns\",\n        js: \"threat-campaigns\",\n        typ: u(undefined, a(r(\"ThreatCampaign\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"PolicyType\")) },\n      { json: \"urls\", js: \"urls\", typ: u(undefined, a(r(\"URLElement\"))) },\n      { json: \"webhooks\", js: \"webhooks\", typ: u(undefined, a(r(\"Webhook\"))) },\n      {\n        json: \"websocket-urls\",\n        js: \"websocket-urls\",\n        typ: u(undefined, a(r(\"WebsocketURL\"))),\n      },\n      {\n        json: \"whitelist-ips\",\n        js: \"whitelist-ips\",\n        typ: u(undefined, a(r(\"WhitelistIP\"))),\n      },\n      {\n        json: \"xml-profiles\",\n        js: \"xml-profiles\",\n        typ: u(undefined, a(r(\"XMLProfile\"))),\n      },\n      {\n        json: \"xml-validation-files\",\n        js: \"xml-validation-files\",\n        typ: u(undefined, a(r(\"XMLValidationFileElement\"))),\n      },\n    ],\n    \"any\"\n  ),\n  Antivirus: o(\n    [\n      {\n        json: \"inspectHttpUploads\",\n        js: \"inspectHttpUploads\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  BehavioralEnforcement: o(\n    [\n      {\n        json: \"behavioralEnforcementViolations\",\n        js: \"behavioralEnforcementViolations\",\n        typ: u(undefined, a(r(\"BehavioralEnforcementViolation\"))),\n      },\n      {\n        json: \"enableBehavioralEnforcement\",\n        js: \"enableBehavioralEnforcement\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableBlockingCveSignatures\",\n        js: \"enableBlockingCveSignatures\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableBlockingHighAccuracySignatures\",\n        js: \"enableBlockingHighAccuracySignatures\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableBlockingLikelyMaliciousTransactions\",\n        js: \"enableBlockingLikelyMaliciousTransactions\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableBlockingSuspiciousTransactions\",\n        js: \"enableBlockingSuspiciousTransactions\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableBlockingViolations\",\n        js: \"enableBlockingViolations\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  BehavioralEnforcementViolation: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  BlockingSettings: o(\n    [\n      { json: \"evasions\", js: \"evasions\", typ: u(undefined, a(r(\"Evasion\"))) },\n      {\n        json: \"http-protocols\",\n        js: \"http-protocols\",\n        typ: u(undefined, a(r(\"HTTPProtocol\"))),\n      },\n      {\n        json: \"violations\",\n        js: \"violations\",\n        typ: u(undefined, a(r(\"BlockingSettingsViolation\"))),\n      },\n      {\n        json: \"web-services-securities\",\n        js: \"web-services-securities\",\n        typ: u(undefined, a(r(\"WebServicesSecurity\"))),\n      },\n    ],\n    \"any\"\n  ),\n  Evasion: o(\n    [\n      { json: \"description\", js: \"description\", typ: r(\"EvasionDescription\") },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      {\n        json: \"maxDecodingPasses\",\n        js: \"maxDecodingPasses\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  HTTPProtocol: o(\n    [\n      {\n        json: \"description\",\n        js: \"description\",\n        typ: r(\"HTTPProtocolDescription\"),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      { json: \"maxHeaders\", js: \"maxHeaders\", typ: u(undefined, 0) },\n      { json: \"maxParams\", js: \"maxParams\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  BlockingSettingsViolation: o(\n    [\n      { json: \"alarm\", js: \"alarm\", typ: u(undefined, true) },\n      { json: \"block\", js: \"block\", typ: u(undefined, true) },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  WebServicesSecurity: o(\n    [\n      {\n        json: \"description\",\n        js: \"description\",\n        typ: r(\"WebServicesSecurityDescription\"),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  BotDefense: o(\n    [\n      {\n        json: \"mitigations\",\n        js: \"mitigations\",\n        typ: u(undefined, r(\"Mitigations\")),\n      },\n      { json: \"settings\", js: \"settings\", typ: u(undefined, r(\"Settings\")) },\n    ],\n    \"any\"\n  ),\n  Mitigations: o(\n    [\n      { json: \"classes\", js: \"classes\", typ: u(undefined, a(r(\"Class\"))) },\n      {\n        json: \"signatures\",\n        js: \"signatures\",\n        typ: u(undefined, a(r(\"MitigationsSignature\"))),\n      },\n    ],\n    \"any\"\n  ),\n  Class: o(\n    [\n      { json: \"action\", js: \"action\", typ: u(undefined, r(\"ClassAction\")) },\n      { json: \"name\", js: \"name\", typ: r(\"ClassName\") },\n    ],\n    \"any\"\n  ),\n  MitigationsSignature: o(\n    [\n      { json: \"action\", js: \"action\", typ: u(undefined, r(\"ClassAction\")) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  Settings: o(\n    [{ json: \"isEnabled\", js: \"isEnabled\", typ: u(undefined, true) }],\n    \"any\"\n  ),\n  BruteForceAttackPrevention: o(\n    [\n      {\n        json: \"bruteForceProtectionForAllLoginPages\",\n        js: \"bruteForceProtectionForAllLoginPages\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"captchaBypassCriteria\",\n        js: \"captchaBypassCriteria\",\n        typ: u(undefined, r(\"CAPTCHABypassCriteria\")),\n      },\n      {\n        json: \"clientSideIntegrityBypassCriteria\",\n        js: \"clientSideIntegrityBypassCriteria\",\n        typ: u(undefined, r(\"ClientSideIntegrityBypassCriteria\")),\n      },\n      {\n        json: \"detectionCriteria\",\n        js: \"detectionCriteria\",\n        typ: u(undefined, r(\"DetectionCriteria\")),\n      },\n      {\n        json: \"leakedCredentialsCriteria\",\n        js: \"leakedCredentialsCriteria\",\n        typ: u(undefined, r(\"LeakedCredentialsCriteria\")),\n      },\n      {\n        json: \"loginAttemptsFromTheSameDeviceId\",\n        js: \"loginAttemptsFromTheSameDeviceId\",\n        typ: u(undefined, r(\"LoginAttemptsFromTheSameDeviceID\")),\n      },\n      {\n        json: \"loginAttemptsFromTheSameIp\",\n        js: \"loginAttemptsFromTheSameIp\",\n        typ: u(undefined, r(\"LoginAttemptsFromTheSameIP\")),\n      },\n      {\n        json: \"loginAttemptsFromTheSameUser\",\n        js: \"loginAttemptsFromTheSameUser\",\n        typ: u(undefined, r(\"LoginAttemptsFromTheSameUser\")),\n      },\n      {\n        json: \"measurementPeriod\",\n        js: \"measurementPeriod\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"preventionDuration\",\n        js: \"preventionDuration\",\n        typ: u(undefined, u(r(\"PreventionDurationEnum\"), 0)),\n      },\n      {\n        json: \"reEnableLoginAfter\",\n        js: \"reEnableLoginAfter\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"sourceBasedProtectionDetectionPeriod\",\n        js: \"sourceBasedProtectionDetectionPeriod\",\n        typ: u(undefined, 0),\n      },\n      { json: \"url\", js: \"url\", typ: r(\"BruteForceAttackPreventionURL\") },\n    ],\n    \"any\"\n  ),\n  CAPTCHABypassCriteria: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"CAPTCHABypassCriteriaAction\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"threshold\", js: \"threshold\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  ClientSideIntegrityBypassCriteria: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"ClientSideIntegrityBypassCriteriaAction\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"threshold\", js: \"threshold\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  DetectionCriteria: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"DetectionCriteriaAction\")),\n      },\n      {\n        json: \"credentialsStuffingMatchesReached\",\n        js: \"credentialsStuffingMatchesReached\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"detectCredentialsStuffingAttack\",\n        js: \"detectCredentialsStuffingAttack\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"detectDistributedBruteForceAttack\",\n        js: \"detectDistributedBruteForceAttack\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"failedLoginAttemptsRateReached\",\n        js: \"failedLoginAttemptsRateReached\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  LeakedCredentialsCriteria: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"LeakedCredentialsCriteriaAction\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  LoginAttemptsFromTheSameDeviceID: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"LoginAttemptsFromTheSameDeviceIDAction\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"threshold\", js: \"threshold\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  LoginAttemptsFromTheSameIP: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"LoginAttemptsFromTheSameDeviceIDAction\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"threshold\", js: \"threshold\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  LoginAttemptsFromTheSameUser: o(\n    [\n      {\n        json: \"action\",\n        js: \"action\",\n        typ: u(undefined, r(\"LoginAttemptsFromTheSameUserAction\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"threshold\", js: \"threshold\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  BruteForceAttackPreventionURL: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"PurpleDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"PurpleHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"PurpleMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"PurplePositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"FluffySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"PurpleURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  PurpleDynamicFlow: o(\n    [\n      { json: \"prefix\", js: \"prefix\", typ: \"\" },\n      { json: \"regexp\", js: \"regexp\", typ: \"\" },\n      { json: \"suffix\", js: \"suffix\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PurpleHtml5CrossOriginRequestsEnforcement: o(\n    [\n      {\n        json: \"allowCredentials\",\n        js: \"allowCredentials\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowOriginsEnforcementMode\",\n        js: \"allowOriginsEnforcementMode\",\n        typ: u(undefined, r(\"AllowOriginsEnforcementMode\")),\n      },\n      {\n        json: \"checkAllowedHeaders\",\n        js: \"checkAllowedHeaders\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkAllowedMethods\",\n        js: \"checkAllowedMethods\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkCredentials\",\n        js: \"checkCredentials\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkExposedHeaders\",\n        js: \"checkExposedHeaders\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMaximumAge\",\n        js: \"checkMaximumAge\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"crossDomainAllowedHeader\",\n        js: \"crossDomainAllowedHeader\",\n        typ: u(undefined, a(r(\"PurpleCrossDomainAllowedHeader\"))),\n      },\n      {\n        json: \"crossDomainAllowedMethod\",\n        js: \"crossDomainAllowedMethod\",\n        typ: u(undefined, a(r(\"PurpleCrossDomainAllowedMethod\"))),\n      },\n      {\n        json: \"crossDomainAllowedOrigin\",\n        js: \"crossDomainAllowedOrigin\",\n        typ: u(undefined, a(r(\"PurpleCrossDomainAllowedOrigin\"))),\n      },\n      {\n        json: \"crossDomainExposedHeader\",\n        js: \"crossDomainExposedHeader\",\n        typ: u(undefined, a(r(\"PurpleCrossDomainExposedHeader\"))),\n      },\n      {\n        json: \"enforcementMode\",\n        js: \"enforcementMode\",\n        typ: u(undefined, r(\"PurpleEnforcementMode\")),\n      },\n      { json: \"maximumAge\", js: \"maximumAge\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  PurpleCrossDomainAllowedHeader: o(\n    [{ json: \"allowedHeaderName\", js: \"allowedHeaderName\", typ: \"\" }],\n    \"any\"\n  ),\n  PurpleCrossDomainAllowedMethod: o(\n    [{ json: \"methodName\", js: \"methodName\", typ: \"\" }],\n    \"any\"\n  ),\n  PurpleCrossDomainAllowedOrigin: o(\n    [\n      {\n        json: \"includeSubDomains\",\n        js: \"includeSubDomains\",\n        typ: u(undefined, true),\n      },\n      { json: \"originName\", js: \"originName\", typ: \"\" },\n      { json: \"originPort\", js: \"originPort\", typ: u(r(\"OriginPortEnum\"), 0) },\n      {\n        json: \"originProtocol\",\n        js: \"originProtocol\",\n        typ: r(\"OriginProtocol\"),\n      },\n    ],\n    \"any\"\n  ),\n  PurpleCrossDomainExposedHeader: o(\n    [{ json: \"exposedHeaderName\", js: \"exposedHeaderName\", typ: \"\" }],\n    \"any\"\n  ),\n  PurpleMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PurpleMethodOverride: o(\n    [\n      { json: \"allowed\", js: \"allowed\", typ: u(undefined, true) },\n      { json: \"method\", js: \"method\", typ: r(\"MethodOverrideMethod\") },\n    ],\n    \"any\"\n  ),\n  PurpleURL: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"PurpleDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"PurpleHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"PurpleMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"PurplePositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"FluffySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"PurpleURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  PurpleParameter: o(\n    [\n      {\n        json: \"allowEmptyValue\",\n        js: \"allowEmptyValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowRepeatedParameterName\",\n        js: \"allowRepeatedParameterName\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"arraySerializationFormat\",\n        js: \"arraySerializationFormat\",\n        typ: u(undefined, r(\"ArraySerializationFormat\")),\n      },\n      {\n        json: \"arrayUniqueItemsCheck\",\n        js: \"arrayUniqueItemsCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMaxItemsInArray\",\n        js: \"checkMaxItemsInArray\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMaxValue\", js: \"checkMaxValue\", typ: u(undefined, true) },\n      {\n        json: \"checkMaxValueLength\",\n        js: \"checkMaxValueLength\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMetachars\", js: \"checkMetachars\", typ: u(undefined, true) },\n      {\n        json: \"checkMinItemsInArray\",\n        js: \"checkMinItemsInArray\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMinValue\", js: \"checkMinValue\", typ: u(undefined, true) },\n      {\n        json: \"checkMinValueLength\",\n        js: \"checkMinValueLength\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMultipleOfValue\",\n        js: \"checkMultipleOfValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"PurpleContentProfile\")),\n      },\n      { json: \"dataType\", js: \"dataType\", typ: u(undefined, r(\"DataType\")) },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableRegularExpression\",\n        js: \"enableRegularExpression\",\n        typ: u(undefined, true),\n      },\n      { json: \"exclusiveMax\", js: \"exclusiveMax\", typ: u(undefined, true) },\n      { json: \"exclusiveMin\", js: \"exclusiveMin\", typ: u(undefined, true) },\n      {\n        json: \"explodeObjectSerialization\",\n        js: \"explodeObjectSerialization\",\n        typ: u(undefined, true),\n      },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n      { json: \"isCookie\", js: \"isCookie\", typ: u(undefined, true) },\n      { json: \"isHeader\", js: \"isHeader\", typ: u(undefined, true) },\n      { json: \"level\", js: \"level\", typ: u(undefined, r(\"Level\")) },\n      { json: \"mandatory\", js: \"mandatory\", typ: u(undefined, true) },\n      { json: \"maximumLength\", js: \"maximumLength\", typ: u(undefined, 0) },\n      { json: \"maximumValue\", js: \"maximumValue\", typ: u(undefined, 3.14) },\n      { json: \"maxItemsInArray\", js: \"maxItemsInArray\", typ: u(undefined, 0) },\n      {\n        json: \"metacharsOnParameterValueCheck\",\n        js: \"metacharsOnParameterValueCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"minimumLength\", js: \"minimumLength\", typ: u(undefined, 0) },\n      { json: \"minimumValue\", js: \"minimumValue\", typ: u(undefined, 3.14) },\n      { json: \"minItemsInArray\", js: \"minItemsInArray\", typ: u(undefined, 0) },\n      { json: \"multipleOf\", js: \"multipleOf\", typ: u(undefined, 3.14) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"nameMetacharOverrides\",\n        js: \"nameMetacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleNameMetacharOverride\"))),\n      },\n      {\n        json: \"objectSerializationStyle\",\n        js: \"objectSerializationStyle\",\n        typ: u(undefined, r(\"ObjectSerializationStyle\")),\n      },\n      {\n        json: \"parameterEnumValues\",\n        js: \"parameterEnumValues\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"parameterLocation\",\n        js: \"parameterLocation\",\n        typ: u(undefined, r(\"ParameterLocation\")),\n      },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"regularExpression\",\n        js: \"regularExpression\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"sensitiveParameter\",\n        js: \"sensitiveParameter\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"PurpleSignatureOverride\"))),\n      },\n      { json: \"staticValues\", js: \"staticValues\", typ: u(undefined, a(\"\")) },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"url\", js: \"url\", typ: u(undefined, r(\"PurpleURL\")) },\n      {\n        json: \"valueMetacharOverrides\",\n        js: \"valueMetacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleValueMetacharOverride\"))),\n      },\n      { json: \"valueType\", js: \"valueType\", typ: u(undefined, r(\"ValueType\")) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  PurplePositionalParameter: o(\n    [\n      { json: \"parameter\", js: \"parameter\", typ: r(\"PurpleParameter\") },\n      { json: \"urlSegmentIndex\", js: \"urlSegmentIndex\", typ: 0 },\n    ],\n    \"any\"\n  ),\n  FluffySignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  PurpleURLContentProfile: o(\n    [\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"TentacledContentProfile\")),\n      },\n      { json: \"headerName\", js: \"headerName\", typ: \"\" },\n      {\n        json: \"headerOrder\",\n        js: \"headerOrder\",\n        typ: u(undefined, u(r(\"HeaderOrderEnum\"), 0)),\n      },\n      { json: \"headerValue\", js: \"headerValue\", typ: \"\" },\n      {\n        json: \"type\",\n        js: \"type\",\n        typ: u(undefined, r(\"URLContentProfileType\")),\n      },\n    ],\n    \"any\"\n  ),\n  TentacledContentProfile: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  PurpleContentProfile: o(\n    [\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"FluffyContentProfile\")),\n      },\n    ],\n    \"any\"\n  ),\n  FluffyContentProfile: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  PurpleNameMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PurpleSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  PurpleValueMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  CharacterSet: o(\n    [\n      {\n        json: \"characterSet\",\n        js: \"characterSet\",\n        typ: u(undefined, a(r(\"CharacterSetElement\"))),\n      },\n      {\n        json: \"characterSetType\",\n        js: \"characterSetType\",\n        typ: r(\"CharacterSetType\"),\n      },\n    ],\n    \"any\"\n  ),\n  CharacterSetElement: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  CookieSettings: o(\n    [\n      {\n        json: \"maximumCookieHeaderLength\",\n        js: \"maximumCookieHeaderLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n    ],\n    \"any\"\n  ),\n  Cooky: o(\n    [\n      {\n        json: \"accessibleOnlyThroughTheHttpProtocol\",\n        js: \"accessibleOnlyThroughTheHttpProtocol\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enforcementType\",\n        js: \"enforcementType\",\n        typ: u(undefined, r(\"EnforcementType\")),\n      },\n      {\n        json: \"insertSameSiteAttribute\",\n        js: \"insertSameSiteAttribute\",\n        typ: u(undefined, r(\"InsertSameSiteAttribute\")),\n      },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n      {\n        json: \"maskValueInLogs\",\n        js: \"maskValueInLogs\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"securedOverHttpsConnection\",\n        js: \"securedOverHttpsConnection\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"CookySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  CookySignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  CSRFProtection: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      {\n        json: \"expirationTimeInSeconds\",\n        js: \"expirationTimeInSeconds\",\n        typ: u(undefined, u(r(\"ExpirationTime\"), 0)),\n      },\n      { json: \"sslOnly\", js: \"sslOnly\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  CSRFURL: o(\n    [\n      {\n        json: \"enforcementAction\",\n        js: \"enforcementAction\",\n        typ: u(undefined, r(\"EnforcementAction\")),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"CSRFURLMethod\")) },\n      {\n        json: \"parametersList\",\n        js: \"parametersList\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"requiredParameters\",\n        js: \"requiredParameters\",\n        typ: u(undefined, r(\"RequiredParameters\")),\n      },\n      { json: \"url\", js: \"url\", typ: \"\" },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  DataGuard: o(\n    [\n      {\n        json: \"creditCardNumbers\",\n        js: \"creditCardNumbers\",\n        typ: u(undefined, true),\n      },\n      { json: \"customPatterns\", js: \"customPatterns\", typ: u(undefined, true) },\n      {\n        json: \"customPatternsList\",\n        js: \"customPatternsList\",\n        typ: u(undefined, a(\"\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      {\n        json: \"enforcementMode\",\n        js: \"enforcementMode\",\n        typ: u(undefined, r(\"DataGuardEnforcementMode\")),\n      },\n      {\n        json: \"enforcementUrls\",\n        js: \"enforcementUrls\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"exceptionPatterns\",\n        js: \"exceptionPatterns\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"exceptionPatternsList\",\n        js: \"exceptionPatternsList\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"fileContentDetection\",\n        js: \"fileContentDetection\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"fileContentDetectionFormats\",\n        js: \"fileContentDetectionFormats\",\n        typ: u(undefined, a(r(\"FileContentDetectionFormat\"))),\n      },\n      {\n        json: \"lastCcnDigitsToExpose\",\n        js: \"lastCcnDigitsToExpose\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"lastSsnDigitsToExpose\",\n        js: \"lastSsnDigitsToExpose\",\n        typ: u(undefined, 0),\n      },\n      { json: \"maskData\", js: \"maskData\", typ: u(undefined, true) },\n      {\n        json: \"usSocialSecurityNumbers\",\n        js: \"usSocialSecurityNumbers\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  FileContentDetectionFormat: o(\n    [\n      {\n        json: \"name\",\n        js: \"name\",\n        typ: u(undefined, r(\"FileContentDetectionFormatName\")),\n      },\n    ],\n    \"any\"\n  ),\n  DatabaseProtection: o(\n    [\n      {\n        json: \"databaseProtectionEnabled\",\n        js: \"databaseProtectionEnabled\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"userSource\",\n        js: \"userSource\",\n        typ: u(undefined, r(\"UserSource\")),\n      },\n    ],\n    \"any\"\n  ),\n  DeceptionResponsePage: o(\n    [\n      { json: \"responseBody\", js: \"responseBody\", typ: u(undefined, \"\") },\n      { json: \"responseHeaders\", js: \"responseHeaders\", typ: u(undefined, \"\") },\n      { json: \"responseStatusCode\", js: \"responseStatusCode\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  DeceptionSettings: o(\n    [\n      {\n        json: \"enableCustomResponses\",\n        js: \"enableCustomResponses\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableResponsePageByAttackType\",\n        js: \"enableResponsePageByAttackType\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"responseStatusCodes\",\n        js: \"responseStatusCodes\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"serverTechnologyName\",\n        js: \"serverTechnologyName\",\n        typ: u(undefined, \"\"),\n      },\n    ],\n    \"any\"\n  ),\n  DisabledActionItem: o(\n    [{ json: \"type\", js: \"type\", typ: r(\"DisabledActionItemType\") }],\n    \"any\"\n  ),\n  DisallowedGeolocation: o(\n    [\n      { json: \"countryCode\", js: \"countryCode\", typ: u(undefined, \"\") },\n      { json: \"countryName\", js: \"countryName\", typ: r(\"CountryName\") },\n    ],\n    \"any\"\n  ),\n  Filetype: o(\n    [\n      { json: \"allowed\", js: \"allowed\", typ: u(undefined, true) },\n      {\n        json: \"checkPostDataLength\",\n        js: \"checkPostDataLength\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkQueryStringLength\",\n        js: \"checkQueryStringLength\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkRequestLength\",\n        js: \"checkRequestLength\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkUrlLength\", js: \"checkUrlLength\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      { json: \"postDataLength\", js: \"postDataLength\", typ: u(undefined, 0) },\n      {\n        json: \"queryStringLength\",\n        js: \"queryStringLength\",\n        typ: u(undefined, 0),\n      },\n      { json: \"requestLength\", js: \"requestLength\", typ: u(undefined, 0) },\n      { json: \"responseCheck\", js: \"responseCheck\", typ: u(undefined, true) },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"urlLength\", js: \"urlLength\", typ: u(undefined, 0) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  General: o(\n    [\n      {\n        json: \"allowedResponseCodes\",\n        js: \"allowedResponseCodes\",\n        typ: u(undefined, a(0)),\n      },\n      {\n        json: \"customXffHeaders\",\n        js: \"customXffHeaders\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"dynamicSessionIdDescription\",\n        js: \"dynamicSessionIdDescription\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"dynamicSessionIdInUrl\",\n        js: \"dynamicSessionIdInUrl\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"enableEventCorrelation\",\n        js: \"enableEventCorrelation\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enforcementReadinessPeriod\",\n        js: \"enforcementReadinessPeriod\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"maskCreditCardNumbersInRequest\",\n        js: \"maskCreditCardNumbersInRequest\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"pathParameterHandling\",\n        js: \"pathParameterHandling\",\n        typ: u(undefined, r(\"PathParameterHandling\")),\n      },\n      {\n        json: \"triggerAsmIruleEvent\",\n        js: \"triggerAsmIruleEvent\",\n        typ: u(undefined, r(\"TriggerASMIruleEvent\")),\n      },\n      { json: \"trustXff\", js: \"trustXff\", typ: u(undefined, true) },\n      {\n        json: \"useDynamicSessionIdInUrl\",\n        js: \"useDynamicSessionIdInUrl\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  GWTProfile: o(\n    [\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"defenseAttributes\",\n        js: \"defenseAttributes\",\n        typ: u(undefined, r(\"GWTProfileDefenseAttributes\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"metacharElementCheck\",\n        js: \"metacharElementCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"GWTProfileMetacharOverride\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"GWTProfileSignatureOverride\"))),\n      },\n    ],\n    \"any\"\n  ),\n  GWTProfileDefenseAttributes: o(\n    [\n      {\n        json: \"maximumTotalLengthOfGWTData\",\n        js: \"maximumTotalLengthOfGWTData\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumValueLength\",\n        js: \"maximumValueLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"tolerateGWTParsingWarnings\",\n        js: \"tolerateGWTParsingWarnings\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  GWTProfileMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  GWTProfileSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  HeaderSettings: o(\n    [\n      {\n        json: \"maximumHttpHeaderLength\",\n        js: \"maximumHttpHeaderLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n    ],\n    \"any\"\n  ),\n  Header: o(\n    [\n      {\n        json: \"allowRepeatedOccurrences\",\n        js: \"allowRepeatedOccurrences\",\n        typ: u(undefined, true),\n      },\n      { json: \"base64Decoding\", js: \"base64Decoding\", typ: u(undefined, true) },\n      {\n        json: \"checkSignatures\",\n        js: \"checkSignatures\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"htmlNormalization\",\n        js: \"htmlNormalization\",\n        typ: u(undefined, true),\n      },\n      { json: \"mandatory\", js: \"mandatory\", typ: u(undefined, true) },\n      {\n        json: \"maskValueInLogs\",\n        js: \"maskValueInLogs\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"normalizationViolations\",\n        js: \"normalizationViolations\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"percentDecoding\",\n        js: \"percentDecoding\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"HeaderSignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlNormalization\",\n        js: \"urlNormalization\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  HeaderSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  HostName: o(\n    [\n      {\n        json: \"includeSubdomains\",\n        js: \"includeSubdomains\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  IPIntelligence: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      {\n        json: \"ipIntelligenceCategories\",\n        js: \"ipIntelligenceCategories\",\n        typ: u(undefined, a(r(\"IPIntelligenceCategory\"))),\n      },\n    ],\n    \"any\"\n  ),\n  IPIntelligenceCategory: o(\n    [\n      { json: \"alarm\", js: \"alarm\", typ: u(undefined, true) },\n      { json: \"block\", js: \"block\", typ: u(undefined, true) },\n      { json: \"category\", js: \"category\", typ: r(\"Category\") },\n      {\n        json: \"description\",\n        js: \"description\",\n        typ: u(undefined, r(\"IPIntelligenceCategoryDescription\")),\n      },\n    ],\n    \"any\"\n  ),\n  JSONProfile: o(\n    [\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"defenseAttributes\",\n        js: \"defenseAttributes\",\n        typ: u(undefined, r(\"JSONProfileDefenseAttributes\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"handleJsonValuesAsParameters\",\n        js: \"handleJsonValuesAsParameters\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"hasValidationFiles\",\n        js: \"hasValidationFiles\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharElementCheck\",\n        js: \"metacharElementCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"JSONProfileMetacharOverride\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"sensitiveData\",\n        js: \"sensitiveData\",\n        typ: u(undefined, a(r(\"JSONProfileSensitiveDatum\"))),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"JSONProfileSignatureOverride\"))),\n      },\n      {\n        json: \"validationFiles\",\n        js: \"validationFiles\",\n        typ: u(undefined, a(r(\"JSONProfileValidationFile\"))),\n      },\n    ],\n    \"any\"\n  ),\n  JSONProfileDefenseAttributes: o(\n    [\n      {\n        json: \"maximumArrayLength\",\n        js: \"maximumArrayLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumStructureDepth\",\n        js: \"maximumStructureDepth\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumTotalLengthOfJSONData\",\n        js: \"maximumTotalLengthOfJSONData\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumValueLength\",\n        js: \"maximumValueLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"tolerateJSONParsingWarnings\",\n        js: \"tolerateJSONParsingWarnings\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  JSONProfileMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  JSONProfileSensitiveDatum: o(\n    [{ json: \"parameterName\", js: \"parameterName\", typ: \"\" }],\n    \"any\"\n  ),\n  JSONProfileSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  JSONProfileValidationFile: o(\n    [\n      { json: \"importUrl\", js: \"importUrl\", typ: \"\" },\n      { json: \"isPrimary\", js: \"isPrimary\", typ: u(undefined, true) },\n      {\n        json: \"jsonValidationFile\",\n        js: \"jsonValidationFile\",\n        typ: r(\"PurpleJSONValidationFile\"),\n      },\n    ],\n    \"any\"\n  ),\n  PurpleJSONValidationFile: o(\n    [\n      { json: \"contents\", js: \"contents\", typ: \"\" },\n      { json: \"fileName\", js: \"fileName\", typ: \"\" },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  JSONValidationFile: o(\n    [\n      { json: \"contents\", js: \"contents\", typ: \"\" },\n      { json: \"fileName\", js: \"fileName\", typ: \"\" },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  LoginEnforcement: o(\n    [\n      {\n        json: \"authenticatedUrls\",\n        js: \"authenticatedUrls\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"expirationTimePeriod\",\n        js: \"expirationTimePeriod\",\n        typ: u(undefined, u(r(\"ExpirationTime\"), 0)),\n      },\n      {\n        json: \"logoutUrls\",\n        js: \"logoutUrls\",\n        typ: u(undefined, a(r(\"LogoutURL\"))),\n      },\n    ],\n    \"any\"\n  ),\n  LogoutURL: o(\n    [\n      { json: \"requestContains\", js: \"requestContains\", typ: u(undefined, \"\") },\n      { json: \"requestOmits\", js: \"requestOmits\", typ: u(undefined, \"\") },\n      { json: \"url\", js: \"url\", typ: r(\"LogoutURLURL\") },\n    ],\n    \"any\"\n  ),\n  LogoutURLURL: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"PurpleDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"PurpleHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"PurpleMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"PurplePositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"FluffySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"PurpleURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  LoginPage: o(\n    [\n      {\n        json: \"accessValidation\",\n        js: \"accessValidation\",\n        typ: u(undefined, r(\"LoginPageAccessValidation\")),\n      },\n      {\n        json: \"authenticationType\",\n        js: \"authenticationType\",\n        typ: u(undefined, r(\"AuthenticationType\")),\n      },\n      {\n        json: \"passwordParameterName\",\n        js: \"passwordParameterName\",\n        typ: u(undefined, \"\"),\n      },\n      { json: \"url\", js: \"url\", typ: r(\"LoginPageURL\") },\n      {\n        json: \"usernameParameterName\",\n        js: \"usernameParameterName\",\n        typ: u(undefined, \"\"),\n      },\n    ],\n    \"any\"\n  ),\n  LoginPageAccessValidation: o(\n    [\n      { json: \"cookieContains\", js: \"cookieContains\", typ: u(undefined, \"\") },\n      { json: \"headerContains\", js: \"headerContains\", typ: u(undefined, \"\") },\n      { json: \"headerOmits\", js: \"headerOmits\", typ: u(undefined, \"\") },\n      {\n        json: \"parameterContains\",\n        js: \"parameterContains\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"responseContains\",\n        js: \"responseContains\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"responseHttpStatus\",\n        js: \"responseHttpStatus\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"responseHttpStatusOmits\",\n        js: \"responseHttpStatusOmits\",\n        typ: u(undefined, a(\"\")),\n      },\n      { json: \"responseOmits\", js: \"responseOmits\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  LoginPageURL: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"PurpleDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"PurpleHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"PurpleMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"PurplePositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"FluffySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"PurpleURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  MethodElement: o(\n    [\n      {\n        json: \"actAsMethod\",\n        js: \"actAsMethod\",\n        typ: u(undefined, r(\"ActAsMethod\")),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  Microservice: o(\n    [\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"enforcementMode\",\n        js: \"enforcementMode\",\n        typ: u(undefined, r(\"MicroserviceEnforcementMode\")),\n      },\n      {\n        json: \"evasionOverrides\",\n        js: \"evasionOverrides\",\n        typ: u(undefined, a(r(\"EvasionOverride\"))),\n      },\n      { json: \"hostName\", js: \"hostName\", typ: \"\" },\n      {\n        json: \"hostNameType\",\n        js: \"hostNameType\",\n        typ: u(undefined, r(\"HostNameTypeEnum\")),\n      },\n      {\n        json: \"httpProtocolOverrides\",\n        js: \"httpProtocolOverrides\",\n        typ: u(undefined, a(r(\"HTTPProtocolOverride\"))),\n      },\n      { json: \"urlName\", js: \"urlName\", typ: \"\" },\n      {\n        json: \"urlType\",\n        js: \"urlType\",\n        typ: u(undefined, r(\"HostNameTypeEnum\")),\n      },\n      {\n        json: \"violationOverrides\",\n        js: \"violationOverrides\",\n        typ: u(undefined, a(r(\"ViolationOverride\"))),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n      {\n        json: \"wildcardUrlIncludesSlash\",\n        js: \"wildcardUrlIncludesSlash\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  EvasionOverride: o(\n    [\n      {\n        json: \"description\",\n        js: \"description\",\n        typ: u(undefined, r(\"EvasionDescription\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      {\n        json: \"maxDecodingPasses\",\n        js: \"maxDecodingPasses\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  HTTPProtocolOverride: o(\n    [\n      {\n        json: \"description\",\n        js: \"description\",\n        typ: u(undefined, r(\"HTTPProtocolDescription\")),\n      },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      { json: \"maxHeaders\", js: \"maxHeaders\", typ: u(undefined, 0) },\n      { json: \"maxParams\", js: \"maxParams\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  ViolationOverride: o(\n    [\n      { json: \"alarm\", js: \"alarm\", typ: u(undefined, true) },\n      { json: \"block\", js: \"block\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  NavigationParameter: o(\n    [\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"urlName\", js: \"urlName\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  OpenAPIFile: o([{ json: \"link\", js: \"link\", typ: \"\" }], \"any\"),\n  ParameterElement: o(\n    [\n      {\n        json: \"allowEmptyValue\",\n        js: \"allowEmptyValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowRepeatedParameterName\",\n        js: \"allowRepeatedParameterName\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"arraySerializationFormat\",\n        js: \"arraySerializationFormat\",\n        typ: u(undefined, r(\"ArraySerializationFormat\")),\n      },\n      {\n        json: \"arrayUniqueItemsCheck\",\n        js: \"arrayUniqueItemsCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMaxItemsInArray\",\n        js: \"checkMaxItemsInArray\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMaxValue\", js: \"checkMaxValue\", typ: u(undefined, true) },\n      {\n        json: \"checkMaxValueLength\",\n        js: \"checkMaxValueLength\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMetachars\", js: \"checkMetachars\", typ: u(undefined, true) },\n      {\n        json: \"checkMinItemsInArray\",\n        js: \"checkMinItemsInArray\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMinValue\", js: \"checkMinValue\", typ: u(undefined, true) },\n      {\n        json: \"checkMinValueLength\",\n        js: \"checkMinValueLength\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMultipleOfValue\",\n        js: \"checkMultipleOfValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"StickyContentProfile\")),\n      },\n      { json: \"dataType\", js: \"dataType\", typ: u(undefined, r(\"DataType\")) },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableRegularExpression\",\n        js: \"enableRegularExpression\",\n        typ: u(undefined, true),\n      },\n      { json: \"exclusiveMax\", js: \"exclusiveMax\", typ: u(undefined, true) },\n      { json: \"exclusiveMin\", js: \"exclusiveMin\", typ: u(undefined, true) },\n      {\n        json: \"explodeObjectSerialization\",\n        js: \"explodeObjectSerialization\",\n        typ: u(undefined, true),\n      },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n      { json: \"isCookie\", js: \"isCookie\", typ: u(undefined, true) },\n      { json: \"isHeader\", js: \"isHeader\", typ: u(undefined, true) },\n      { json: \"level\", js: \"level\", typ: u(undefined, r(\"Level\")) },\n      { json: \"mandatory\", js: \"mandatory\", typ: u(undefined, true) },\n      { json: \"maximumLength\", js: \"maximumLength\", typ: u(undefined, 0) },\n      { json: \"maximumValue\", js: \"maximumValue\", typ: u(undefined, 3.14) },\n      { json: \"maxItemsInArray\", js: \"maxItemsInArray\", typ: u(undefined, 0) },\n      {\n        json: \"metacharsOnParameterValueCheck\",\n        js: \"metacharsOnParameterValueCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"minimumLength\", js: \"minimumLength\", typ: u(undefined, 0) },\n      { json: \"minimumValue\", js: \"minimumValue\", typ: u(undefined, 3.14) },\n      { json: \"minItemsInArray\", js: \"minItemsInArray\", typ: u(undefined, 0) },\n      { json: \"multipleOf\", js: \"multipleOf\", typ: u(undefined, 3.14) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"nameMetacharOverrides\",\n        js: \"nameMetacharOverrides\",\n        typ: u(undefined, a(r(\"FluffyNameMetacharOverride\"))),\n      },\n      {\n        json: \"objectSerializationStyle\",\n        js: \"objectSerializationStyle\",\n        typ: u(undefined, r(\"ObjectSerializationStyle\")),\n      },\n      {\n        json: \"parameterEnumValues\",\n        js: \"parameterEnumValues\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"parameterLocation\",\n        js: \"parameterLocation\",\n        typ: u(undefined, r(\"ParameterLocation\")),\n      },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"regularExpression\",\n        js: \"regularExpression\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"sensitiveParameter\",\n        js: \"sensitiveParameter\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"TentacledSignatureOverride\"))),\n      },\n      { json: \"staticValues\", js: \"staticValues\", typ: u(undefined, a(\"\")) },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"url\", js: \"url\", typ: u(undefined, r(\"FluffyURL\")) },\n      {\n        json: \"valueMetacharOverrides\",\n        js: \"valueMetacharOverrides\",\n        typ: u(undefined, a(r(\"FluffyValueMetacharOverride\"))),\n      },\n      { json: \"valueType\", js: \"valueType\", typ: u(undefined, r(\"ValueType\")) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  StickyContentProfile: o(\n    [\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"IndigoContentProfile\")),\n      },\n    ],\n    \"any\"\n  ),\n  IndigoContentProfile: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  FluffyNameMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  TentacledSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  FluffyURL: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"PurpleDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"PurpleHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"PurpleMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"PurplePositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"FluffySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"PurpleURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  FluffyValueMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PlainTextProfile: o(\n    [\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"defenseAttributes\",\n        js: \"defenseAttributes\",\n        typ: u(undefined, r(\"PlainTextProfileDefenseAttributes\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"metacharElementCheck\",\n        js: \"metacharElementCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PlainTextProfileMetacharOverride\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"PlainTextProfileSignatureOverride\"))),\n      },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileDefenseAttributes: o(\n    [\n      {\n        json: \"maximumLineLength\",\n        js: \"maximumLineLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumTotalLength\",\n        js: \"maximumTotalLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"performPercentDecoding\",\n        js: \"performPercentDecoding\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  PolicyBuilder: o(\n    [\n      { json: \"autoApply\", js: \"autoApply\", typ: u(undefined, r(\"AutoApply\")) },\n      {\n        json: \"enableFullPolicyInspection\",\n        js: \"enableFullPolicyInspection\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableTrustedTrafficSiteChangeTracking\",\n        js: \"enableTrustedTrafficSiteChangeTracking\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableUntrustedTrafficSiteChangeTracking\",\n        js: \"enableUntrustedTrafficSiteChangeTracking\",\n        typ: u(undefined, true),\n      },\n      { json: \"fullyAutomatic\", js: \"fullyAutomatic\", typ: u(undefined, true) },\n      {\n        json: \"inactiveEntityInactivityDurationInDays\",\n        js: \"inactiveEntityInactivityDurationInDays\",\n        typ: u(undefined, 3.14),\n      },\n      {\n        json: \"learnFromResponses\",\n        js: \"learnFromResponses\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"learnInactiveEntities\",\n        js: \"learnInactiveEntities\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"learningMode\",\n        js: \"learningMode\",\n        typ: u(undefined, r(\"LearningMode\")),\n      },\n      {\n        json: \"learnOnlyFromNonBotTraffic\",\n        js: \"learnOnlyFromNonBotTraffic\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"responseStatusCodes\",\n        js: \"responseStatusCodes\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"trafficTighten\",\n        js: \"trafficTighten\",\n        typ: u(undefined, r(\"TrafficTighten\")),\n      },\n      { json: \"trustAllIps\", js: \"trustAllIps\", typ: u(undefined, true) },\n      {\n        json: \"trustedTrafficLoosen\",\n        js: \"trustedTrafficLoosen\",\n        typ: u(undefined, r(\"TrustedTrafficLoosen\")),\n      },\n      {\n        json: \"trustedTrafficSiteChangeTracking\",\n        js: \"trustedTrafficSiteChangeTracking\",\n        typ: u(undefined, r(\"TrustedTrafficSiteChangeTracking\")),\n      },\n      {\n        json: \"untrustedTrafficLoosen\",\n        js: \"untrustedTrafficLoosen\",\n        typ: u(undefined, r(\"UntrustedTrafficLoosen\")),\n      },\n      {\n        json: \"untrustedTrafficSiteChangeTracking\",\n        js: \"untrustedTrafficSiteChangeTracking\",\n        typ: u(undefined, r(\"UntrustedTrafficSiteChangeTracking\")),\n      },\n    ],\n    \"any\"\n  ),\n  AutoApply: o(\n    [\n      {\n        json: \"applyAtAllTimes\",\n        js: \"applyAtAllTimes\",\n        typ: u(undefined, true),\n      },\n      { json: \"applyOnAllDays\", js: \"applyOnAllDays\", typ: u(undefined, true) },\n      { json: \"applyOnFridays\", js: \"applyOnFridays\", typ: u(undefined, true) },\n      { json: \"applyOnMondays\", js: \"applyOnMondays\", typ: u(undefined, true) },\n      {\n        json: \"applyOnSaturdays\",\n        js: \"applyOnSaturdays\",\n        typ: u(undefined, true),\n      },\n      { json: \"applyOnSundays\", js: \"applyOnSundays\", typ: u(undefined, true) },\n      {\n        json: \"applyOnThursdays\",\n        js: \"applyOnThursdays\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"applyOnTuesdays\",\n        js: \"applyOnTuesdays\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"applyOnWednesdays\",\n        js: \"applyOnWednesdays\",\n        typ: u(undefined, true),\n      },\n      { json: \"endTime\", js: \"endTime\", typ: u(undefined, \"\") },\n      { json: \"frequency\", js: \"frequency\", typ: u(undefined, r(\"Frequency\")) },\n      { json: \"startTime\", js: \"startTime\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  TrafficTighten: o(\n    [\n      {\n        json: \"maxModificationSuggestionScore\",\n        js: \"maxModificationSuggestionScore\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"minDaysBetweenSamples\",\n        js: \"minDaysBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n      { json: \"totalRequests\", js: \"totalRequests\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  TrustedTrafficLoosen: o(\n    [\n      {\n        json: \"differentSources\",\n        js: \"differentSources\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"maxDaysBetweenSamples\",\n        js: \"maxDaysBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n      {\n        json: \"minHoursBetweenSamples\",\n        js: \"minHoursBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n    ],\n    \"any\"\n  ),\n  TrustedTrafficSiteChangeTracking: o(\n    [\n      {\n        json: \"differentSources\",\n        js: \"differentSources\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"maxDaysBetweenSamples\",\n        js: \"maxDaysBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n      {\n        json: \"minMinutesBetweenSamples\",\n        js: \"minMinutesBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n    ],\n    \"any\"\n  ),\n  UntrustedTrafficLoosen: o(\n    [\n      {\n        json: \"differentSources\",\n        js: \"differentSources\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"maxDaysBetweenSamples\",\n        js: \"maxDaysBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n      {\n        json: \"minHoursBetweenSamples\",\n        js: \"minHoursBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n    ],\n    \"any\"\n  ),\n  UntrustedTrafficSiteChangeTracking: o(\n    [\n      {\n        json: \"differentSources\",\n        js: \"differentSources\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"maxDaysBetweenSamples\",\n        js: \"maxDaysBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n      {\n        json: \"minMinutesBetweenSamples\",\n        js: \"minMinutesBetweenSamples\",\n        typ: u(undefined, 3.14),\n      },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderCentralConfiguration: o(\n    [\n      {\n        json: \"buildingMode\",\n        js: \"buildingMode\",\n        typ: u(undefined, r(\"Mode\")),\n      },\n      {\n        json: \"centralPbAddresses\",\n        js: \"centralPbAddresses\",\n        typ: u(undefined, a(r(\"CentralPbAddress\"))),\n      },\n      {\n        json: \"eventCorrelationMode\",\n        js: \"eventCorrelationMode\",\n        typ: u(undefined, r(\"Mode\")),\n      },\n    ],\n    \"any\"\n  ),\n  CentralPbAddress: o(\n    [\n      { json: \"hostName\", js: \"hostName\", typ: u(undefined, \"\") },\n      { json: \"ipAddress\", js: \"ipAddress\", typ: \"\" },\n      { json: \"order\", js: \"order\", typ: u(undefined, 0) },\n      { json: \"port\", js: \"port\", typ: 0 },\n      {\n        json: \"verifyCertificate\",\n        js: \"verifyCertificate\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderCookie: o(\n    [\n      {\n        json: \"collapseCookieOccurrences\",\n        js: \"collapseCookieOccurrences\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"collapseCookiesIntoOneEntity\",\n        js: \"collapseCookiesIntoOneEntity\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enforceUnmodifiedCookies\",\n        js: \"enforceUnmodifiedCookies\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"learnExplicitCookies\",\n        js: \"learnExplicitCookies\",\n        typ: u(undefined, r(\"LearnExplicitCookies\")),\n      },\n      { json: \"maximumCookies\", js: \"maximumCookies\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderFiletype: o(\n    [\n      {\n        json: \"learnExplicitFiletypes\",\n        js: \"learnExplicitFiletypes\",\n        typ: u(undefined, r(\"LearnExplicit\")),\n      },\n      {\n        json: \"maximumFileTypes\",\n        js: \"maximumFileTypes\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderHeader: o(\n    [\n      { json: \"maximumHosts\", js: \"maximumHosts\", typ: u(undefined, 0) },\n      { json: \"validHostNames\", js: \"validHostNames\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderParameter: o(\n    [\n      {\n        json: \"classifyParameters\",\n        js: \"classifyParameters\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"collapseParameterOccurrences\",\n        js: \"collapseParameterOccurrences\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"collapseParametersIntoOneEntity\",\n        js: \"collapseParametersIntoOneEntity\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicParameters\",\n        js: \"dynamicParameters\",\n        typ: u(undefined, r(\"DynamicParameters\")),\n      },\n      {\n        json: \"learnExplicitParameters\",\n        js: \"learnExplicitParameters\",\n        typ: u(undefined, r(\"LearnExplicit\")),\n      },\n      {\n        json: \"maximumParameters\",\n        js: \"maximumParameters\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"parameterLearningLevel\",\n        js: \"parameterLearningLevel\",\n        typ: u(undefined, r(\"ParameterLearningLevel\")),\n      },\n      {\n        json: \"parametersIntegerValue\",\n        js: \"parametersIntegerValue\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  DynamicParameters: o(\n    [\n      {\n        json: \"allHiddenFields\",\n        js: \"allHiddenFields\",\n        typ: u(undefined, true),\n      },\n      { json: \"formParameters\", js: \"formParameters\", typ: u(undefined, true) },\n      { json: \"linkParameters\", js: \"linkParameters\", typ: u(undefined, true) },\n      { json: \"uniqueValueSets\", js: \"uniqueValueSets\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderRedirectionProtection: o(\n    [\n      {\n        json: \"learnExplicitRedirectionDomains\",\n        js: \"learnExplicitRedirectionDomains\",\n        typ: u(undefined, r(\"LearnExplicitRedirectionDomains\")),\n      },\n      {\n        json: \"maximumRedirectionDomains\",\n        js: \"maximumRedirectionDomains\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderServerTechnologies: o(\n    [\n      {\n        json: \"enableServerTechnologiesDetection\",\n        js: \"enableServerTechnologiesDetection\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  PolicyBuilderSessionsAndLogins: o(\n    [{ json: \"learnLoginPage\", js: \"learnLoginPage\", typ: u(undefined, true) }],\n    \"any\"\n  ),\n  PolicyBuilderURL: o(\n    [\n      { json: \"classifyUrls\", js: \"classifyUrls\", typ: u(undefined, true) },\n      {\n        json: \"classifyWebsocketUrls\",\n        js: \"classifyWebsocketUrls\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"collapseUrlDepth\",\n        js: \"collapseUrlDepth\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"collapseUrlOccurrences\",\n        js: \"collapseUrlOccurrences\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"collapseUrlsIntoOneEntity\",\n        js: \"collapseUrlsIntoOneEntity\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"learnExplicitUrls\",\n        js: \"learnExplicitUrls\",\n        typ: u(undefined, r(\"LearnExplicit\")),\n      },\n      {\n        json: \"learnExplicitWebsocketUrls\",\n        js: \"learnExplicitWebsocketUrls\",\n        typ: u(undefined, r(\"LearnExplicitWebsocketUrls\")),\n      },\n      {\n        json: \"learnMethodsOnUrls\",\n        js: \"learnMethodsOnUrls\",\n        typ: u(undefined, true),\n      },\n      { json: \"maximumUrls\", js: \"maximumUrls\", typ: u(undefined, 0) },\n      {\n        json: \"maximumWebsocketUrls\",\n        js: \"maximumWebsocketUrls\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"wildcardUrlFiletypes\",\n        js: \"wildcardUrlFiletypes\",\n        typ: u(undefined, a(\"\")),\n      },\n    ],\n    \"any\"\n  ),\n  RedirectionProtection: o(\n    [\n      {\n        json: \"redirectionDomains\",\n        js: \"redirectionDomains\",\n        typ: u(undefined, a(r(\"RedirectionDomain\"))),\n      },\n      {\n        json: \"redirectionProtectionEnabled\",\n        js: \"redirectionProtectionEnabled\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  RedirectionDomain: o(\n    [\n      { json: \"domainName\", js: \"domainName\", typ: \"\" },\n      {\n        json: \"includeSubdomains\",\n        js: \"includeSubdomains\",\n        typ: u(undefined, true),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  RedirectionProtectionDomain: o(\n    [\n      { json: \"domainName\", js: \"domainName\", typ: \"\" },\n      {\n        json: \"includeSubdomains\",\n        js: \"includeSubdomains\",\n        typ: u(undefined, true),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  RequestLogger: o(\n    [\n      { json: \"destination\", js: \"destination\", typ: u(undefined, \"\") },\n      {\n        json: \"filter\",\n        js: \"filter\",\n        typ: u(undefined, a(r(\"FilterElement\"))),\n      },\n      { json: \"formatString\", js: \"formatString\", typ: u(undefined, \"\") },\n      {\n        json: \"formatType\",\n        js: \"formatType\",\n        typ: u(undefined, r(\"FormatType\")),\n      },\n      { json: \"maxMessageSize\", js: \"maxMessageSize\", typ: u(undefined, 0) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  FilterElement: o(\n    [\n      { json: \"field\", js: \"field\", typ: r(\"Field\") },\n      { json: \"values\", js: \"values\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  ResponsePage: o(\n    [\n      {\n        json: \"ajaxActionType\",\n        js: \"ajaxActionType\",\n        typ: u(undefined, r(\"AjaxActionType\")),\n      },\n      {\n        json: \"ajaxCustomContent\",\n        js: \"ajaxCustomContent\",\n        typ: u(undefined, \"\"),\n      },\n      { json: \"ajaxEnabled\", js: \"ajaxEnabled\", typ: u(undefined, true) },\n      {\n        json: \"ajaxPopupMessage\",\n        js: \"ajaxPopupMessage\",\n        typ: u(undefined, \"\"),\n      },\n      { json: \"ajaxRedirectUrl\", js: \"ajaxRedirectUrl\", typ: u(undefined, \"\") },\n      {\n        json: \"responseActionType\",\n        js: \"responseActionType\",\n        typ: u(undefined, r(\"ResponseActionType\")),\n      },\n      { json: \"responseContent\", js: \"responseContent\", typ: u(undefined, \"\") },\n      { json: \"responseHeader\", js: \"responseHeader\", typ: u(undefined, \"\") },\n      {\n        json: \"responsePageType\",\n        js: \"responsePageType\",\n        typ: r(\"ResponsePageType\"),\n      },\n      {\n        json: \"responseRedirectUrl\",\n        js: \"responseRedirectUrl\",\n        typ: u(undefined, \"\"),\n      },\n    ],\n    \"any\"\n  ),\n  SensitiveParameter: o([{ json: \"name\", js: \"name\", typ: \"\" }], \"any\"),\n  ServerTechnology: o(\n    [\n      {\n        json: \"serverTechnologyName\",\n        js: \"serverTechnologyName\",\n        typ: u(undefined, \"\"),\n      },\n    ],\n    \"any\"\n  ),\n  SessionTracking: o(\n    [\n      { json: \"blockAll\", js: \"blockAll\", typ: u(undefined, r(\"BlockAll\")) },\n      {\n        json: \"delayBlocking\",\n        js: \"delayBlocking\",\n        typ: u(undefined, r(\"DelayBlocking\")),\n      },\n      {\n        json: \"logAllRequests\",\n        js: \"logAllRequests\",\n        typ: u(undefined, r(\"LogAllRequests\")),\n      },\n      {\n        json: \"sessionTrackingConfiguration\",\n        js: \"sessionTrackingConfiguration\",\n        typ: u(undefined, r(\"SessionTrackingConfiguration\")),\n      },\n      {\n        json: \"violationDetectionActions\",\n        js: \"violationDetectionActions\",\n        typ: u(undefined, r(\"ViolationDetectionActions\")),\n      },\n    ],\n    \"any\"\n  ),\n  BlockAll: o(\n    [\n      {\n        json: \"checkDeviceIdThreshold\",\n        js: \"checkDeviceIdThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkIpThreshold\",\n        js: \"checkIpThreshold\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkPeriod\", js: \"checkPeriod\", typ: u(undefined, true) },\n      {\n        json: \"checkSessionThreshold\",\n        js: \"checkSessionThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkUsernameThreshold\",\n        js: \"checkUsernameThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"deviceIdThreshold\",\n        js: \"deviceIdThreshold\",\n        typ: u(undefined, 0),\n      },\n      { json: \"ipThreshold\", js: \"ipThreshold\", typ: u(undefined, 0) },\n      { json: \"period\", js: \"period\", typ: u(undefined, 0) },\n      {\n        json: \"sessionThreshold\",\n        js: \"sessionThreshold\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"urlBlockingMode\",\n        js: \"urlBlockingMode\",\n        typ: u(undefined, r(\"URLBlockingMode\")),\n      },\n      {\n        json: \"usernameThreshold\",\n        js: \"usernameThreshold\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  DelayBlocking: o(\n    [\n      {\n        json: \"checkDeviceIdThreshold\",\n        js: \"checkDeviceIdThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkIpThreshold\",\n        js: \"checkIpThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkSessionThreshold\",\n        js: \"checkSessionThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkUsernameThreshold\",\n        js: \"checkUsernameThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"deviceIdThreshold\",\n        js: \"deviceIdThreshold\",\n        typ: u(undefined, 0),\n      },\n      { json: \"ipThreshold\", js: \"ipThreshold\", typ: u(undefined, 0) },\n      { json: \"period\", js: \"period\", typ: u(undefined, 0) },\n      {\n        json: \"sessionThreshold\",\n        js: \"sessionThreshold\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"usernameThreshold\",\n        js: \"usernameThreshold\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"violations\",\n        js: \"violations\",\n        typ: u(undefined, a(r(\"DelayBlockingViolation\"))),\n      },\n    ],\n    \"any\"\n  ),\n  DelayBlockingViolation: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  LogAllRequests: o(\n    [\n      {\n        json: \"checkDeviceIdThreshold\",\n        js: \"checkDeviceIdThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkIpThreshold\",\n        js: \"checkIpThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkSessionThreshold\",\n        js: \"checkSessionThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkUsernameThreshold\",\n        js: \"checkUsernameThreshold\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"deviceIdThreshold\",\n        js: \"deviceIdThreshold\",\n        typ: u(undefined, 0),\n      },\n      { json: \"ipThreshold\", js: \"ipThreshold\", typ: u(undefined, 0) },\n      { json: \"period\", js: \"period\", typ: u(undefined, 0) },\n      {\n        json: \"sessionThreshold\",\n        js: \"sessionThreshold\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"usernameThreshold\",\n        js: \"usernameThreshold\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  SessionTrackingConfiguration: o(\n    [\n      {\n        json: \"detectUsernameFromLoginPages\",\n        js: \"detectUsernameFromLoginPages\",\n        typ: u(undefined, a(r(\"DetectUsernameFromLoginPage\"))),\n      },\n      {\n        json: \"enableSessionAwareness\",\n        js: \"enableSessionAwareness\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableTrackingSessionHijackingByDeviceId\",\n        js: \"enableTrackingSessionHijackingByDeviceId\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"userNameSource\",\n        js: \"userNameSource\",\n        typ: u(undefined, r(\"UserNameSource\")),\n      },\n    ],\n    \"any\"\n  ),\n  DetectUsernameFromLoginPage: o(\n    [{ json: \"loginPage\", js: \"loginPage\", typ: r(\"LoginPageObject\") }],\n    \"any\"\n  ),\n  LoginPageObject: o(\n    [\n      {\n        json: \"accessValidation\",\n        js: \"accessValidation\",\n        typ: u(undefined, r(\"LoginPageAccessValidationObject\")),\n      },\n      {\n        json: \"authenticationType\",\n        js: \"authenticationType\",\n        typ: u(undefined, r(\"AuthenticationType\")),\n      },\n      {\n        json: \"passwordParameterName\",\n        js: \"passwordParameterName\",\n        typ: u(undefined, \"\"),\n      },\n      { json: \"url\", js: \"url\", typ: r(\"LoginPageURLObject\") },\n      {\n        json: \"usernameParameterName\",\n        js: \"usernameParameterName\",\n        typ: u(undefined, \"\"),\n      },\n    ],\n    \"any\"\n  ),\n  LoginPageAccessValidationObject: o(\n    [\n      { json: \"cookieContains\", js: \"cookieContains\", typ: u(undefined, \"\") },\n      { json: \"headerContains\", js: \"headerContains\", typ: u(undefined, \"\") },\n      { json: \"headerOmits\", js: \"headerOmits\", typ: u(undefined, \"\") },\n      {\n        json: \"parameterContains\",\n        js: \"parameterContains\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"responseContains\",\n        js: \"responseContains\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"responseHttpStatus\",\n        js: \"responseHttpStatus\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"responseHttpStatusOmits\",\n        js: \"responseHttpStatusOmits\",\n        typ: u(undefined, a(\"\")),\n      },\n      { json: \"responseOmits\", js: \"responseOmits\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  LoginPageURLObject: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"PurpleDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"PurpleHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"PurpleMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"PurplePositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"FluffySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"PurpleURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  ViolationDetectionActions: o(\n    [\n      {\n        json: \"trackViolationsAndPerformActions\",\n        js: \"trackViolationsAndPerformActions\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"violationDetectionPeriod\",\n        js: \"violationDetectionPeriod\",\n        typ: u(undefined, 0),\n      },\n    ],\n    \"any\"\n  ),\n  SessionTrackingStatus: o(\n    [\n      { json: \"action\", js: \"action\", typ: r(\"SessionTrackingStatusAction\") },\n      { json: \"createdDatetime\", js: \"createdDatetime\", typ: u(undefined, \"\") },\n      {\n        json: \"expirationDatetime\",\n        js: \"expirationDatetime\",\n        typ: u(undefined, r(\"ExpirationDatetime\")),\n      },\n      { json: \"scope\", js: \"scope\", typ: r(\"Scope\") },\n      { json: \"value\", js: \"value\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  SignatureRequirement: o(\n    [\n      {\n        json: \"maxRevisionDatetime\",\n        js: \"maxRevisionDatetime\",\n        typ: u(undefined, Date),\n      },\n      {\n        json: \"minRevisionDatetime\",\n        js: \"minRevisionDatetime\",\n        typ: u(undefined, Date),\n      },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  SignatureSet: o(\n    [\n      { json: \"alarm\", js: \"alarm\", typ: u(undefined, true) },\n      { json: \"block\", js: \"block\", typ: u(undefined, true) },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      {\n        json: \"signatureSet\",\n        js: \"signatureSet\",\n        typ: u(undefined, r(\"SignatureSetObject\")),\n      },\n    ],\n    \"any\"\n  ),\n  SignatureSetObject: o(\n    [\n      {\n        json: \"filter\",\n        js: \"filter\",\n        typ: u(undefined, r(\"SignatureSetFilter\")),\n      },\n      {\n        json: \"signatures\",\n        js: \"signatures\",\n        typ: u(undefined, a(r(\"SignatureSetSignature\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"SignatureSetType\")) },\n    ],\n    \"any\"\n  ),\n  SignatureSetFilter: o(\n    [\n      {\n        json: \"accuracyFilter\",\n        js: \"accuracyFilter\",\n        typ: u(undefined, r(\"Filter\")),\n      },\n      {\n        json: \"accuracyValue\",\n        js: \"accuracyValue\",\n        typ: u(undefined, r(\"Value\")),\n      },\n      { json: \"hasCve\", js: \"hasCve\", typ: u(undefined, r(\"HasCve\")) },\n      {\n        json: \"lastUpdatedFilter\",\n        js: \"lastUpdatedFilter\",\n        typ: u(undefined, r(\"LastUpdatedFilter\")),\n      },\n      {\n        json: \"lastUpdatedValue\",\n        js: \"lastUpdatedValue\",\n        typ: u(undefined, \"\"),\n      },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"riskFilter\", js: \"riskFilter\", typ: u(undefined, r(\"Filter\")) },\n      { json: \"riskValue\", js: \"riskValue\", typ: u(undefined, r(\"Value\")) },\n      {\n        json: \"signatureType\",\n        js: \"signatureType\",\n        typ: u(undefined, r(\"SignatureType\")),\n      },\n      { json: \"tagFilter\", js: \"tagFilter\", typ: u(undefined, r(\"TagFilter\")) },\n      { json: \"tagValue\", js: \"tagValue\", typ: u(undefined, \"\") },\n      {\n        json: \"userDefinedFilter\",\n        js: \"userDefinedFilter\",\n        typ: u(undefined, r(\"HasCve\")),\n      },\n    ],\n    \"any\"\n  ),\n  SignatureSetSignature: o(\n    [\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  SignatureSettings: o(\n    [\n      {\n        json: \"attackSignatureFalsePositiveMode\",\n        js: \"attackSignatureFalsePositiveMode\",\n        typ: u(undefined, r(\"AttackSignatureFalsePositiveMode\")),\n      },\n      {\n        json: \"minimumAccuracyForAutoAddedSignatures\",\n        js: \"minimumAccuracyForAutoAddedSignatures\",\n        typ: u(undefined, r(\"MinimumAccuracyForAutoAddedSignatures\")),\n      },\n      {\n        json: \"placeSignaturesInStaging\",\n        js: \"placeSignaturesInStaging\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"signatureStaging\",\n        js: \"signatureStaging\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  PolicySignature: o(\n    [\n      { json: \"alarm\", js: \"alarm\", typ: u(undefined, true) },\n      { json: \"block\", js: \"block\", typ: u(undefined, true) },\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"inPolicy\", js: \"inPolicy\", typ: u(undefined, r(\"InPolicy\")) },\n      {\n        json: \"isPriorRuleEnforced\",\n        js: \"isPriorRuleEnforced\",\n        typ: u(undefined, true),\n      },\n      { json: \"learn\", js: \"learn\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  Template: o([{ json: \"name\", js: \"name\", typ: \"\" }], \"any\"),\n  ThreatCampaignSettings: o(\n    [\n      {\n        json: \"threatCampaignEnforcementReadinessPeriod\",\n        js: \"threatCampaignEnforcementReadinessPeriod\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"threatCampaignStaging\",\n        js: \"threatCampaignStaging\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  ThreatCampaign: o(\n    [\n      { json: \"isEnabled\", js: \"isEnabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  URLElement: o(\n    [\n      {\n        json: \"allowRenderingInFrames\",\n        js: \"allowRenderingInFrames\",\n        typ: u(undefined, r(\"AllowRenderingInFrames\")),\n      },\n      {\n        json: \"allowRenderingInFramesOnlyFrom\",\n        js: \"allowRenderingInFramesOnlyFrom\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"canChangeDomainCookie\",\n        js: \"canChangeDomainCookie\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clickjackingProtection\",\n        js: \"clickjackingProtection\",\n        typ: u(undefined, true),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"dynamicFlows\",\n        js: \"dynamicFlows\",\n        typ: u(undefined, a(r(\"FluffyDynamicFlow\"))),\n      },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"FluffyHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"mandatoryBody\", js: \"mandatoryBody\", typ: u(undefined, true) },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"FluffyMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnUrlCheck\",\n        js: \"metacharsOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"method\", js: \"method\", typ: u(undefined, r(\"URLMethod\")) },\n      {\n        json: \"methodOverrides\",\n        js: \"methodOverrides\",\n        typ: u(undefined, a(r(\"FluffyMethodOverride\"))),\n      },\n      {\n        json: \"methodsOverrideOnUrlCheck\",\n        js: \"methodsOverrideOnUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"operationId\", js: \"operationId\", typ: u(undefined, \"\") },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"positionalParameters\",\n        js: \"positionalParameters\",\n        typ: u(undefined, a(r(\"FluffyPositionalParameter\"))),\n      },\n      { json: \"protocol\", js: \"protocol\", typ: u(undefined, r(\"URLProtocol\")) },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"StickySignatureOverride\"))),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"urlContentProfiles\",\n        js: \"urlContentProfiles\",\n        typ: u(undefined, a(r(\"FluffyURLContentProfile\"))),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  FluffyDynamicFlow: o(\n    [\n      { json: \"prefix\", js: \"prefix\", typ: \"\" },\n      { json: \"regexp\", js: \"regexp\", typ: \"\" },\n      { json: \"suffix\", js: \"suffix\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  FluffyHtml5CrossOriginRequestsEnforcement: o(\n    [\n      {\n        json: \"allowCredentials\",\n        js: \"allowCredentials\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowOriginsEnforcementMode\",\n        js: \"allowOriginsEnforcementMode\",\n        typ: u(undefined, r(\"AllowOriginsEnforcementMode\")),\n      },\n      {\n        json: \"checkAllowedHeaders\",\n        js: \"checkAllowedHeaders\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkAllowedMethods\",\n        js: \"checkAllowedMethods\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkCredentials\",\n        js: \"checkCredentials\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkExposedHeaders\",\n        js: \"checkExposedHeaders\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMaximumAge\",\n        js: \"checkMaximumAge\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"crossDomainAllowedHeader\",\n        js: \"crossDomainAllowedHeader\",\n        typ: u(undefined, a(r(\"FluffyCrossDomainAllowedHeader\"))),\n      },\n      {\n        json: \"crossDomainAllowedMethod\",\n        js: \"crossDomainAllowedMethod\",\n        typ: u(undefined, a(r(\"FluffyCrossDomainAllowedMethod\"))),\n      },\n      {\n        json: \"crossDomainAllowedOrigin\",\n        js: \"crossDomainAllowedOrigin\",\n        typ: u(undefined, a(r(\"FluffyCrossDomainAllowedOrigin\"))),\n      },\n      {\n        json: \"crossDomainExposedHeader\",\n        js: \"crossDomainExposedHeader\",\n        typ: u(undefined, a(r(\"FluffyCrossDomainExposedHeader\"))),\n      },\n      {\n        json: \"enforcementMode\",\n        js: \"enforcementMode\",\n        typ: u(undefined, r(\"PurpleEnforcementMode\")),\n      },\n      { json: \"maximumAge\", js: \"maximumAge\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  FluffyCrossDomainAllowedHeader: o(\n    [{ json: \"allowedHeaderName\", js: \"allowedHeaderName\", typ: \"\" }],\n    \"any\"\n  ),\n  FluffyCrossDomainAllowedMethod: o(\n    [{ json: \"methodName\", js: \"methodName\", typ: \"\" }],\n    \"any\"\n  ),\n  FluffyCrossDomainAllowedOrigin: o(\n    [\n      {\n        json: \"includeSubDomains\",\n        js: \"includeSubDomains\",\n        typ: u(undefined, true),\n      },\n      { json: \"originName\", js: \"originName\", typ: \"\" },\n      { json: \"originPort\", js: \"originPort\", typ: u(r(\"OriginPortEnum\"), 0) },\n      {\n        json: \"originProtocol\",\n        js: \"originProtocol\",\n        typ: r(\"OriginProtocol\"),\n      },\n    ],\n    \"any\"\n  ),\n  FluffyCrossDomainExposedHeader: o(\n    [{ json: \"exposedHeaderName\", js: \"exposedHeaderName\", typ: \"\" }],\n    \"any\"\n  ),\n  FluffyMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  FluffyMethodOverride: o(\n    [\n      { json: \"allowed\", js: \"allowed\", typ: u(undefined, true) },\n      { json: \"method\", js: \"method\", typ: r(\"MethodOverrideMethod\") },\n    ],\n    \"any\"\n  ),\n  FluffyPositionalParameter: o(\n    [\n      { json: \"parameter\", js: \"parameter\", typ: r(\"FluffyParameter\") },\n      { json: \"urlSegmentIndex\", js: \"urlSegmentIndex\", typ: 0 },\n    ],\n    \"any\"\n  ),\n  FluffyParameter: o(\n    [\n      {\n        json: \"allowEmptyValue\",\n        js: \"allowEmptyValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowRepeatedParameterName\",\n        js: \"allowRepeatedParameterName\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"arraySerializationFormat\",\n        js: \"arraySerializationFormat\",\n        typ: u(undefined, r(\"ArraySerializationFormat\")),\n      },\n      {\n        json: \"arrayUniqueItemsCheck\",\n        js: \"arrayUniqueItemsCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMaxItemsInArray\",\n        js: \"checkMaxItemsInArray\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMaxValue\", js: \"checkMaxValue\", typ: u(undefined, true) },\n      {\n        json: \"checkMaxValueLength\",\n        js: \"checkMaxValueLength\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMetachars\", js: \"checkMetachars\", typ: u(undefined, true) },\n      {\n        json: \"checkMinItemsInArray\",\n        js: \"checkMinItemsInArray\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkMinValue\", js: \"checkMinValue\", typ: u(undefined, true) },\n      {\n        json: \"checkMinValueLength\",\n        js: \"checkMinValueLength\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMultipleOfValue\",\n        js: \"checkMultipleOfValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"PurpleContentProfile\")),\n      },\n      { json: \"dataType\", js: \"dataType\", typ: u(undefined, r(\"DataType\")) },\n      {\n        json: \"disallowFileUploadOfExecutables\",\n        js: \"disallowFileUploadOfExecutables\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableRegularExpression\",\n        js: \"enableRegularExpression\",\n        typ: u(undefined, true),\n      },\n      { json: \"exclusiveMax\", js: \"exclusiveMax\", typ: u(undefined, true) },\n      { json: \"exclusiveMin\", js: \"exclusiveMin\", typ: u(undefined, true) },\n      {\n        json: \"explodeObjectSerialization\",\n        js: \"explodeObjectSerialization\",\n        typ: u(undefined, true),\n      },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n      { json: \"isCookie\", js: \"isCookie\", typ: u(undefined, true) },\n      { json: \"isHeader\", js: \"isHeader\", typ: u(undefined, true) },\n      { json: \"level\", js: \"level\", typ: u(undefined, r(\"Level\")) },\n      { json: \"mandatory\", js: \"mandatory\", typ: u(undefined, true) },\n      { json: \"maximumLength\", js: \"maximumLength\", typ: u(undefined, 0) },\n      { json: \"maximumValue\", js: \"maximumValue\", typ: u(undefined, 3.14) },\n      { json: \"maxItemsInArray\", js: \"maxItemsInArray\", typ: u(undefined, 0) },\n      {\n        json: \"metacharsOnParameterValueCheck\",\n        js: \"metacharsOnParameterValueCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"minimumLength\", js: \"minimumLength\", typ: u(undefined, 0) },\n      { json: \"minimumValue\", js: \"minimumValue\", typ: u(undefined, 3.14) },\n      { json: \"minItemsInArray\", js: \"minItemsInArray\", typ: u(undefined, 0) },\n      { json: \"multipleOf\", js: \"multipleOf\", typ: u(undefined, 3.14) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"nameMetacharOverrides\",\n        js: \"nameMetacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleNameMetacharOverride\"))),\n      },\n      {\n        json: \"objectSerializationStyle\",\n        js: \"objectSerializationStyle\",\n        typ: u(undefined, r(\"ObjectSerializationStyle\")),\n      },\n      {\n        json: \"parameterEnumValues\",\n        js: \"parameterEnumValues\",\n        typ: u(undefined, a(\"\")),\n      },\n      {\n        json: \"parameterLocation\",\n        js: \"parameterLocation\",\n        typ: u(undefined, r(\"ParameterLocation\")),\n      },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"regularExpression\",\n        js: \"regularExpression\",\n        typ: u(undefined, \"\"),\n      },\n      {\n        json: \"sensitiveParameter\",\n        js: \"sensitiveParameter\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"PurpleSignatureOverride\"))),\n      },\n      { json: \"staticValues\", js: \"staticValues\", typ: u(undefined, a(\"\")) },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      { json: \"url\", js: \"url\", typ: u(undefined, r(\"PurpleURL\")) },\n      {\n        json: \"valueMetacharOverrides\",\n        js: \"valueMetacharOverrides\",\n        typ: u(undefined, a(r(\"PurpleValueMetacharOverride\"))),\n      },\n      { json: \"valueType\", js: \"valueType\", typ: u(undefined, r(\"ValueType\")) },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  StickySignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  FluffyURLContentProfile: o(\n    [\n      {\n        json: \"contentProfile\",\n        js: \"contentProfile\",\n        typ: u(undefined, r(\"IndecentContentProfile\")),\n      },\n      { json: \"headerName\", js: \"headerName\", typ: \"\" },\n      {\n        json: \"headerOrder\",\n        js: \"headerOrder\",\n        typ: u(undefined, u(r(\"HeaderOrderEnum\"), 0)),\n      },\n      { json: \"headerValue\", js: \"headerValue\", typ: \"\" },\n      {\n        json: \"type\",\n        js: \"type\",\n        typ: u(undefined, r(\"URLContentProfileType\")),\n      },\n    ],\n    \"any\"\n  ),\n  IndecentContentProfile: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  Webhook: o(\n    [\n      { json: \"body\", js: \"body\", typ: u(undefined, \"\") },\n      { json: \"contentType\", js: \"contentType\", typ: u(undefined, \"\") },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"triggerEvent\",\n        js: \"triggerEvent\",\n        typ: u(undefined, r(\"TriggerEvent\")),\n      },\n      { json: \"url\", js: \"url\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  WebsocketURL: o(\n    [\n      {\n        json: \"allowBinaryMessage\",\n        js: \"allowBinaryMessage\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowJsonMessage\",\n        js: \"allowJsonMessage\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowTextMessage\",\n        js: \"allowTextMessage\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"binaryMessageMaxSize\",\n        js: \"binaryMessageMaxSize\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"checkBinaryMessageMaxSize\",\n        js: \"checkBinaryMessageMaxSize\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMessageFrameMaxCount\",\n        js: \"checkMessageFrameMaxCount\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"checkMessageFrameMaxSize\",\n        js: \"checkMessageFrameMaxSize\",\n        typ: u(undefined, true),\n      },\n      { json: \"checkPayload\", js: \"checkPayload\", typ: u(undefined, true) },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      { json: \"extension\", js: \"extension\", typ: u(undefined, r(\"Extension\")) },\n      {\n        json: \"html5CrossOriginRequestsEnforcement\",\n        js: \"html5CrossOriginRequestsEnforcement\",\n        typ: u(undefined, r(\"WebsocketURLHtml5CrossOriginRequestsEnforcement\")),\n      },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      {\n        json: \"jsonProfile\",\n        js: \"jsonProfile\",\n        typ: u(undefined, r(\"JSONProfileObject\")),\n      },\n      {\n        json: \"messageFrameMaxCount\",\n        js: \"messageFrameMaxCount\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"messageFrameMaxSize\",\n        js: \"messageFrameMaxSize\",\n        typ: u(undefined, 0),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"WebsocketURLMetacharOverride\"))),\n      },\n      {\n        json: \"metacharsOnWebsocketUrlCheck\",\n        js: \"metacharsOnWebsocketUrlCheck\",\n        typ: u(undefined, true),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"performStaging\", js: \"performStaging\", typ: u(undefined, true) },\n      {\n        json: \"plainTextProfile\",\n        js: \"plainTextProfile\",\n        typ: u(undefined, r(\"PlainTextProfileObject\")),\n      },\n      {\n        json: \"protocol\",\n        js: \"protocol\",\n        typ: u(undefined, r(\"WebsocketURLProtocol\")),\n      },\n      { json: \"type\", js: \"type\", typ: u(undefined, r(\"HostNameTypeEnum\")) },\n      {\n        json: \"unsupportedExtensions\",\n        js: \"unsupportedExtensions\",\n        typ: u(undefined, r(\"Extension\")),\n      },\n      {\n        json: \"wildcardIncludesSlash\",\n        js: \"wildcardIncludesSlash\",\n        typ: u(undefined, true),\n      },\n      { json: \"wildcardOrder\", js: \"wildcardOrder\", typ: u(undefined, 0) },\n    ],\n    \"any\"\n  ),\n  WebsocketURLHtml5CrossOriginRequestsEnforcement: o(\n    [\n      {\n        json: \"crossDomainAllowedOrigin\",\n        js: \"crossDomainAllowedOrigin\",\n        typ: u(undefined, a(r(\"TentacledCrossDomainAllowedOrigin\"))),\n      },\n      {\n        json: \"enforcementMode\",\n        js: \"enforcementMode\",\n        typ: u(undefined, r(\"FluffyEnforcementMode\")),\n      },\n    ],\n    \"any\"\n  ),\n  TentacledCrossDomainAllowedOrigin: o(\n    [\n      {\n        json: \"includeSubDomains\",\n        js: \"includeSubDomains\",\n        typ: u(undefined, true),\n      },\n      { json: \"originName\", js: \"originName\", typ: \"\" },\n      { json: \"originPort\", js: \"originPort\", typ: u(r(\"OriginPortEnum\"), 0) },\n      {\n        json: \"originProtocol\",\n        js: \"originProtocol\",\n        typ: r(\"OriginProtocol\"),\n      },\n    ],\n    \"any\"\n  ),\n  JSONProfileObject: o(\n    [\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"defenseAttributes\",\n        js: \"defenseAttributes\",\n        typ: u(undefined, r(\"JSONProfileDefenseAttributesObject\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"handleJsonValuesAsParameters\",\n        js: \"handleJsonValuesAsParameters\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"hasValidationFiles\",\n        js: \"hasValidationFiles\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharElementCheck\",\n        js: \"metacharElementCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"JSONProfileMetacharOverrideObject\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"sensitiveData\",\n        js: \"sensitiveData\",\n        typ: u(undefined, a(r(\"JSONProfileSensitiveDatumObject\"))),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"JSONProfileSignatureOverrideObject\"))),\n      },\n      {\n        json: \"validationFiles\",\n        js: \"validationFiles\",\n        typ: u(undefined, a(r(\"JSONProfileValidationFileObject\"))),\n      },\n    ],\n    \"any\"\n  ),\n  JSONProfileDefenseAttributesObject: o(\n    [\n      {\n        json: \"maximumArrayLength\",\n        js: \"maximumArrayLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumStructureDepth\",\n        js: \"maximumStructureDepth\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumTotalLengthOfJSONData\",\n        js: \"maximumTotalLengthOfJSONData\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumValueLength\",\n        js: \"maximumValueLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"tolerateJSONParsingWarnings\",\n        js: \"tolerateJSONParsingWarnings\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  JSONProfileMetacharOverrideObject: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  JSONProfileSensitiveDatumObject: o(\n    [{ json: \"parameterName\", js: \"parameterName\", typ: \"\" }],\n    \"any\"\n  ),\n  JSONProfileSignatureOverrideObject: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  JSONProfileValidationFileObject: o(\n    [\n      { json: \"importUrl\", js: \"importUrl\", typ: \"\" },\n      { json: \"isPrimary\", js: \"isPrimary\", typ: u(undefined, true) },\n      {\n        json: \"jsonValidationFile\",\n        js: \"jsonValidationFile\",\n        typ: r(\"FluffyJSONValidationFile\"),\n      },\n    ],\n    \"any\"\n  ),\n  FluffyJSONValidationFile: o(\n    [\n      { json: \"contents\", js: \"contents\", typ: \"\" },\n      { json: \"fileName\", js: \"fileName\", typ: \"\" },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  WebsocketURLMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileObject: o(\n    [\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"defenseAttributes\",\n        js: \"defenseAttributes\",\n        typ: u(undefined, r(\"PlainTextProfileDefenseAttributesObject\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"metacharElementCheck\",\n        js: \"metacharElementCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"PlainTextProfileMetacharOverrideObject\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"PlainTextProfileSignatureOverrideObject\"))),\n      },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileDefenseAttributesObject: o(\n    [\n      {\n        json: \"maximumLineLength\",\n        js: \"maximumLineLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumTotalLength\",\n        js: \"maximumTotalLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"performPercentDecoding\",\n        js: \"performPercentDecoding\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileMetacharOverrideObject: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  PlainTextProfileSignatureOverrideObject: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  WhitelistIP: o(\n    [\n      {\n        json: \"blockRequests\",\n        js: \"blockRequests\",\n        typ: u(undefined, r(\"BlockRequests\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      {\n        json: \"ignoreAnomalies\",\n        js: \"ignoreAnomalies\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"ignoreIpReputation\",\n        js: \"ignoreIpReputation\",\n        typ: u(undefined, true),\n      },\n      { json: \"ipAddress\", js: \"ipAddress\", typ: \"\" },\n      { json: \"ipMask\", js: \"ipMask\", typ: \"\" },\n      {\n        json: \"neverLearnRequests\",\n        js: \"neverLearnRequests\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"neverLogRequests\",\n        js: \"neverLogRequests\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"trustedByPolicyBuilder\",\n        js: \"trustedByPolicyBuilder\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  XMLProfile: o(\n    [\n      {\n        json: \"attachmentsInSoapMessages\",\n        js: \"attachmentsInSoapMessages\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"attackSignaturesCheck\",\n        js: \"attackSignaturesCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"defenseAttributes\",\n        js: \"defenseAttributes\",\n        typ: u(undefined, r(\"XMLProfileDefenseAttributes\")),\n      },\n      { json: \"description\", js: \"description\", typ: u(undefined, \"\") },\n      { json: \"enableWss\", js: \"enableWss\", typ: u(undefined, true) },\n      {\n        json: \"followSchemaLinks\",\n        js: \"followSchemaLinks\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"inspectSoapAttachments\",\n        js: \"inspectSoapAttachments\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharAttributeCheck\",\n        js: \"metacharAttributeCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharElementCheck\",\n        js: \"metacharElementCheck\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"metacharOverrides\",\n        js: \"metacharOverrides\",\n        typ: u(undefined, a(r(\"XMLProfileMetacharOverride\"))),\n      },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      {\n        json: \"sensitiveData\",\n        js: \"sensitiveData\",\n        typ: u(undefined, a(r(\"XMLProfileSensitiveDatum\"))),\n      },\n      {\n        json: \"signatureOverrides\",\n        js: \"signatureOverrides\",\n        typ: u(undefined, a(r(\"XMLProfileSignatureOverride\"))),\n      },\n      {\n        json: \"soapMethods\",\n        js: \"soapMethods\",\n        typ: u(undefined, a(r(\"SoapMethod\"))),\n      },\n      {\n        json: \"useXmlResponsePage\",\n        js: \"useXmlResponsePage\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"validationFiles\",\n        js: \"validationFiles\",\n        typ: u(undefined, a(r(\"XMLProfileValidationFile\"))),\n      },\n      {\n        json: \"validationSoapActionHeader\",\n        js: \"validationSoapActionHeader\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"wssConfiguration\",\n        js: \"wssConfiguration\",\n        typ: u(undefined, r(\"WssConfiguration\")),\n      },\n    ],\n    \"any\"\n  ),\n  XMLProfileDefenseAttributes: o(\n    [\n      { json: \"allowCDATA\", js: \"allowCDATA\", typ: u(undefined, true) },\n      { json: \"allowDTDs\", js: \"allowDTDs\", typ: u(undefined, true) },\n      {\n        json: \"allowExternalReferences\",\n        js: \"allowExternalReferences\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"allowProcessingInstructions\",\n        js: \"allowProcessingInstructions\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"maximumAttributesPerElement\",\n        js: \"maximumAttributesPerElement\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumAttributeValueLength\",\n        js: \"maximumAttributeValueLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumChildrenPerElement\",\n        js: \"maximumChildrenPerElement\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumDocumentDepth\",\n        js: \"maximumDocumentDepth\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumDocumentSize\",\n        js: \"maximumDocumentSize\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumElements\",\n        js: \"maximumElements\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumNameLength\",\n        js: \"maximumNameLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumNamespaceLength\",\n        js: \"maximumNamespaceLength\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"maximumNSDeclarations\",\n        js: \"maximumNSDeclarations\",\n        typ: u(undefined, u(r(\"MaximumCookieHeaderLengthEnum\"), 0)),\n      },\n      {\n        json: \"tolerateCloseTagShorthand\",\n        js: \"tolerateCloseTagShorthand\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"tolerateLeadingWhiteSpace\",\n        js: \"tolerateLeadingWhiteSpace\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"tolerateNumericNames\",\n        js: \"tolerateNumericNames\",\n        typ: u(undefined, true),\n      },\n    ],\n    \"any\"\n  ),\n  XMLProfileMetacharOverride: o(\n    [\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"metachar\", js: \"metachar\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  XMLProfileSensitiveDatum: o(\n    [\n      { json: \"namespace\", js: \"namespace\", typ: \"\" },\n      { json: \"paramName\", js: \"paramName\", typ: \"\" },\n      { json: \"paramType\", js: \"paramType\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  XMLProfileSignatureOverride: o(\n    [\n      { json: \"enabled\", js: \"enabled\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      { json: \"signatureId\", js: \"signatureId\", typ: u(undefined, 0) },\n      { json: \"tag\", js: \"tag\", typ: u(undefined, \"\") },\n    ],\n    \"any\"\n  ),\n  SoapMethod: o(\n    [\n      { json: \"action\", js: \"action\", typ: u(undefined, \"\") },\n      { json: \"isAllowed\", js: \"isAllowed\", typ: u(undefined, true) },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"namespace\", js: \"namespace\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  XMLProfileValidationFile: o(\n    [\n      { json: \"importUrl\", js: \"importUrl\", typ: \"\" },\n      { json: \"isPrimary\", js: \"isPrimary\", typ: u(undefined, true) },\n      {\n        json: \"xmlValidationFile\",\n        js: \"xmlValidationFile\",\n        typ: r(\"XMLValidationFile\"),\n      },\n    ],\n    \"any\"\n  ),\n  XMLValidationFile: o(\n    [\n      { json: \"contents\", js: \"contents\", typ: \"\" },\n      { json: \"fileName\", js: \"fileName\", typ: \"\" },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  WssConfiguration: o(\n    [\n      { json: \"addTimestamp\", js: \"addTimestamp\", typ: u(undefined, true) },\n      {\n        json: \"applyActionToDefinedRequestElements\",\n        js: \"applyActionToDefinedRequestElements\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"applyActionToDefinedResponseElements\",\n        js: \"applyActionToDefinedResponseElements\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"applyActionToEntireResponseBodyValue\",\n        js: \"applyActionToEntireResponseBodyValue\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"clientCertificates\",\n        js: \"clientCertificates\",\n        typ: u(undefined, a(r(\"ClientCertificate\"))),\n      },\n      { json: \"decryptAll\", js: \"decryptAll\", typ: u(undefined, true) },\n      { json: \"elements\", js: \"elements\", typ: u(undefined, a(r(\"Element\"))) },\n      {\n        json: \"enableRequestRole\",\n        js: \"enableRequestRole\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"enableResponseRole\",\n        js: \"enableResponseRole\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"encryptionAlgorithm\",\n        js: \"encryptionAlgorithm\",\n        typ: u(undefined, r(\"EncryptionAlgorithm\")),\n      },\n      {\n        json: \"enforceTimestampInRequest\",\n        js: \"enforceTimestampInRequest\",\n        typ: u(undefined, true),\n      },\n      {\n        json: \"keyTransportAlgorithm\",\n        js: \"keyTransportAlgorithm\",\n        typ: u(undefined, r(\"KeyTransportAlgorithm\")),\n      },\n      {\n        json: \"maxTimestampInterval\",\n        js: \"maxTimestampInterval\",\n        typ: u(undefined, 0),\n      },\n      { json: \"name\", js: \"name\", typ: u(undefined, \"\") },\n      {\n        json: \"namespaceMapping\",\n        js: \"namespaceMapping\",\n        typ: u(undefined, a(r(\"NamespaceMapping\"))),\n      },\n      {\n        json: \"responseAction\",\n        js: \"responseAction\",\n        typ: u(undefined, r(\"ResponseAction\")),\n      },\n      { json: \"roles\", js: \"roles\", typ: u(undefined, a(r(\"RoleElement\"))) },\n      {\n        json: \"signatureAlgorithm\",\n        js: \"signatureAlgorithm\",\n        typ: u(undefined, r(\"SignatureAlgorithm\")),\n      },\n      {\n        json: \"soapBodyInRequestMustBeSignedAndVerified\",\n        js: \"soapBodyInRequestMustBeSignedAndVerified\",\n        typ: u(undefined, true),\n      },\n      { json: \"verifyAll\", js: \"verifyAll\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  ClientCertificate: o(\n    [{ json: \"name\", js: \"name\", typ: u(undefined, \"\") }],\n    \"any\"\n  ),\n  Element: o(\n    [\n      { json: \"applyTo\", js: \"applyTo\", typ: r(\"ApplyTo\") },\n      {\n        json: \"encryptedPart\",\n        js: \"encryptedPart\",\n        typ: u(undefined, r(\"EncryptedPart\")),\n      },\n      { json: \"xPathName\", js: \"xPathName\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  NamespaceMapping: o(\n    [\n      { json: \"namespace\", js: \"namespace\", typ: u(undefined, \"\") },\n      { json: \"prefix\", js: \"prefix\", typ: \"\" },\n    ],\n    \"any\"\n  ),\n  RoleElement: o(\n    [\n      { json: \"applyTo\", js: \"applyTo\", typ: r(\"ApplyTo\") },\n      { json: \"role\", js: \"role\", typ: r(\"RoleEnum\") },\n    ],\n    \"any\"\n  ),\n  XMLValidationFileElement: o(\n    [\n      { json: \"contents\", js: \"contents\", typ: \"\" },\n      { json: \"fileName\", js: \"fileName\", typ: \"\" },\n      { json: \"isBase64\", js: \"isBase64\", typ: u(undefined, true) },\n    ],\n    \"any\"\n  ),\n  ApplicationLanguage: [\n    \"auto-detect\",\n    \"big5\",\n    \"euc-jp\",\n    \"euc-kr\",\n    \"gb18030\",\n    \"gb2312\",\n    \"gbk\",\n    \"iso-8859-1\",\n    \"iso-8859-10\",\n    \"iso-8859-13\",\n    \"iso-8859-15\",\n    \"iso-8859-16\",\n    \"iso-8859-2\",\n    \"iso-8859-3\",\n    \"iso-8859-4\",\n    \"iso-8859-5\",\n    \"iso-8859-6\",\n    \"iso-8859-7\",\n    \"iso-8859-8\",\n    \"iso-8859-9\",\n    \"koi8-r\",\n    \"shift_jis\",\n    \"utf-8\",\n    \"windows-1250\",\n    \"windows-1251\",\n    \"windows-1252\",\n    \"windows-1253\",\n    \"windows-1255\",\n    \"windows-1256\",\n    \"windows-1257\",\n    \"windows-874\",\n  ],\n  EvasionDescription: [\n    \"Apache whitespace\",\n    \"Bad unescape\",\n    \"Bare byte decoding\",\n    \"Directory traversals\",\n    \"IIS backslashes\",\n    \"IIS Unicode codepoints\",\n    \"Multiple decoding\",\n    \"%u decoding\",\n  ],\n  HTTPProtocolDescription: [\n    \"Bad HTTP version\",\n    \"Bad host header value\",\n    \"Bad multipart/form-data request parsing\",\n    \"Bad multipart parameters parsing\",\n    \"Body in GET or HEAD requests\",\n    \"CRLF characters before request start\",\n    \"Check maximum number of headers\",\n    \"Check maximum number of parameters\",\n    \"Chunked request with Content-Length header\",\n    \"Content length should be a positive number\",\n    \"Header name with no header value\",\n    \"High ASCII characters in headers\",\n    \"Host header contains IP address\",\n    \"Multiple host headers\",\n    \"No Host header in HTTP/1.1 request\",\n    \"Null in request\",\n    \"POST request with Content-Length: 0\",\n    \"Several Content-Length headers\",\n    \"Unescaped space in URL\",\n    \"Unparsable request content\",\n  ],\n  WebServicesSecurityDescription: [\n    \"Certificate Error\",\n    \"Certificate Expired\",\n    \"Decryption Error\",\n    \"Encryption Error\",\n    \"Expired Timestamp\",\n    \"Internal Error\",\n    \"Invalid Timestamp\",\n    \"Malformed Error\",\n    \"Missing Timestamp\",\n    \"Signing Error\",\n    \"Timestamp expiration is too far in the future\",\n    \"UnSigned Timestamp\",\n    \"Verification Error\",\n  ],\n  ClassAction: [\"alarm\", \"block\", \"detect\", \"ignore\"],\n  ClassName: [\"malicious\", \"trusted\", \"untrusted\"],\n  CAPTCHABypassCriteriaAction: [\n    \"alarm-and-blocking-page\",\n    \"alarm-and-drop\",\n    \"alarm-and-honeypot-page\",\n  ],\n  ClientSideIntegrityBypassCriteriaAction: [\"alarm-and-captcha\"],\n  DetectionCriteriaAction: [\n    \"alarm\",\n    \"alarm-and-captcha\",\n    \"alarm-and-client-side-integrity\",\n    \"alarm-and-client-side-integrity-captcha\",\n  ],\n  LeakedCredentialsCriteriaAction: [\n    \"alarm\",\n    \"alarm-and-blocking-page\",\n    \"alarm-and-honeypot-page\",\n    \"alarm-and-leaked-credentials-response-page\",\n  ],\n  LoginAttemptsFromTheSameDeviceIDAction: [\n    \"alarm\",\n    \"alarm-and-blocking-page\",\n    \"alarm-and-captcha\",\n    \"alarm-and-client-side-integrity\",\n    \"alarm-and-drop\",\n    \"alarm-and-honeypot-page\",\n  ],\n  LoginAttemptsFromTheSameUserAction: [\n    \"alarm\",\n    \"alarm-and-captcha\",\n    \"alarm-and-client-side-integrity\",\n  ],\n  PreventionDurationEnum: [\"90000\"],\n  AllowRenderingInFrames: [\"never\", \"only-from\", \"only-same\"],\n  AllowOriginsEnforcementMode: [\"replace-with\", \"unmodified\"],\n  OriginPortEnum: [\"all\"],\n  OriginProtocol: [\"http\", \"http/https\", \"https\"],\n  PurpleEnforcementMode: [\n    \"disabled\",\n    \"enforce\",\n    \"remove-all-headers\",\n    \"replace-headers\",\n  ],\n  URLMethod: [\n    \"ACL\",\n    \"BCOPY\",\n    \"BDELETE\",\n    \"BMOVE\",\n    \"BPROPFIND\",\n    \"BPROPPATCH\",\n    \"CHECKIN\",\n    \"CHECKOUT\",\n    \"CONNECT\",\n    \"COPY\",\n    \"DELETE\",\n    \"*\",\n    \"GET\",\n    \"HEAD\",\n    \"LINK\",\n    \"LOCK\",\n    \"MERGE\",\n    \"MKCOL\",\n    \"MKWORKSPACE\",\n    \"MOVE\",\n    \"NOTIFY\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"POLL\",\n    \"POST\",\n    \"PROPFIND\",\n    \"PROPPATCH\",\n    \"PUT\",\n    \"RPC_IN_DATA\",\n    \"RPC_OUT_DATA\",\n    \"REPORT\",\n    \"SEARCH\",\n    \"SUBSCRIBE\",\n    \"TRACE\",\n    \"TRACK\",\n    \"UNLINK\",\n    \"UNLOCK\",\n    \"UNSUBSCRIBE\",\n    \"VERSION_CONTROL\",\n    \"X-MS-ENUMATTS\",\n  ],\n  MethodOverrideMethod: [\n    \"ACL\",\n    \"BCOPY\",\n    \"BDELETE\",\n    \"BMOVE\",\n    \"BPROPFIND\",\n    \"BPROPPATCH\",\n    \"CHECKIN\",\n    \"CHECKOUT\",\n    \"CONNECT\",\n    \"COPY\",\n    \"DELETE\",\n    \"GET\",\n    \"HEAD\",\n    \"LINK\",\n    \"LOCK\",\n    \"MERGE\",\n    \"MKCOL\",\n    \"MKWORKSPACE\",\n    \"MOVE\",\n    \"NOTIFY\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"POLL\",\n    \"POST\",\n    \"PROPFIND\",\n    \"PROPPATCH\",\n    \"PUT\",\n    \"RPC_IN_DATA\",\n    \"RPC_OUT_DATA\",\n    \"REPORT\",\n    \"SEARCH\",\n    \"SUBSCRIBE\",\n    \"TRACE\",\n    \"TRACK\",\n    \"UNLINK\",\n    \"UNLOCK\",\n    \"UNSUBSCRIBE\",\n    \"VERSION_CONTROL\",\n    \"X-MS-ENUMATTS\",\n  ],\n  URLProtocol: [\"http\", \"https\"],\n  HostNameTypeEnum: [\"explicit\", \"wildcard\"],\n  HeaderOrderEnum: [\"default\"],\n  URLContentProfileType: [\n    \"apply-content-signatures\",\n    \"apply-value-and-content-signatures\",\n    \"disallow\",\n    \"do-nothing\",\n    \"form-data\",\n    \"gwt\",\n    \"json\",\n    \"xml\",\n  ],\n  ArraySerializationFormat: [\n    \"csv\",\n    \"form\",\n    \"label\",\n    \"matrix\",\n    \"multi\",\n    \"multipart\",\n    \"pipe\",\n    \"ssv\",\n    \"tsv\",\n  ],\n  DataType: [\n    \"alpha-numeric\",\n    \"binary\",\n    \"boolean\",\n    \"decimal\",\n    \"email\",\n    \"integer\",\n    \"none\",\n    \"phone\",\n  ],\n  Level: [\"flow\", \"global\", \"url\"],\n  ObjectSerializationStyle: [\n    \"deep-object\",\n    \"form\",\n    \"label\",\n    \"matrix\",\n    \"pipe-delimited\",\n    \"simple\",\n    \"space-delimited\",\n  ],\n  ParameterLocation: [\"any\", \"cookie\", \"form-data\", \"header\", \"path\", \"query\"],\n  ValueType: [\n    \"array\",\n    \"auto-detect\",\n    \"dynamic-content\",\n    \"dynamic-parameter-name\",\n    \"ignore\",\n    \"json\",\n    \"object\",\n    \"openapi-array\",\n    \"static-content\",\n    \"user-input\",\n    \"xml\",\n  ],\n  CharacterSetType: [\n    \"gwt-content\",\n    \"header\",\n    \"json-content\",\n    \"parameter-name\",\n    \"parameter-value\",\n    \"plain-text-content\",\n    \"url\",\n    \"xml-content\",\n  ],\n  MaximumCookieHeaderLengthEnum: [\"any\"],\n  EnforcementType: [\"allow\", \"enforce\"],\n  InsertSameSiteAttribute: [\"lax\", \"none\", \"none-value\", \"strict\"],\n  ExpirationTime: [\"disabled\"],\n  EnforcementAction: [\"none\", \"verify-csrf-token\", \"verify-origin\"],\n  CSRFURLMethod: [\"any\", \"GET\", \"POST\"],\n  RequiredParameters: [\"at-least-one\", \"from-parameters-list\", \"ignore\"],\n  DataGuardEnforcementMode: [\"enforce-urls-in-list\", \"ignore-urls-in-list\"],\n  FileContentDetectionFormatName: [\n    \"ELF - binary file format for Unix\",\n    \"MS Office 2007 or later\",\n    \"MS Office 97-2003 document\",\n    \"Mach-O - Mach object file format - used in Mac OS X\",\n    \"PDF - Adobe Portable Document Format\",\n    \"PE - Portable Executable for Windows\",\n  ],\n  UserSource: [\"apm\", \"login-pages\"],\n  DisabledActionItemType: [\n    \"cookie-staging\",\n    \"default-parameter\",\n    \"filetype-staging\",\n    \"modified-policy\",\n    \"parameter-staging\",\n    \"policy-validation\",\n    \"scanner-vulnerabilities\",\n    \"signature-staging\",\n    \"threat-campaign-staging\",\n    \"transparent-policy\",\n    \"url-staging\",\n    \"websocket-url-staging\",\n  ],\n  CountryName: [\n    \"Afghanistan\",\n    \"Aland Islands\",\n    \"Albania\",\n    \"Algeria\",\n    \"American Samoa\",\n    \"Andorra\",\n    \"Angola\",\n    \"Anguilla\",\n    \"Anonymous Proxy\",\n    \"Antarctica\",\n    \"Antigua and Barbuda\",\n    \"Argentina\",\n    \"Armenia\",\n    \"Aruba\",\n    \"Australia\",\n    \"Austria\",\n    \"Azerbaijan\",\n    \"Bahamas\",\n    \"Bahrain\",\n    \"Bangladesh\",\n    \"Barbados\",\n    \"Belarus\",\n    \"Belgium\",\n    \"Belize\",\n    \"Benin\",\n    \"Bermuda\",\n    \"Bhutan\",\n    \"Bolivia\",\n    \"Bosnia and Herzegovina\",\n    \"Botswana\",\n    \"Bouvet Island\",\n    \"Brazil\",\n    \"British Indian Ocean Territory\",\n    \"Brunei Darussalam\",\n    \"Bulgaria\",\n    \"Burkina Faso\",\n    \"Burundi\",\n    \"Cambodia\",\n    \"Cameroon\",\n    \"Canada\",\n    \"Cape Verde\",\n    \"Cayman Islands\",\n    \"Central African Republic\",\n    \"Chad\",\n    \"Chile\",\n    \"China\",\n    \"Christmas Island\",\n    \"Cocos (Keeling) Islands\",\n    \"Colombia\",\n    \"Comoros\",\n    \"Congo\",\n    \"Congo, The Democratic Republic of the\",\n    \"Cook Islands\",\n    \"Costa Rica\",\n    \"Cote D'Ivoire\",\n    \"Croatia\",\n    \"Cuba\",\n    \"Cyprus\",\n    \"Czech Republic\",\n    \"Denmark\",\n    \"Djibouti\",\n    \"Dominica\",\n    \"Dominican Republic\",\n    \"Ecuador\",\n    \"Egypt\",\n    \"El Salvador\",\n    \"Equatorial Guinea\",\n    \"Eritrea\",\n    \"Estonia\",\n    \"Ethiopia\",\n    \"Falkland Islands (Malvinas)\",\n    \"Faroe Islands\",\n    \"Fiji\",\n    \"Finland\",\n    \"France\",\n    \"France, Metropolitan\",\n    \"French Guiana\",\n    \"French Polynesia\",\n    \"French Southern Territories\",\n    \"Gabon\",\n    \"Gambia\",\n    \"Georgia\",\n    \"Germany\",\n    \"Ghana\",\n    \"Gibraltar\",\n    \"Greece\",\n    \"Greenland\",\n    \"Grenada\",\n    \"Guadeloupe\",\n    \"Guam\",\n    \"Guatemala\",\n    \"Guernsey\",\n    \"Guinea\",\n    \"Guinea-Bissau\",\n    \"Guyana\",\n    \"Haiti\",\n    \"Heard Island and McDonald Islands\",\n    \"Holy See (Vatican City State)\",\n    \"Honduras\",\n    \"Hong Kong\",\n    \"Hungary\",\n    \"Iceland\",\n    \"India\",\n    \"Indonesia\",\n    \"Iran, Islamic Republic of\",\n    \"Iraq\",\n    \"Ireland\",\n    \"Isle of Man\",\n    \"Israel\",\n    \"Italy\",\n    \"Jamaica\",\n    \"Japan\",\n    \"Jersey\",\n    \"Jordan\",\n    \"Kazakhstan\",\n    \"Kenya\",\n    \"Kiribati\",\n    \"Korea, Democratic People's Republic of\",\n    \"Korea, Republic of\",\n    \"Kuwait\",\n    \"Kyrgyzstan\",\n    \"Lao People's Democratic Republic\",\n    \"Latvia\",\n    \"Lebanon\",\n    \"Lesotho\",\n    \"Liberia\",\n    \"Libyan Arab Jamahiriya\",\n    \"Liechtenstein\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Macau\",\n    \"Macedonia\",\n    \"Madagascar\",\n    \"Malawi\",\n    \"Malaysia\",\n    \"Maldives\",\n    \"Mali\",\n    \"Malta\",\n    \"Marshall Islands\",\n    \"Martinique\",\n    \"Mauritania\",\n    \"Mauritius\",\n    \"Mayotte\",\n    \"Mexico\",\n    \"Micronesia, Federated States of\",\n    \"Moldova, Republic of\",\n    \"Monaco\",\n    \"Mongolia\",\n    \"Montenegro\",\n    \"Montserrat\",\n    \"Morocco\",\n    \"Mozambique\",\n    \"Myanmar\",\n    \"N/A\",\n    \"Namibia\",\n    \"Nauru\",\n    \"Nepal\",\n    \"Netherlands\",\n    \"Netherlands Antilles\",\n    \"New Caledonia\",\n    \"New Zealand\",\n    \"Nicaragua\",\n    \"Niger\",\n    \"Nigeria\",\n    \"Niue\",\n    \"Norfolk Island\",\n    \"Northern Mariana Islands\",\n    \"Norway\",\n    \"Oman\",\n    \"Other\",\n    \"Pakistan\",\n    \"Palau\",\n    \"Palestinian Territory\",\n    \"Panama\",\n    \"Papua New Guinea\",\n    \"Paraguay\",\n    \"Peru\",\n    \"Philippines\",\n    \"Pitcairn Islands\",\n    \"Poland\",\n    \"Portugal\",\n    \"Puerto Rico\",\n    \"Qatar\",\n    \"Reunion\",\n    \"Romania\",\n    \"Russian Federation\",\n    \"Rwanda\",\n    \"San Marino\",\n    \"Saint Barthelemy\",\n    \"Saint Helena\",\n    \"Saint Kitts and Nevis\",\n    \"Saint Lucia\",\n    \"Saint Martin\",\n    \"Saint Pierre and Miquelon\",\n    \"Saint Vincent and the Grenadines\",\n    \"Samoa\",\n    \"Sao Tome and Principe\",\n    \"Satellite Provider\",\n    \"Saudi Arabia\",\n    \"Senegal\",\n    \"Serbia\",\n    \"Seychelles\",\n    \"Sierra Leone\",\n    \"Singapore\",\n    \"Slovakia\",\n    \"Slovenia\",\n    \"Solomon Islands\",\n    \"Somalia\",\n    \"South Africa\",\n    \"South Georgia and the South Sandwich Islands\",\n    \"Spain\",\n    \"Sri Lanka\",\n    \"Sudan\",\n    \"Suriname\",\n    \"Svalbard and Jan Mayen\",\n    \"Swaziland\",\n    \"Sweden\",\n    \"Switzerland\",\n    \"Syrian Arab Republic\",\n    \"Taiwan\",\n    \"Tajikistan\",\n    \"Tanzania, United Republic of\",\n    \"Thailand\",\n    \"Timor-Leste\",\n    \"Togo\",\n    \"Tokelau\",\n    \"Tonga\",\n    \"Trinidad and Tobago\",\n    \"Tunisia\",\n    \"Turkey\",\n    \"Turkmenistan\",\n    \"Turks and Caicos Islands\",\n    \"Tuvalu\",\n    \"Uganda\",\n    \"Ukraine\",\n    \"United Arab Emirates\",\n    \"United Kingdom\",\n    \"United States\",\n    \"United States Minor Outlying Islands\",\n    \"Uruguay\",\n    \"Uzbekistan\",\n    \"Vanuatu\",\n    \"Venezuela\",\n    \"Vietnam\",\n    \"Virgin Islands, British\",\n    \"Virgin Islands, U.S.\",\n    \"Wallis and Futuna\",\n    \"Western Sahara\",\n    \"Yemen\",\n    \"Zambia\",\n    \"Zimbabwe\",\n  ],\n  PolicyEnforcementMode: [\"blocking\", \"transparent\"],\n  PathParameterHandling: [\"as-parameters\", \"as-url\", \"ignore\"],\n  TriggerASMIruleEvent: [\"disabled\", \"enabled-compatibility\", \"enabled-normal\"],\n  Category: [\n    \"Anonymous Proxy\",\n    \"BotNets\",\n    \"Cloud-based Services\",\n    \"Denial of Service\",\n    \"Infected Sources\",\n    \"Mobile Threats\",\n    \"Phishing Proxies\",\n    \"Scanners\",\n    \"Spam Sources\",\n    \"Tor Proxies\",\n    \"Web Attacks\",\n    \"Windows Exploits\",\n  ],\n  IPIntelligenceCategoryDescription: [\n    \"The Anonymous Proxy category includes IP addresses that provide proxy and anonymizing services.\",\n    \"The Botnets category includes Botnet C&C channels and an infected zombie machine controlled by a Bot master.\",\n    \"The Cloud-based Services category includes IP addresses and networks that are used by cloud providers.\",\n    \"The Denial of Services category includes DOS, DDOS, anomalous syn flood, and anomalous traffic detection.\",\n    \"The Infected Sources category includes IP addresses currently known to be infected with malware, and IP addresses with an average low Reputation Index score. Enabling this category prevents access from sources identified to contact malware distribution points.\",\n    \"The Mobile Threats category includes IP addresses of malicious and unwanted mobile applications.\",\n    \"The Phishing Proxies category includes IP addresses hosting phishing sites, and other kind of fraud activities such as Ad Click Fraud and Gaming fraud.\",\n    \"The Scanners category includes all reconnaissance, such as probes, host scan, domain scan, and password brute force.\",\n    \"The Spam Sources category includes Tunneling Spam messages through proxy, anomalous SMTP activities, and Forum Spam activities.\",\n    \"The Tor Proxies category includes IP addresses acting as exit nodes for the Tor Network. Exit nodes are the last point along the proxy chain and make a direct connection to the originatorâ\\u0080\\u0099s intended destination.\",\n    \"The Web Attacks category includes cross site scripting, iFrame injection, SQL injection, cross domain injection, and domain password brute force.\",\n    \"The Windows Exploits category includes active IP address offering or distributing malware, shell code, rootkits, worms, and viruses.\",\n  ],\n  AuthenticationType: [\n    \"ajax-or-json-request\",\n    \"form\",\n    \"http-basic\",\n    \"http-digest\",\n    \"ntlm\",\n    \"none\",\n  ],\n  ActAsMethod: [\"GET\", \"POST\"],\n  MicroserviceEnforcementMode: [\"blocking\", \"policy-default\", \"transparent\"],\n  Frequency: [\"never\", \"real-time\", \"scheduled\"],\n  LearningMode: [\"automatic\", \"disabled\", \"manual\"],\n  Mode: [\"central\", \"local\"],\n  LearnExplicitCookies: [\"never\", \"selective\"],\n  LearnExplicit: [\"always\", \"compact\", \"never\", \"selective\"],\n  ParameterLearningLevel: [\"global\", \"url\"],\n  LearnExplicitRedirectionDomains: [\"always\", \"never\"],\n  LearnExplicitWebsocketUrls: [\"always\", \"never\", \"selective\"],\n  Field: [\"request_status\"],\n  FormatType: [\"arcsight\", \"bigiq\", \"default\", \"splunk\"],\n  AjaxActionType: [\"alert-popup\", \"custom\", \"redirect\"],\n  ResponseActionType: [\n    \"custom\",\n    \"default\",\n    \"erase-cookies\",\n    \"redirect\",\n    \"soap-fault\",\n  ],\n  ResponsePageType: [\n    \"ajax\",\n    \"ajax-login\",\n    \"captcha\",\n    \"captcha-fail\",\n    \"default\",\n    \"failed-login-honeypot\",\n    \"failed-login-honeypot-ajax\",\n    \"hijack\",\n    \"leaked-credentials\",\n    \"leaked-credentials-ajax\",\n    \"mobile\",\n    \"persistent-flow\",\n    \"xml\",\n  ],\n  URLBlockingMode: [\"block-all-urls\", \"block-authenticated-urls\"],\n  UserNameSource: [\"all-login-pages\", \"apm\", \"login-pages\", \"none\"],\n  SessionTrackingStatusAction: [\"block-all\", \"delay-blocking\", \"log-all\"],\n  ExpirationDatetime: [\"N/A\"],\n  Scope: [\"device\", \"ip\", \"session\", \"user\"],\n  Filter: [\"all\", \"eq\", \"ge\", \"le\"],\n  Value: [\"all\", \"high\", \"low\", \"medium\"],\n  HasCve: [\"all\", \"no\", \"yes\"],\n  LastUpdatedFilter: [\"after\", \"all\", \"before\"],\n  SignatureType: [\"all\", \"request\", \"response\"],\n  TagFilter: [\"all\", \"eq\", \"untagged\"],\n  SignatureSetType: [\"filter-based\", \"manual\"],\n  AttackSignatureFalsePositiveMode: [\"detect\", \"detect-and-allow\", \"disabled\"],\n  MinimumAccuracyForAutoAddedSignatures: [\"high\", \"low\", \"medium\"],\n  InPolicy: [\"false\", \"true\"],\n  PolicyType: [\"parent\", \"security\"],\n  TriggerEvent: [\n    \"apply-policy\",\n    \"apply-policy-failed\",\n    \"http-request-illegal\",\n    \"http-request-likely-malicious\",\n    \"http-request-needing-examination\",\n    \"incident-end\",\n    \"incident-start\",\n  ],\n  Extension: [\"block\", \"ignore\", \"remove\"],\n  FluffyEnforcementMode: [\"disabled\", \"enforce\", \"remove-all-headers\"],\n  WebsocketURLProtocol: [\"ws\", \"wss\"],\n  BlockRequests: [\"always\", \"never\", \"policy-default\"],\n  ApplyTo: [\"request\", \"response\"],\n  EncryptedPart: [\"content\", \"element\"],\n  EncryptionAlgorithm: [\"aes128\", \"aes256\", \"tripledes\"],\n  KeyTransportAlgorithm: [\"rsa-1_5\", \"rsa-oaep\"],\n  ResponseAction: [\"encrypt\", \"encrypt-then-sign\", \"sign\", \"sign-then-encrypt\"],\n  RoleEnum: [\"next\", \"none\", \"ultimateReceiver\"],\n  SignatureAlgorithm: [\"hmac-sha1\", \"rsa-sha1\"],\n};\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNoData(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 152,\n    height: 150,\n    viewBox: \"0 0 152 150\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.0639 150C116.521 150 150.128 116.421 150.128 75C150.128 33.5786 116.521 0 75.0639 0C33.6073 0 0 33.5786 0 75C0 116.421 33.6073 150 75.0639 150Z\",\n    fill: \"#C1C6DE\",\n    fillOpacity: 0.4\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.0637 134.02C91.9918 134.02 105.715 131.933 105.715 129.358C105.715 126.783 91.9918 124.695 75.0637 124.695C58.1356 124.695 44.4126 126.783 44.4126 129.358C44.4126 131.933 58.1356 134.02 75.0637 134.02Z\",\n    fill: \"#C1C6DE\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.811 30.4689H44.3129C43.4669 30.4639 42.6283 30.6261 41.8453 30.9462C41.0623 31.2662 40.3504 31.7378 39.7505 32.3337C39.1505 32.9297 38.6744 33.6383 38.3495 34.4187C38.0246 35.1992 37.8574 36.0361 37.8574 36.8814V101.069C37.8574 101.914 38.0246 102.752 38.3494 103.532C38.6742 104.313 39.1502 105.022 39.7501 105.619C40.3499 106.215 41.0618 106.687 41.8449 107.008C42.6279 107.329 43.4667 107.492 44.3129 107.488H95.7067C96.55 107.488 97.3851 107.322 98.1642 106.999C98.9433 106.676 99.651 106.203 100.247 105.607C100.843 105.011 101.316 104.303 101.638 103.525C101.96 102.746 102.125 101.911 102.125 101.069V53.7251L78.811 30.4689Z\",\n    fill: \"#4152B4\",\n    fillOpacity: 0.25,\n    stroke: \"#434D8B\",\n    strokeOpacity: 0.75,\n    strokeMiterlimit: 10\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M82.6079 34.8008H48.066C46.3644 34.8041 44.7336 35.4818 43.5315 36.6852C42.3294 37.8886 41.6543 39.5193 41.6543 41.2195V105.401C41.6543 107.101 42.3294 108.732 43.5315 109.935C44.7336 111.139 46.3644 111.816 48.066 111.82H99.4598C101.164 111.82 102.798 111.143 104.002 109.94C105.207 108.736 105.884 107.103 105.884 105.401V58.057L82.6079 34.8008Z\",\n    fill: \"#E1E4F2\",\n    stroke: \"#434D8B\",\n    strokeOpacity: 0.75,\n    strokeMiterlimit: 10\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M87.0681 38.8242H52.5449C51.7008 38.8242 50.8649 38.9905 50.085 39.3134C49.3052 39.6364 48.5967 40.1097 48.0001 40.7064C47.4035 41.3031 46.9304 42.0115 46.6079 42.791C46.2855 43.5704 46.1199 44.4058 46.1207 45.2492V109.424C46.1158 110.27 46.2783 111.108 46.599 111.891C46.9197 112.674 47.3923 113.385 47.9894 113.985C48.5865 114.585 49.2964 115.06 50.0783 115.384C50.8601 115.709 51.6984 115.875 52.5449 115.874H103.932C105.636 115.874 107.27 115.198 108.475 113.994C109.68 112.79 110.357 111.158 110.357 109.455V62.0867L87.0681 38.8242Z\",\n    fill: \"white\",\n    stroke: \"#434D8B\",\n    strokeOpacity: 0.75,\n    strokeMiterlimit: 10\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.2983 39.168V58.443C86.2983 59.6382 86.7722 60.7847 87.6163 61.6316C88.4604 62.4785 89.606 62.9568 90.8022 62.9617L110.194 63.0305\",\n    fill: \"#E1E4F2\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.2983 39.168V58.443C86.2983 59.6382 86.7722 60.7847 87.6163 61.6316C88.4604 62.4785 89.606 62.9568 90.8022 62.9617L110.194 63.0305\",\n    stroke: \"#434D8B\",\n    strokeOpacity: 0.75,\n    strokeMiterlimit: 10\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.088 74.5C103.088 74.1022 102.74 73.7206 102.119 73.4393C101.499 73.158 100.658 73 99.7814 73H57.3526C56.4757 73 55.6347 73.158 55.0146 73.4393C54.3945 73.7206 54.0461 74.1022 54.0461 74.5C54.0461 74.8978 54.3945 75.2794 55.0146 75.5607C55.6347 75.842 56.4757 76 57.3526 76H99.7814C100.658 76 101.499 75.842 102.119 75.5607C102.74 75.2794 103.088 74.8978 103.088 74.5Z\",\n    fill: \"#C1C6DE\",\n    fillOpacity: 0.5\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.088 82.5C103.088 82.1022 102.74 81.7206 102.119 81.4393C101.499 81.158 100.658 81 99.7814 81H57.3526C56.4757 81 55.6347 81.158 55.0146 81.4393C54.3945 81.7206 54.0461 82.1022 54.0461 82.5C54.0461 82.8978 54.3945 83.2794 55.0146 83.5607C55.6347 83.842 56.4757 84 57.3526 84H99.7814C100.658 84 101.499 83.842 102.119 83.5607C102.74 83.2794 103.088 82.8978 103.088 82.5Z\",\n    fill: \"#C1C6DE\",\n    fillOpacity: 0.5\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.088 89.5C103.088 89.1022 102.74 88.7206 102.119 88.4393C101.499 88.158 100.658 88 99.7814 88H57.3526C56.4757 88 55.6347 88.158 55.0146 88.4393C54.3945 88.7206 54.0461 89.1022 54.0461 89.5C54.0461 89.8978 54.3945 90.2794 55.0146 90.5607C55.6347 90.842 56.4757 91 57.3526 91H99.7814C100.658 91 101.499 90.842 102.119 90.5607C102.74 90.2794 103.088 89.8978 103.088 89.5Z\",\n    fill: \"#C1C6DE\",\n    fillOpacity: 0.5\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.3296 8.96097C42.1529 8.95609 41.982 8.89713 41.8399 8.79207C41.6978 8.687 41.5915 8.54089 41.5352 8.37347C40.8806 6.51796 39.666 4.91107 38.0588 3.77442C36.4516 2.63776 34.531 2.02734 32.5619 2.02734C30.5928 2.02734 28.6723 2.63776 27.0651 3.77442C25.4579 4.91107 24.2432 6.51796 23.5886 8.37347C23.5291 8.53905 23.4207 8.68267 23.2778 8.78534C23.1348 8.88802 22.964 8.9449 22.788 8.94847C21.7636 8.9653 20.7526 9.18355 19.8126 9.59077C18.8727 9.99799 18.0222 10.5862 17.3098 11.3218C15.871 12.8074 15.0818 14.8033 15.1158 16.8703C15.1498 18.9374 16.0043 20.9063 17.4912 22.3438C18.9781 23.7814 20.9756 24.57 23.0444 24.536H42.0794C44.0529 24.4345 45.9141 23.5878 47.2865 22.1672C48.6589 20.7466 49.4401 18.8582 49.4718 16.8841C49.5036 14.9099 48.7837 12.9974 47.4578 11.5334C46.1318 10.0694 44.2988 9.16336 42.3296 8.99847V8.96097Z\",\n    fill: \"white\",\n    stroke: \"#434D8B\",\n    strokeOpacity: 0.75,\n    strokeMiterlimit: 10\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M142.734 73.0815C142.56 73.0763 142.392 73.0186 142.251 72.916C142.11 72.8134 142.004 72.6706 141.946 72.5065C141.29 70.6517 140.074 69.0458 138.467 67.9099C136.859 66.774 134.939 66.1641 132.97 66.1641C131.001 66.1641 129.08 66.774 127.473 67.9099C125.865 69.0458 124.649 70.6517 123.993 72.5065C123.935 72.6716 123.828 72.815 123.686 72.9177C123.544 73.0204 123.374 73.0776 123.199 73.0815C122.175 73.0979 121.165 73.3156 120.226 73.7221C119.286 74.1287 118.436 74.7161 117.724 75.4508C117.012 76.1856 116.452 77.0533 116.075 78.0044C115.699 78.9555 115.513 79.9714 115.53 80.994C115.546 82.0167 115.764 83.0261 116.171 83.9647C116.578 84.9032 117.166 85.7525 117.901 86.464C118.636 87.1755 119.505 87.7354 120.457 88.1116C121.409 88.4878 122.426 88.6729 123.449 88.6565H142.522C144.557 88.6403 146.505 87.8294 147.95 86.397C149.394 84.9646 150.221 83.0245 150.253 80.9912C150.285 78.9579 149.519 76.9928 148.12 75.516C146.721 74.0391 144.799 73.1676 142.766 73.0878L142.734 73.0815Z\",\n    fill: \"white\",\n    stroke: \"#434D8B\",\n    strokeOpacity: 0.75,\n    strokeMiterlimit: 10\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.0674 66.5C79.0674 66.1022 78.8896 65.7206 78.5733 65.4393C78.2569 65.158 77.8278 65 77.3804 65H55.7331C55.2857 65 54.8566 65.158 54.5402 65.4393C54.2238 65.7206 54.0461 66.1022 54.0461 66.5C54.0461 66.8978 54.2238 67.2794 54.5402 67.5607C54.8566 67.842 55.2857 68 55.7331 68H77.3804C77.8278 68 78.2569 67.842 78.5733 67.5607C78.8896 67.2794 79.0674 66.8978 79.0674 66.5Z\",\n    fill: \"#C1C6DE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNoData);\nexport default __webpack_public_path__ + \"static/media/no-data.84b07730.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  BlockingSettingsViolation,\n  BlockRequests,\n  Class,\n  ClassAction,\n  ClassName,\n  CookieSettings,\n  Cooky,\n  CSRFProtection,\n  CSRFURL,\n  CSRFURLMethod,\n  DataGuard,\n  DataGuardEnforcementMode,\n  EnforcementAction,\n  EnforcementType,\n  Evasion,\n  EvasionDescription,\n  ExpirationTime,\n  Filetype,\n  Header,\n  HostName,\n  HostNameTypeEnum,\n  HTTPProtocol,\n  HTTPProtocolDescription,\n  InsertSameSiteAttribute,\n  MaximumCookieHeaderLengthEnum,\n  MethodElement,\n  MitigationsSignature,\n  OpenAPIFile,\n  ParameterElement,\n  PolicySignature,\n  ServerTechnology,\n  Settings,\n  SignatureSet,\n  URLElement,\n  WhitelistIP,\n} from \"./policy-schema/policy.definitions\";\nimport {\n  MitigationAnomaly,\n  MitigationBrowser,\n} from \"./policy-schema/policy.definitions.nap.custom\";\n\nexport const defaultGeneralSettings : (\n    order: number,\n    item?: any\n) => any = (order, item)  => ({\n  policy: {\n    name: \"policy_name\",\n    template: {\n      name: \"POLICY_TEMPLATE_NGINX_BASE\",\n    },\n    applicationLanguage: \"utf-8\",\n    enforcementMode: \"blocking\",\n  },\n});\n\nexport const defaultBlockingSettingsViolations: (\n  order: number,\n  item?: BlockingSettingsViolation\n) => BlockingSettingsViolation = (order, item) => {\n  return (\n    item ?? {\n      name: \"\",\n      block: false,\n      alarm: false,\n    }\n  );\n};\n\nexport const defaultMethods: (\n  order: number,\n  item?: MethodElement\n) => MethodElement = (order, item) => {\n  return (\n    item ?? {\n      name: \"\",\n    }\n  );\n};\n\nexport const defaultUrls: (order: number, url?: URLElement) => URLElement = (\n  order,\n  url\n) => {\n  return url\n    ? ({ ...url, wildcardOrder: order } as URLElement)\n    : ({\n        name: \"\",\n        type: \"explicit\",\n        method: \"*\",\n        protocol: \"http\",\n        attackSignaturesCheck: true,\n        metacharsOnUrlCheck: true,\n        wildcardOrder: order,\n      } as URLElement);\n};\n\nexport const defaultCsrfUrl: (order: number, csrfUrl?: CSRFURL) => CSRFURL = (\n  order,\n  csrfUrl\n) => {\n  return csrfUrl\n    ? ({ ...csrfUrl, wildcardOrder: order } as CSRFURL)\n    : {\n        enforcementAction: EnforcementAction.None,\n        method: CSRFURLMethod.Any,\n        url: \"\",\n        wildcardOrder: order,\n      };\n};\n\nexport const defaultFileTypes: (order: number, item?: Filetype) => Filetype = (\n  order,\n  item\n) => {\n  return (\n    item ??\n    ({\n      name: \"\",\n      type: \"explicit\",\n      allowed: true,\n      checkUrlLength: true,\n      urlLength: 2048,\n      checkQueryStringLength: true,\n      queryStringLength: 2048,\n      checkPostDataLength: false,\n      postDataLength: 4096,\n      checkRequestLength: false,\n      requestLength: 8192,\n      responseCheck: false,\n      wildcardOrder: order,\n    } as Filetype)\n  );\n};\n\nexport const defaultHeaders: (order: number, item?: Header) => Header = (\n  order,\n  item\n) => {\n  return (\n    item ??\n    ({\n      name: \"\",\n      type: \"explicit\",\n      decodeValueAsBase64: \"enabled\",\n      htmlNormalization: true,\n      mandatory: true,\n      allowRepeatedOccurrences: false,\n      checkSignatures: true,\n    } as Header)\n  );\n};\n\nexport const defaultParameters: (\n  order: number,\n  item?: ParameterElement\n) => ParameterElement = (order, item) => {\n  return (\n    item ??\n    ({\n      name: \"\",\n      type: \"wildcard\",\n      level: \"global\",\n      parameterLocation: \"any\",\n      valueType: \"auto-detect\",\n      allowEmptyValue: true,\n      checkMaxValueLength: false,\n      allowRepeatedParameterName: true,\n      sensitiveParameter: false,\n      attackSignaturesCheck: true,\n      checkMetachars: true,\n      metacharsOnParameterValueCheck: true,\n    } as ParameterElement)\n  );\n};\n\nexport const defaultOpenApi: (\n  order: number,\n  item?: OpenAPIFile\n) => OpenAPIFile = (order, item) => {\n  return (\n    item ?? {\n      link: \"\",\n    }\n  );\n};\n\nexport const defaultServerTechnologies: (\n  order: number,\n  item?: ServerTechnology\n) => ServerTechnology = (order, item) => {\n  return item\n    ? item\n    : {\n        serverTechnologyName: \"\",\n      };\n};\n\nexport const defaultSignatureSets: (\n  order: number,\n  item?: SignatureSet\n) => SignatureSet = (order, item) => {\n  return item\n    ? item\n    : {\n        alarm: true,\n        block: true,\n        name: \"\",\n      };\n};\n\nexport const defaultSignatures: (\n  order: number,\n  item?: PolicySignature\n) => PolicySignature = (order, item) => {\n  return (\n    item ?? {\n      enabled: true,\n      name: \"\",\n      signatureId: 0,\n      tag: \"\",\n    }\n  );\n};\n\nexport const defaultBotDefenceSettings: (\n  order: number,\n  item?: Settings\n) => Settings = (order, item) => {\n  return (\n    item ?? {\n      isEnabled: true,\n    }\n  );\n};\n\nexport const defaultMitigationsAnomaly: (\n  order: number,\n  item?: MitigationAnomaly\n) => MitigationAnomaly = (order, item) => {\n  return (\n    item ?? {\n      name: \"\",\n      action: \"\",\n      scoreThreshold: 1,\n    }\n  );\n};\n\nexport const defaultMitigationsBrowser: (\n  order: number,\n  item?: MitigationBrowser\n) => MitigationBrowser = (order, item) => {\n  return (\n    item ?? {\n      action: \"\",\n      maxVersion: 1,\n      minVersion: 1,\n      name: \"\",\n    }\n  );\n};\n\nexport const defaultMitigationsClass: (order: number, item?: Class) => Class = (\n  order,\n  item\n) => {\n  return {\n    name: \"\" as ClassName,\n    action: \"\" as ClassAction,\n  } as Class;\n};\n\nexport const defaultMitigationsSignature: (\n  order: number,\n  item?: MitigationsSignature\n) => MitigationsSignature = (order, item) => {\n  return (\n    item ?? {\n      action: \"\" as ClassAction,\n      name: \"\",\n    }\n  );\n};\n\nexport const defaultDataGuard: (order: number, item?: DataGuard) => DataGuard =\n  (order, item) => {\n    return (\n      item ?? {\n        creditCardNumbers: true,\n        enabled: true,\n        enforcementMode: DataGuardEnforcementMode.EnforceUrlsInList,\n        enforcementUrls: [],\n        maskData: true,\n        usSocialSecurityNumbers: true,\n      }\n    );\n  };\n\nexport const defaultWhitelistIPs: (\n  order: number,\n  item?: WhitelistIP\n) => WhitelistIP = (order, item) => {\n  return {\n    blockRequests: BlockRequests.PolicyDefault,\n    description: \"\",\n    ipAddress: \"\",\n    ipMask: \"\",\n  };\n};\n\nexport const defaultHostname: (order: number, item?: HostName) => HostName = (\n  order,\n  item\n) => {\n  return (\n    item ?? {\n      includeSubdomains: true,\n      name: \"\",\n    }\n  );\n};\n\nexport const defaultCsrfProtection: (\n  order: number,\n  item?: CSRFProtection\n) => CSRFProtection = (order, item) => {\n  return (\n    item ?? {\n      enabled: false,\n      expirationTimeInSeconds: ExpirationTime.Disabled,\n      sslOnly: false,\n    }\n  );\n};\n\nexport const defaultCookieSettings: (\n  order: number,\n  item?: CookieSettings\n) => CookieSettings = (order, item) => {\n  return (\n    item ?? {\n      maximumCookieHeaderLength: MaximumCookieHeaderLengthEnum.Any,\n    }\n  );\n};\n\nexport const defaultCookie: (order: number, cookie?: Cooky) => Cooky = (\n  order,\n  cookie\n) => {\n  return cookie\n    ? {\n        ...cookie,\n        wildcardOrder: order,\n      }\n    : {\n        name: \"\",\n        accessibleOnlyThroughTheHttpProtocol: true,\n        attackSignaturesCheck: true,\n        decodeValueAsBase64: \"enabled\",\n        enforcementType: EnforcementType.Allow,\n        insertSameSiteAttribute: InsertSameSiteAttribute.None,\n        securedOverHttpsConnection: true,\n        type: HostNameTypeEnum.Explicit,\n        wildcardOrder: order,\n      };\n};\n\nexport const defaultEvasions: (order: number, evasion?: Evasion) => Evasion = (\n  order,\n  evasion\n) => {\n  return evasion\n    ? evasion\n    : {\n        description: \"\" as EvasionDescription,\n        enabled: true,\n        maxDecodingPasses: 2,\n      };\n};\n\nexport const defaultHttpProtocols: (\n  order: number,\n  item?: HTTPProtocol\n) => HTTPProtocol = (order, item) => {\n  return item\n    ? item\n    : {\n        maxParams: 1,\n        maxHeaders: 1,\n        enabled: true,\n        description: \"\" as HTTPProtocolDescription,\n      };\n};\n\nexport const defaultResponseCode: (order: number, item?: number) => number = (\n  order,\n  item\n) => {\n  return item ?? 200;\n};\n\nexport const defaultXffHeader: (order: number, item?: string) => string = (\n  order,\n  item\n) => {\n  return item ?? \"\";\n};\n\nexport const defaultDataGuardEnforcementUrls: (\n  order: number,\n  item?: string\n) => string = (order, item) => {\n  return item ?? \"\";\n};\n","import * as React from \"react\";\n\nimport { TableCell } from \"@mui/material\";\nimport { IControlInfo } from \"../control-info.interface\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\n\nexport class DropListFieldControl implements IControlInfo {\n  constructor(\n    private currentPath: string,\n    private currentValue: string,\n    private hintValue: string,\n    private onValueChange: (value: string) => void,\n    private items: string[]\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <Box>\n        <Autocomplete\n          value={this.currentValue}\n          onChange={(e, value) => this.onValueChange(value as string)}\n          options={this.items}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              InputProps={{ ...params.InputProps, ...props }}\n              variant=\"outlined\"\n              placeholder={this.hintValue}\n            />\n          )}\n        />\n      </Box>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { TableCell } from \"@mui/material\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class CheckboxFieldControl implements IControlInfo {\n  constructor(\n    private currentPath: string,\n    private currentValue: boolean,\n    private onValueChange: (value: boolean) => void\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" padding=\"checkbox\" align=\"center\" {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <Checkbox\n        size=\"small\"\n        checked={this.currentValue}\n        color=\"primary\"\n        onChange={(e) => this.onValueChange(e.target.checked)}\n        {...props}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport TextField, { TextFieldProps } from \"@mui/material/TextField\";\nimport { TableCell, TableCellProps } from \"@mui/material\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class TextEditFieldControl implements IControlInfo {\n  constructor(\n    private currentPath: string,\n    private currentValue: string,\n    private hintValue: string,\n    private onValueChange: (value: string | number) => void,\n    private cellProps?: TableCellProps,\n    private controlProps?: TextFieldProps,\n    private makeNumber?: boolean\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...this.cellProps} {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    if (props.startAdornment) {\n      props.InputProps = {\n        startAdornment: props.startAdornment,\n      };\n    }\n    return (\n      <TextField\n        id={props.key}\n        fullWidth\n        value={this.currentValue ?? \"\"}\n        placeholder={this.currentValue ? undefined : this.hintValue}\n        onChange={(e) => {\n          const value = e.target.value ?? \"\";\n          try {\n            const numberValue = parseFloat(value);\n            if (!isNaN(numberValue) && this.makeNumber) {\n              this.onValueChange(numberValue);\n            } else {\n              this.onValueChange(value);\n            }\n          } catch (e) {\n            this.onValueChange(value);\n          }\n        }}\n        {...this.controlProps}\n        {...props}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { TableCell } from \"@mui/material\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class LabelFieldControl implements IControlInfo {\n  constructor(private currentPath: string, private currentValue: string) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    return (\n      <Typography {...props} variant={\"caption\"}>\n        {this.currentValue}\n      </Typography>\n    );\n  }\n}\n","import { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\nimport { get as _get, set as _set } from \"lodash\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { LabelFieldControl } from \"../../../../component/policy-editor/controls/field-control/label.field-control\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\n\nexport class TableFieldValueFactory<T> {\n  constructor(\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any,\n    protected basePath: string\n  ) {}\n\n  private errorPath(valuePath: string): string[] {\n    if (this.basePath.length === 0) return [`instance.${valuePath}`];\n\n    return [`instance.${this.basePath}.${valuePath}`];\n  }\n\n  private policyPath(valuePath: string): string {\n    if (this.basePath.length === 0) return `policy.${valuePath}`;\n\n    return `policy.${this.basePath}.${valuePath}`;\n  }\n\n  createLabelFieldControl(title: string, valuePath: string): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new LabelFieldControl(valuePath, _get(this.json, valuePath)),\n    };\n  }\n\n  createDropListFieldControl(\n    title: string,\n    valuePath: string,\n    fieldFactory: FieldFactoryVisitor<T>,\n    items: string[]\n  ): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new DropListFieldControl(\n          valuePath,\n          _get(this.json, valuePath),\n          (fieldFactory.callDefault(undefined) as any)[valuePath],\n          (value) =>\n              this.dispatch(\n                  policyEditorJsonVisit((currentJson) => {\n                    _set(currentJson, this.policyPath(valuePath), value);\n                  })\n              ),\n          items\n      ),\n    };\n  }\n\n  createCheckBoxFieldControl(title: string, valuePath: string): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new CheckboxFieldControl(\n        valuePath,\n        _get(this.json, this.policyPath(valuePath)),\n        (value) =>\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) =>\n              _set(currentJson, this.policyPath(valuePath), value)\n            )\n          )\n      ),\n    };\n  }\n\n  createTextEditFieldControl(\n    title: string,\n    valuePath: string,\n    fieldFactory: FieldFactoryVisitor<T>,\n    props?: any\n  ): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new TextEditFieldControl(\n        valuePath,\n        _get(this.json, this.policyPath(valuePath)),\n        (fieldFactory.callDefault(undefined) as any)[valuePath],\n        (value) =>\n          this.dispatch(\n            policyEditorJsonVisit((currentJson) =>\n              _set(currentJson, this.policyPath(valuePath), value)\n            )\n          ),\n        undefined,\n        { variant: \"outlined\", size: \"small\" },\n        props ? { ...props } : undefined\n      ),\n    };\n  }\n}\n","import { set as _set } from \"lodash\";\nimport { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { defaultGeneralSettings } from \"../../../../model/policy-editor.defaults.model\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\nimport { TableFieldValueFactory } from \"../base/table-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\n\nexport class GeneralSettingsVisitor\n  extends BaseVisitor\n  implements FieldResolverVisitor, FieldFactoryVisitor<void>\n{\n  private tableFieldValueFactory: TableFieldValueFactory<void>;\n\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(dispatch, json);\n\n    this.tableFieldValueFactory = new TableFieldValueFactory(\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  get rowIndex() {\n    return 0;\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      {\n        title: \"Policy Type\",\n        errorPath: [\"\"],\n        controlInfo: new DropListFieldControl(\"\", \"App Protect\", \"\", () => {}, [\n          \"App Protect\",\n          \"Advanced WAF\",\n        ]),\n      },\n      this.tableFieldValueFactory.createTextEditFieldControl(\n        \"Policy Name\",\n        \"name\",\n        this\n      ),\n      this.tableFieldValueFactory.createTextEditFieldControl(\n        \"Application Language\",\n        \"applicationLanguage\",\n        this\n      ),\n      this.tableFieldValueFactory.createTextEditFieldControl(\n        \"Enforcement Mode\",\n        \"enforcementMode\",\n        this\n      ),\n      this.tableFieldValueFactory.createTextEditFieldControl(\n        \"Template\",\n        \"template.name\",\n        this\n      ),\n    ];\n  }\n\n  create() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _set(currentJson, \"policy\", defaultGeneralSettings);\n      })\n    );\n  }\n\n  remove(): void {}\n\n  callDefault(order?: number, item?: void): any {\n    return defaultGeneralSettings(order ?? 0, item);\n  }\n}\n","import * as React from \"react\";\n\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport Box from \"@mui/material/Box\";\nimport { GridFieldValueControl } from \"../controls/grid.field-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { GeneralSettingsVisitor } from \"../../../store/policy-editor/visitor/imp/general-settings.visitor\";\n\nexport const GeneralSettingsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const generalSettingsVisitor = useVisitor(GeneralSettingsVisitor);\n\n  return (\n    <Box className={classes.pageContent}>\n      <GridFieldValueControl rows={generalSettingsVisitor.getBasicRows()} />\n    </Box>\n  );\n};\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Slide from \"@mui/material/Slide\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport createStyles from '@mui/styles/createStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport Box from \"@mui/material/Box\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport Grid from \"@mui/material/Grid\";\n\nexport type AdvancedSettingsDialogProps = {\n  open: boolean;\n  title: string;\n  handleClose: () => void;\n};\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & {\n      children: React.ReactElement<any, any>;\n    },\n    ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DialogAppBar = withStyles((theme) => {\n  return createStyles({\n    root: {\n      position: \"relative\",\n    },\n  });\n})(AppBar);\n\nconst DialogTitle = withStyles((theme) => {\n  return createStyles({\n    root: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n  });\n})(Typography);\n\nexport const AdvancedSettingsDialog: React.FunctionComponent<AdvancedSettingsDialogProps> =\n  ({ open, title, handleClose, children }) => {\n    const classes = useStyles();\n\n    return (\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <DialogAppBar>\n          <Toolbar>\n            <DialogTitle variant=\"h6\">{title}</DialogTitle>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Save & Close\n            </Button>\n          </Toolbar>\n        </DialogAppBar>\n        <Grid container spacing={1}>\n          <Grid container item spacing={1} xs={12}>\n            <Grid container item spacing={1} xs={2} />\n            <Grid container item spacing={1} xs={8}>\n              <Box className={classes.pageContent}>{children}</Box>\n            </Grid>\n            <Grid container item spacing={1} xs={2} />\n          </Grid>\n        </Grid>\n      </Dialog>\n    );\n  };\n","import Box from \"@mui/material/Box\";\nimport React from \"react\";\n\nimport { ReactComponent as NoDataImg } from \"../../../resources/img/no-data.svg\";\nimport { Link } from \"@mui/material\";\n\nexport type NoDataControlProps = {\n  addItemInscription?: string;\n  onAddItem?: () => void;\n};\n\nexport const NoDataControl: React.FunctionComponent<NoDataControlProps> = ({\n  addItemInscription,\n  onAddItem,\n}) => {\n  return (\n    <Box\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <Box\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n        }}\n      >\n        <Box\n          style={{\n            flex: \"auto\",\n          }}\n        />\n        <Box>\n          <NoDataImg />\n        </Box>\n        <Box style={{ alignSelf: \"center\" }}>\n          <div\n            style={{\n              fontSize: \"20px\",\n              lineHeight: \"26px\",\n              paddingLeft: \"58px\",\n              color: \"#485665\",\n              fontWeight: \"500\",\n            }}\n          >\n            No Data\n          </div>\n          <div\n            style={{\n              paddingLeft: \"58px\",\n              color: \"#485665\",\n            }}\n          >\n            To start,{\" \"}\n            <Link\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                if (onAddItem) {\n                  onAddItem();\n                }\n              }}\n            >\n              {addItemInscription}\n            </Link>\n          </div>\n        </Box>\n        <Box\n          style={{\n            flex: \"auto\",\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport { FieldResolverVisitor } from \"../../../store/policy-editor/visitor/interface/field-resolver.visitor\";\nimport { TableContainer } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Table from \"@mui/material/Table\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Typography from \"@mui/material/Typography\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport DeleteForeverRounded from \"@mui/icons-material/DeleteForeverRounded\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { useEffect, useState } from \"react\";\n\nimport { AdvancedSettingsDialog } from \"../dialogs/advanced-settings.dialog\";\nimport { GridFieldValueControl } from \"./grid.field-value.control\";\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  ResponderProvided,\n} from \"react-beautiful-dnd\";\nimport { DragIndicator } from \"@mui/icons-material\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { ErrorFieldControlAdornment } from \"./field-control/error.field-control-adornment\";\nimport Chip from \"@mui/material/Chip\";\nimport { NoDataControl } from \"./no-data.control\";\n\nconst StyledTableCell = withStyles((theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.primary.contrastText,\n    },\n  })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  })\n)(TableRow);\n\nexport type GridTableValueProps = {\n  settingsName?: string;\n  titles: string[];\n  visitors: FieldResolverVisitor[];\n  dnd?: boolean;\n  onDragEnd?: (result: DropResult, provided: ResponderProvided) => void;\n  addItemInscription?: string;\n  onAddItem?: () => void;\n};\n\nconst getItemStyle: (\n  defaultFlag: boolean,\n  isDragging: boolean,\n  draggableStyle: any\n) => any = (defaultFlag, isDragging, draggableStyle) => ({\n  ...draggableStyle,\n\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\",\n  }),\n\n  ...(defaultFlag && {\n    background: \"#CFF4D2\",\n  }),\n});\n\nconst DroppableComponent = (props: any) => {\n  return (\n    <Droppable droppableId={\"1\"} direction=\"vertical\">\n      {(provided) => {\n        return (\n          <TableBody\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            {...props}\n          >\n            {props.children}\n            {provided.placeholder}\n          </TableBody>\n        );\n      }}\n    </Droppable>\n  );\n};\n\nexport const GridTableValueControl: React.FunctionComponent<GridTableValueProps> =\n  ({\n    settingsName,\n    titles,\n    visitors,\n    dnd,\n    onDragEnd,\n    addItemInscription,\n    onAddItem,\n  }) => {\n    const [selected, setSelected] = useState([] as boolean[]);\n    const [advancedSettingsDialogOpen, setAdvancedSettingsDialogOpen] =\n      useState(false);\n    const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n    const { jsonValidationErrors } = usePolicyEditorState();\n\n    const onOpenAdvancedSettingsDialog = (index: number) => {\n      setSelectedItemIndex(index);\n      setAdvancedSettingsDialogOpen(true);\n    };\n    const onCloseAdvancedSettingsDialog = () =>\n      setAdvancedSettingsDialogOpen(false);\n\n    useEffect(() => {\n      setSelected(new Array<boolean>(visitors.length).fill(false));\n    }, [visitors.length]);\n\n    const allSelected = !selected.some((x) => !x);\n    const anySelected = selected.some((x) => x);\n\n    const onRemoveSelected: () => void = () => {\n      const batchDeleteArr: number[] = [];\n\n      for (let i = 0; i < selected.length; i++) {\n        if (selected[i]) {\n          batchDeleteArr.push(visitors[i].rowIndex);\n        }\n      }\n\n      // make sure that items will be deleted from\n      // top to bottom, so the correct shifts can be applied\n      batchDeleteArr.sort((a, b) => a - b);\n\n      batchDeleteArr.forEach((rowIndex, index) => {\n        // just any visitor will suit the aim. move the visitor index\n        // to the rowIndex of the one to be deleted minus shift (as some were deleted before)\n        visitors[0].rowIndex = rowIndex - index;\n\n        // delete one by one :)\n        visitors[0].remove();\n      });\n    };\n\n    const createAdvancedSettingsControls: (\n      itemIndex: number\n    ) => JSX.Element | undefined = (itemIndex) => {\n      if (itemIndex < 0) return undefined;\n\n      return (\n        <GridFieldValueControl rows={visitors[itemIndex].getAdvancedRows()} />\n      );\n    };\n\n    if (!visitors || visitors.length === 0)\n      return (\n        <NoDataControl\n          addItemInscription={addItemInscription}\n          onAddItem={onAddItem}\n        />\n      );\n\n    const table = (\n      <TableContainer component={Box}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell padding={\"checkbox\"} size=\"small\" align=\"center\">\n                <Checkbox\n                  checked={allSelected}\n                  size=\"small\"\n                  color=\"primary\"\n                  onChange={(e) => {\n                    setSelected([\n                      ...selected.map((x) => e.currentTarget.checked),\n                    ]);\n                  }}\n                />\n              </StyledTableCell>\n\n              {titles.map((x, index) => (\n                <StyledTableCell key={index}>\n                  <Typography color=\"primary\">{x}</Typography>\n                </StyledTableCell>\n              ))}\n              {dnd && <StyledTableCell />}\n              <StyledTableCell />\n              <StyledTableCell align=\"center\">\n                <Typography>\n                  <Button\n                    disabled={!anySelected}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => onRemoveSelected()}\n                  >\n                    Remove\n                  </Button>\n                </Typography>\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody component={dnd ? DroppableComponent : TableBody}>\n            {visitors.map((v, vIndex) => {\n              const gKey =\n                v.rowIndex === -1 ? `def-${vIndex}` : `val-${v.rowIndex}`;\n              const defaultFlag = v.rowIndex === -1;\n              const row = (\n                <React.Fragment key={gKey}>\n                  <StyledTableCell\n                    padding={\"checkbox\"}\n                    size=\"small\"\n                    align=\"center\"\n                  >\n                    {defaultFlag ? (\n                      <Chip label=\"default\" size=\"small\" variant=\"outlined\" />\n                    ) : (\n                      <Checkbox\n                        size=\"small\"\n                        color=\"primary\"\n                        checked={selected[vIndex] ?? false}\n                        onChange={(e) => {\n                          selected[vIndex] = e.currentTarget.checked;\n                          setSelected([...selected]);\n                        }}\n                      />\n                    )}\n                  </StyledTableCell>\n                  {v.getBasicRows().map((item, index) => {\n                    const error = jsonValidationErrors.filter((x) =>\n                      item.errorPath\n                        ? item.errorPath.find((err) => err === x.property)\n                        : false\n                    );\n                    const hasError: boolean = error && error.length > 0;\n                    const startAdornment = hasError ? (\n                      <ErrorFieldControlAdornment\n                        errorMessage={error[0].message}\n                      />\n                    ) : undefined;\n\n                    return item.controlInfo.createCell(\n                      item.controlInfo.createControl({\n                        key: `control_${index}`,\n                        error: hasError,\n                        fullWidth: true,\n                        hiddenLabel: true,\n                        margin: \"dense\",\n                        startAdornment: hasError ? startAdornment : undefined,\n                      }),\n                      { key: `cell_${index}` }\n                    );\n                  })}\n                  {dnd && (\n                    <TableCell\n                      style={{\n                        width: \"24px\",\n                        paddingLeft: \"0px\",\n                        paddingRight: \"0px\",\n                      }}\n                    >\n                      {!defaultFlag && <DragIndicator />}\n                    </TableCell>\n                  )}\n\n                  <TableCell style={{ width: \"24px\" }}>\n                    {v.hasAdvancedRows ? (\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => onOpenAdvancedSettingsDialog(vIndex)}\n                      >\n                        {!defaultFlag && <EditIcon />}\n                      </IconButton>\n                    ) : undefined}\n                  </TableCell>\n                  <TableCell size=\"small\" align=\"center\" padding=\"checkbox\">\n                    {defaultFlag ? (\n                      <Box />\n                    ) : (\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => {\n                          v.remove();\n                        }}\n                      >\n                        <DeleteForeverRounded />\n                      </IconButton>\n                    )}\n                  </TableCell>\n                </React.Fragment>\n              );\n\n              return dnd ? (\n                <Draggable key={gKey} draggableId={`${gKey}`} index={vIndex}>\n                  {(provided, snapshot) => (\n                    <StyledTableRow\n                      key={gKey}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={getItemStyle(\n                        defaultFlag,\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      {row}\n                    </StyledTableRow>\n                  )}\n                </Draggable>\n              ) : (\n                <StyledTableRow>{row}</StyledTableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n\n    return (\n      <React.Fragment>\n        <AdvancedSettingsDialog\n          title={settingsName ?? \"\"}\n          open={advancedSettingsDialogOpen}\n          handleClose={onCloseAdvancedSettingsDialog}\n        >\n          {advancedSettingsDialogOpen &&\n            createAdvancedSettingsControls(selectedItemIndex)}\n        </AdvancedSettingsDialog>\n        {dnd ? (\n          <DragDropContext\n            onDragEnd={(result: DropResult, provided: ResponderProvided) =>\n              onDragEnd && onDragEnd(result, provided)\n            }\n          >\n            {table}\n          </DragDropContext>\n        ) : (\n          table\n        )}\n      </React.Fragment>\n    );\n  };\n","import { merge as _merge } from \"lodash\";\nimport * as customPolicy from \"./custom-updates.policy-schema.json\";\nimport * as wafSchema from \"./policy-schema.json\";\n\nexport class PolicySchemaService {\n  private readonly _schema: any;\n\n  constructor() {\n    this._schema = _merge(\n      customPolicy.properties.policy,\n      wafSchema.properties.policy\n    );\n  }\n\n  getSchema(): any {\n    return this._schema;\n  }\n\n  private _getNextPropertyInfo(\n    currentRoot: any,\n    keys: string[],\n    index: number\n  ): any {\n    const isArray = keys[index].includes(\"[\");\n    const currentKey = isArray\n      ? keys[index].substring(0, keys[index].indexOf(\"[\"))\n      : keys[index];\n\n    if (!currentRoot[currentKey]) {\n      return undefined;\n    }\n\n    if (index === keys.length - 1) {\n      return isArray ? currentRoot[currentKey].items : currentRoot[currentKey];\n    }\n\n    const nextProperty = isArray\n      ? currentRoot[currentKey].items.properties\n      : currentRoot[currentKey].properties;\n    return this._getNextPropertyInfo(nextProperty, keys, index + 1);\n  }\n\n  isFieldRequired(path: string): boolean {\n    console.log(path);\n\n    if (!path) return false;\n    const keys = path.split(\".\");\n\n    const propertyInfo = this._getNextPropertyInfo(\n      this._schema.properties,\n      keys.slice(0, keys.length - 1),\n      0\n    );\n\n    if (!propertyInfo) return false;\n\n    if (\n      propertyInfo.required !== undefined &&\n      Array.isArray(propertyInfo.required)\n    ) {\n      const isRequired = propertyInfo.required.includes(keys[keys.length - 1]);\n      return isRequired;\n    }\n\n    return false;\n  }\n\n  shrinkToRequired(obj: any, basePath: string) {\n    const rValue: any = {};\n\n    Object.keys(obj).forEach((k) => {\n      const fullPath = `${basePath}.${k}`;\n\n      if (k === \"name\" || k === \"description\" || k === \"wildcardOrder\") {\n        rValue[k] = obj[k];\n      } else if (this.isFieldRequired(fullPath)) {\n        rValue[k] = obj[k];\n      }\n    });\n\n    return rValue;\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, set as _set } from \"lodash\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { PolicySchemaService } from \"../../../../model/policy-schema/policy-schema.service\";\nimport _ from \"lodash\";\n\nexport class VisitorFactoryBase<T>\n  extends BaseVisitor\n  implements FieldFactoryVisitor<T>\n{\n  constructor(\n    protected path: string,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any,\n    protected defaultFunc: (orderNumber: number, value?: T) => T\n  ) {\n    super(dispatch, json);\n  }\n\n  callDefault(order?: number, item?: T): T {\n    return this.defaultFunc(order ?? 0, item);\n  }\n\n  create(item?: T): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        let arr = _get(currentJson, this.path);\n        if (!arr) {\n          _set(currentJson, this.path, [] as any);\n          arr = _get(currentJson, this.path);\n        }\n\n        const value = this.defaultFunc(arr.length, item);\n        if (_.isString(value) || _.isNumber(value)) {\n          arr.push(value);\n        } else {\n          const schemaService = new PolicySchemaService();\n          const schemaPath = this.path.replace(\"policy.\", \"\");\n          const shrunk = schemaService.shrinkToRequired(\n            value,\n            `${schemaPath}[]`\n          );\n\n          arr.push(shrunk);\n        }\n      })\n    );\n  }\n}\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { MethodElement } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultMethods } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class MethodsFieldFactory extends VisitorFactoryBase<MethodElement> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.methods\", dispatch, json, defaultMethods);\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseVisitor } from \"../../interface/base.visitor\";\n\nexport abstract class BaseFieldResolverVisitorFactory extends BaseVisitor {\n  abstract getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  };\n}\n","import * as React from \"react\";\nimport TextField, { TextFieldProps } from \"@mui/material/TextField\";\nimport { TableCell, TableCellProps } from \"@mui/material\";\nimport { IControlInfo } from \"../control-info.interface\";\n\nexport class NumberEditFieldControl implements IControlInfo {\n  constructor(\n    private currentPath: string,\n    private currentValue: string,\n    private hintValue: string,\n    private onValueChange: (value: string) => void,\n    private cellProps?: TableCellProps,\n    private controlProps?: TextFieldProps\n  ) {}\n\n  createCell(children: JSX.Element, props: any): JSX.Element {\n    return (\n      <TableCell size=\"small\" {...this.cellProps} {...props}>\n        {children}\n      </TableCell>\n    );\n  }\n\n  createControl(props: any): JSX.Element {\n    if (props.startAdornment) {\n      props.InputProps = {\n        startAdornment: props.startAdornment,\n      };\n    }\n    return (\n      <TextField\n        type=\"number\"\n        fullWidth\n        value={this.currentValue ?? \"\"}\n        placeholder={this.currentValue ? undefined : this.hintValue}\n        onChange={(e) => this.onValueChange(e.target.value)}\n        {...this.controlProps}\n        {...props}\n      />\n    );\n  }\n}\n","import { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { TextEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/text-edit.field-control\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { set as _set, get as _get } from \"lodash\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { NumberEditFieldControl } from \"../../../../component/policy-editor/controls/field-control/number-edit.field-control\";\nimport { DropListFieldControl } from \"../../../../component/policy-editor/controls/field-control/drop-list.field-control\";\nimport { CheckboxFieldControl } from \"../../../../component/policy-editor/controls/field-control/checkbox.field-control\";\nimport { LabelFieldControl } from \"../../../../component/policy-editor/controls/field-control/label.field-control\";\n\nexport class GridFieldValueFactory<T> {\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any,\n    protected basePath: string\n  ) {}\n\n  private errorPath(valuePath: string): string[] {\n    if (valuePath.length === 0)\n      return [`instance.${this.basePath}[${this.rowIndex}]`];\n\n    return [`instance.${this.basePath}[${this.rowIndex}].${valuePath}`];\n  }\n\n  private policyPath(valuePath: string): string {\n    if (valuePath.length === 0)\n      return `policy.${this.basePath}[${this.rowIndex}]`;\n\n    return `policy.${this.basePath}[${this.rowIndex}].${valuePath}`;\n  }\n\n  createLabelFieldControl(title: string, valuePath: string) {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new LabelFieldControl(valuePath, _get(this.json, valuePath)),\n    };\n  }\n\n  createCheckBoxFieldControl(\n    title: string,\n    valuePath: string,\n    fieldFactory: FieldFactoryVisitor<T>\n  ): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new CheckboxFieldControl(\n        valuePath,\n        _get(this.json, valuePath),\n        (value) =>\n          this.rowIndex === -1\n            ? fieldFactory.create({\n                ...this.json,\n                [valuePath]: value,\n              })\n            : this.dispatch(\n                policyEditorJsonVisit((currentJson) =>\n                  _set(currentJson, this.policyPath(valuePath), value)\n                )\n              )\n      ),\n    };\n  }\n\n  createDropListFieldControl(\n    title: string,\n    valuePath: string,\n    fieldFactory: FieldFactoryVisitor<T>,\n    items: string[]\n  ): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new DropListFieldControl(\n        valuePath,\n        _get(this.json, valuePath),\n        (fieldFactory.callDefault(undefined) as any)[valuePath],\n        (value) =>\n          this.rowIndex === -1\n            ? fieldFactory.create({\n                ...this.json,\n                [valuePath]: value,\n              })\n            : this.dispatch(\n                policyEditorJsonVisit((currentJson) => {\n                  _set(currentJson, this.policyPath(valuePath), value);\n                })\n              ),\n        items\n      ),\n    };\n  }\n\n  createNumberEditControl(\n    title: string,\n    valuePath: string,\n    fieldFactory: FieldFactoryVisitor<T>\n  ): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new NumberEditFieldControl(\n        valuePath,\n        valuePath.length === 0 ? this.json : _get(this.json, valuePath),\n        (fieldFactory.callDefault(undefined) as any)[valuePath],\n        (value) => {\n          this.rowIndex === -1\n            ? fieldFactory.create({\n                ...this.json,\n                [valuePath]: parseInt(value),\n              })\n            : this.dispatch(\n                policyEditorJsonVisit((currentJson) => {\n                  _set(\n                    currentJson,\n                    this.policyPath(valuePath),\n                    parseInt(value)\n                  );\n                })\n              );\n        }\n      ),\n    };\n  }\n\n  createTextEditControl(\n    title: string,\n    valuePath: string,\n    fieldFactory: FieldFactoryVisitor<T>\n  ): GridFieldValue {\n    return {\n      title,\n      errorPath: this.errorPath(valuePath),\n      controlInfo: new TextEditFieldControl(\n        valuePath,\n        valuePath.length === 0 ? this.json : _get(this.json, valuePath),\n        (fieldFactory.callDefault(undefined) as any)[valuePath],\n        (value) => {\n          this.rowIndex === -1\n            ? fieldFactory.create({\n                ...this.json,\n                [valuePath]: value,\n              })\n            : this.dispatch(\n                policyEditorJsonVisit((currentJson) => {\n                  _set(currentJson, this.policyPath(valuePath), value);\n                })\n              );\n        },\n        undefined,\n        { variant: \"outlined\", size: \"small\" }\n      ),\n    };\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { MethodElement } from \"../../../../model/policy-schema/policy.definitions\";\nimport { MethodsFieldFactory } from \"./methods-field.factory\";\n\nexport class MethodsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<MethodElement>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<MethodElement>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"methods\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new MethodsFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.methods.splice(this.rowIndex, 1);\n\n        if (currentJson.policy.methods.length === 0)\n          delete currentJson.policy.methods;\n      })\n    );\n  }\n}\n","import { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { get as _get } from \"lodash\";\nimport defaultPolicy from \"../../../../model/nginx-const/defaut-policy.nginx.json\";\n\nexport function createDefaultValues<T extends FieldResolverVisitor>(\n  json: any,\n  path: string,\n  keyField: ((json: any) => string) | string | undefined,\n  resolverFactory: (json: any) => T\n): T[] {\n  if (!_get(defaultPolicy, path)) return [];\n\n  const resolvedKey: string | undefined =\n    keyField !== undefined\n      ? typeof keyField === \"function\"\n        ? keyField(json)\n        : keyField\n      : undefined;\n\n  return _get(defaultPolicy, path)\n    .reduce((r: any, v: any) => {\n      const item = _get(json, path);\n      if (\n        !item ||\n        item.find((x: any) => {\n          return (\n            (resolvedKey === undefined ? v : _get(v, resolvedKey)) ===\n            (resolvedKey === undefined ? x : _get(x, resolvedKey))\n          );\n        }) === undefined\n      ) {\n        r.push(v);\n      }\n      return r;\n    }, [] as any)\n    .map((s: any) => {\n      return resolverFactory(s);\n    });\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\n\nimport { get as _get } from \"lodash\";\nimport { MethodsFieldResolver } from \"../../imp/methods-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class MethodsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Method Name\"];\n    const methods = _get(this.json, \"policy.methods\");\n\n    const visitors: FieldResolverVisitor[] = methods\n      ? this.json.policy.methods.map((m: any, index: number) => {\n          return new MethodsFieldResolver(index, this.dispatch, m);\n        })\n      : [];\n\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.methods\",\n      \"name\",\n      (json: any) => new MethodsFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import { styled } from \"@mui/styles\";\n\nexport const ContentPageControl = styled(\"div\")({\n  height: \"calc(100% - 56px)\",\n});\n","import React from \"react\";\nimport { AppBar, Toolbar } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\n\nexport type ToolbarPageControlProps = {\n  headerText: string;\n};\n\nexport const ToolbarPageControl: React.FunctionComponent<ToolbarPageControlProps> =\n  ({ headerText, children }) => {\n    return (\n      <AppBar\n        position=\"sticky\"\n        elevation={0}\n        sx={{\n          backgroundColor: \"white\",\n          color: \"black\",\n        }}\n      >\n        <Toolbar variant=\"dense\">\n          <Typography\n            style={{\n              fontSize: \"18px\",\n              lineHeight: \"26px\",\n              fontWeight: 600,\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            {headerText}\n          </Typography>\n          <div style={{ textAlign: \"right\", width: \"100%\" }}>{children}</div>\n        </Toolbar>\n      </AppBar>\n    );\n  };\n","import { withStyles } from \"@mui/styles\";\nimport { Button } from \"@mui/material\";\n\nexport const ToolbarButtonPageControl = withStyles(() => ({\n  root: {\n    marginLeft: \"10px\",\n    height: \"33px\",\n    fontSize: \"14px\",\n    lineHeight: \"20px\",\n    textTransform: \"capitalize\",\n  },\n}))(Button);\n","import * as React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { MethodsFieldFactory } from \"../../../store/policy-editor/visitor/imp/methods-field.factory\";\nimport { MethodsVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/methods.visitor-factory\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\n\nexport const MethodsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const methodsFieldFactory = useVisitor(MethodsFieldFactory);\n  const methodsVisitorFactory = useVisitor(MethodsVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = methodsVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Methods\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => methodsFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add Method\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => methodsFieldFactory.create(undefined)}\n          addItemInscription=\"add Method\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { URLElement } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultUrls } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class UrlsFieldFactory extends VisitorFactoryBase<URLElement> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.urls\", dispatch, json, defaultUrls);\n  }\n}\n","import { get as _get, unset as _unset } from \"lodash\";\n\nexport function policyJsonFieldRemover(\n  currentJson: any,\n  basePath: string,\n  rowIndex: number\n) {\n  _get(currentJson, `policy.${basePath}`).splice(rowIndex, 1);\n  if (_get(currentJson, `policy.${basePath}`).length === 0) {\n    _unset(currentJson, `policy.${basePath}`);\n  }\n\n  const arr = _get(currentJson, `policy.${basePath}`);\n  if (arr === undefined) return;\n\n  arr.forEach((x: any, index: number) => {\n    if (x.wildcardOrder !== undefined) {\n      x.wildcardOrder = index;\n    }\n  });\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { UrlsFieldFactory } from \"./urls-field.factory\";\nimport { policyJsonFieldRemover } from \"../services/policy-json.field-remover\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport {\n  HostNameTypeEnum,\n  URLElement,\n  URLProtocol,\n} from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class UrlsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<URLElement>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<URLElement>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  get basePath(): string {\n    return \"urls\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    const fieldFactory = new UrlsFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Protocol\",\n        \"protocol\",\n        fieldFactory,\n        Object.values(URLProtocol)\n      ),\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Method\",\n        \"method\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Path\",\n        \"name\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        fieldFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Signatures\",\n        \"attackSignaturesCheck\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Metachars\",\n        \"metacharsOnUrlCheck\",\n        fieldFactory\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        policyJsonFieldRemover(currentJson, this.basePath, this.rowIndex);\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new UrlsFieldFactory(this.dispatch, this.json);\n    return [\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Protocol\",\n        \"protocol\",\n        fieldFactory,\n        Object.values(URLProtocol)\n      ),\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Method\",\n        \"method\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Path\",\n        \"name\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { UrlsFieldResolver } from \"../../imp/urls-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class UrlsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Protocol\", \"Method\", \"Path\"];\n    const urls = _get(this.json, \"policy.urls\");\n\n    const visitors: FieldResolverVisitor[] = urls\n      ? this.json.policy.urls.map((m: any, index: number) => {\n          return new UrlsFieldResolver(index, this.dispatch, m);\n        })\n      : [];\n\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.urls\",\n      \"name\",\n      (json: any) => new UrlsFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import { Policy } from \"../../../../model/policy-schema/policy.definitions\";\nimport move from \"lodash-move\";\n\nexport class PolicyJsonReorderServices {\n  constructor(private currentJson: Policy) {}\n\n  changeOrder(\n    path: string,\n    wildCardOrderValueName: string,\n    sourceIndex: number,\n    destinationIndex: number\n  ): void {\n    if (\n      !this.currentJson ||\n      !(this.currentJson as any)[path] ||\n      !(this.currentJson as any)[path][sourceIndex]\n    )\n      return;\n\n    (this.currentJson as any)[path] = move(\n      (this.currentJson as any)[path],\n      sourceIndex,\n      destinationIndex\n    );\n\n    (this.currentJson as any)[path].forEach((x: any, index: number) => {\n      x[wildCardOrderValueName] = index;\n    });\n  }\n}\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { UrlsFieldFactory } from \"../../../store/policy-editor/visitor/imp/urls-field.factory\";\nimport { UrlsVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/urls.visitor-factory\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { policyEditorJsonVisit } from \"../../../store/policy-editor/policy-editor.actions\";\nimport { PolicyJsonReorderServices } from \"../../../store/policy-editor/visitor/services/policy-json.reorder.services\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const UrlsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const urlsFieldFactory = useVisitor(UrlsFieldFactory);\n  const urlsVisitorFactory = useVisitor(UrlsVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = urlsVisitorFactory.getResolvers();\n\n  const dispatch = usePolicyEditorDispatch();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"URLs\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => urlsFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add URL\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          settingsName=\"URLs\"\n          dnd={true}\n          onAddItem={() => urlsFieldFactory.create(undefined)}\n          addItemInscription=\"add URL\"\n          onDragEnd={(result) =>\n            dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                const urlServices = new PolicyJsonReorderServices(\n                  currentJson.policy\n                );\n                urlServices.changeOrder(\n                  \"urls\",\n                  \"wildcardOrder\",\n                  result.source.index,\n                  result.destination?.index ?? 0\n                );\n              })\n            )\n          }\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { Filetype } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultFileTypes } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class FileTypesFieldFactory extends VisitorFactoryBase<Filetype> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.filetypes\", dispatch, json, defaultFileTypes);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { FileTypesFieldFactory } from \"./file-types-field.factory\";\nimport { policyJsonFieldRemover } from \"../services/policy-json.field-remover\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport {\n  Filetype,\n  HostNameTypeEnum,\n} from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class FileTypesFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<Filetype>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<Filetype>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  get basePath(): string {\n    return \"filetypes\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fileTypesFiledFactory = new FileTypesFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Filetype Name\",\n        \"name\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        fileTypesFiledFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        policyJsonFieldRemover(currentJson, this.basePath, this.rowIndex);\n      })\n    );\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    const fileTypesFiledFactory = new FileTypesFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Filetype Name\",\n        \"name\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        fileTypesFiledFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Allowed\",\n        \"allowed\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check URL Length\",\n        \"checkUrlLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"URL Length\",\n        \"urlLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check QS Length\",\n        \"checkQueryStringLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"QS Length\",\n        \"queryStringLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check POST Data Length\",\n        \"checkPostDataLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"POST Data Length\",\n        \"postDataLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Request Length\",\n        \"checkRequestLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"Request Length\",\n        \"requestLength\",\n        fileTypesFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Response\",\n        \"responseCheck\",\n        fileTypesFiledFactory\n      ),\n    ];\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { FileTypesFieldResolver } from \"../../imp/file-types-field.resolver\";\n\nimport { get as _get } from \"lodash\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class FileTypesVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Name\", \"Type\"];\n    const fileTypes = _get(this.json, \"policy.filetypes\");\n\n    const visitors: FieldResolverVisitor[] = fileTypes\n      ? this.json.policy.filetypes.map((ft: any, index: number) => {\n          return new FileTypesFieldResolver(index, this.dispatch, ft);\n        })\n      : [];\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.filetypes\",\n      \"name\",\n      (json: any) => new FileTypesFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { FileTypesFieldFactory } from \"../../../store/policy-editor/visitor/imp/file-types-field.factory\";\nimport { FileTypesVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/file-types.visitor-factory\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { policyEditorJsonVisit } from \"../../../store/policy-editor/policy-editor.actions\";\nimport { PolicyJsonReorderServices } from \"../../../store/policy-editor/visitor/services/policy-json.reorder.services\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nexport const FileTypesPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const filetypesFieldFactory = useVisitor(FileTypesFieldFactory);\n  const filetypesVisitorFactory = useVisitor(FileTypesVisitorFactory);\n\n  const dispatch = usePolicyEditorDispatch();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = filetypesVisitorFactory.getResolvers();\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"File Types\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => filetypesFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add Filetype\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          settingsName=\"Filetypes\"\n          dnd={true}\n          onAddItem={() => filetypesFieldFactory.create(undefined)}\n          addItemInscription=\"add Filetype\"\n          onDragEnd={(result) =>\n            dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                const urlServices = new PolicyJsonReorderServices(\n                  currentJson.policy\n                );\n                urlServices.changeOrder(\n                  \"filetypes\",\n                  \"wildcardOrder\",\n                  result.source.index,\n                  result.destination?.index ?? 0\n                );\n              })\n            )\n          }\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { Header } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultHeaders } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class HeadersFieldFactory extends VisitorFactoryBase<Header> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.headers\", dispatch, json, defaultHeaders);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { HeadersFieldFactory } from \"./headers-field.factory\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport {\n  Header,\n  HostNameTypeEnum,\n} from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class HeadersFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<Header>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<Header>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  get basePath(): string {\n    return \"headers\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    const headersFiledFactory = new HeadersFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Header Name\",\n        \"name\",\n        headersFiledFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        headersFiledFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Mandatory\",\n        \"mandatory\",\n        headersFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Signatures\",\n        \"checkSignatures\",\n        headersFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Normalize HTML\",\n        \"htmlNormalization\",\n        headersFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Decode Base64\",\n        \"decodeValueAsBase64\",\n        headersFiledFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Allow Repeated\",\n        \"allowRepeatedOccurrences\",\n        headersFiledFactory\n      ),\n    ];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const headersFiledFactory = new HeadersFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Header Name\",\n        \"name\",\n        headersFiledFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        headersFiledFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.headers.splice(this.rowIndex, 1);\n\n        if (currentJson.policy.headers.length === 0)\n          delete currentJson.policy.headers;\n      })\n    );\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { HeadersFieldResolver } from \"../../imp/headers-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class HeadersVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Name\", \"Type\"];\n\n    const headers = _get(this.json, \"policy.headers\");\n\n    const visitors: FieldResolverVisitor[] = headers\n      ? this.json.policy.headers.map((h: any, index: number) => {\n          return new HeadersFieldResolver(index, this.dispatch, h);\n        })\n      : [];\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.headers\",\n      \"name\",\n      (json: any) => new HeadersFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { HeadersFieldFactory } from \"../../../store/policy-editor/visitor/imp/headers-field.factory\";\nimport { HeadersVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/headers.visitor-factory\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const HeadersPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const headersFieldFactory = useVisitor(HeadersFieldFactory);\n  const headersVisitorFactory = useVisitor(HeadersVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = headersVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Headers\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => headersFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add Header\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          settingsName=\"Headers\"\n          onAddItem={() => headersFieldFactory.create(undefined)}\n          addItemInscription=\"add Header\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { ParameterElement } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultParameters } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class ParametersFieldFactory extends VisitorFactoryBase<ParameterElement> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.parameters\", dispatch, json, defaultParameters);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { ParametersFieldFactory } from \"./parameters-field.factory\";\nimport {\n  HostNameTypeEnum,\n  Level,\n  ParameterElement,\n  ParameterLocation,\n  ValueType,\n} from \"../../../../model/policy-schema/policy.definitions\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\n\nexport class ParametersFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<ParameterElement>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<ParameterElement>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  get basePath(): string {\n    return \"parameters\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    const parametersFieldFactory = new ParametersFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        parametersFieldFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Level\",\n        \"level\",\n        parametersFieldFactory,\n        Object.values(Level)\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Location\",\n        \"parameterLocation\",\n        parametersFieldFactory,\n        Object.values(ParameterLocation)\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Value type\",\n        \"valueType\",\n        parametersFieldFactory,\n        Object.values(ValueType)\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Allow Empty Value\",\n        \"allowEmptyValue\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Max Value Length\",\n        \"checkMaxValueLength\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Allow Repeated\",\n        \"allowRepeatedParameterName\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Sensitive\",\n        \"sensitiveParameter\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Attack Signatures\",\n        \"attackSignaturesCheck\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Metachars\",\n        \"checkMetachars\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Check Metachars on Value\",\n        \"metacharsOnParameterValueCheck\",\n        parametersFieldFactory\n      ),\n    ];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const parametersFieldFactory = new ParametersFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        parametersFieldFactory\n      ),\n      this.gridFieldValueFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        parametersFieldFactory,\n        Object.values(HostNameTypeEnum)\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.parameters.splice(this.rowIndex, 1);\n\n        if (currentJson.policy.parameters.length === 0) {\n          delete currentJson.policy.parameters;\n        }\n      })\n    );\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { ParametersFieldResolver } from \"../../imp/parameters-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class ParametersVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Name\", \"Type\"];\n\n    const parameters = _get(this.json, \"policy.parameters\");\n\n    const visitors: FieldResolverVisitor[] = parameters\n      ? this.json.policy.parameters.map((m: any, index: number) => {\n          return new ParametersFieldResolver(index, this.dispatch, m);\n        })\n      : [];\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.parameters\",\n      \"name\",\n      (json: any) => new ParametersFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { ParametersFieldFactory } from \"../../../store/policy-editor/visitor/imp/parameters-field.factory\";\nimport { ParametersVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/parameters.visitor-factory\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\n\nexport const ParametersPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const parametersFieldFactory = useVisitor(ParametersFieldFactory);\n  const parametersVisitorFactory = useVisitor(ParametersVisitorFactory);\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = parametersVisitorFactory.getResolvers();\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Parameters\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => parametersFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add Parameter\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          settingsName=\"Parameters\"\n          onAddItem={() => parametersFieldFactory.create(undefined)}\n          addItemInscription=\"add Parameter\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { OpenAPIFile } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultOpenApi } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class OpenApiFieldFactory extends VisitorFactoryBase<OpenAPIFile> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.open-api-files\", dispatch, json, defaultOpenApi);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { OpenAPIFile } from \"../../../../model/policy-schema/policy.definitions\";\nimport { OpenApiFieldFactory } from \"./open-api-field.factory\";\n\nexport class OpenApiFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<OpenAPIFile>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<OpenAPIFile>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"open-api-files\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new OpenApiFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Link\",\n        \"link\",\n        fieldFactory\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"open-api-files\"].splice(this.rowIndex, 1);\n\n        if (currentJson.policy[\"open-api-files\"].length === 0) {\n          delete currentJson.policy[\"open-api-files\"];\n        }\n      })\n    );\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { OpenApiFieldResolver } from \"../../imp/open-api-field.resolver\";\n\nexport class OpenApiVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Link\"];\n\n    if (_get(this.json, \"policy.open-api-files\") === undefined) {\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n        default: [] as FieldResolverVisitor[],\n      };\n    }\n\n    const visitors: FieldResolverVisitor[] = this.json.policy[\n      \"open-api-files\"\n    ].map((m: any, index: number) => {\n      return new OpenApiFieldResolver(index, this.dispatch, m);\n    });\n\n    return {\n      titles,\n      visitors,\n      default: [] as FieldResolverVisitor[],\n    };\n  }\n}\n","import * as React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { OpenApiFieldFactory } from \"../../../store/policy-editor/visitor/imp/open-api-field.factory\";\nimport { OpenApiVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/open-api.visitor-factory\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const OpenApiPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const openApiFieldFactory = useVisitor(OpenApiFieldFactory);\n  const openApiVisitorFactory = useVisitor(OpenApiVisitorFactory);\n\n  const { titles, visitors } = openApiVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Open API References URLs\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => openApiFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add OpenAPI Link\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          onAddItem={() => openApiFieldFactory.create(undefined)}\n          addItemInscription=\"add Url\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { Evasion } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultEvasions } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class EvasionsFieldFactory extends VisitorFactoryBase<Evasion> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.blocking-settings.evasions\", dispatch, json, defaultEvasions);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { EvasionsFieldFactory } from \"./evasions-field.factory\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { Evasion } from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class EvasionsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<Evasion>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<Evasion>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  get basePath(): string {\n    return \"blocking-settings.evasions\";\n  }\n\n  key(): string {\n    return this.json.description;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"blocking-settings\"].evasions.splice(\n          this.rowIndex,\n          1\n        );\n\n        if (currentJson.policy[\"blocking-settings\"].evasions.length === 0)\n          delete currentJson.policy[\"blocking-settings\"].evasions;\n        if (Object.keys(currentJson.policy[\"blocking-settings\"]).length === 0) {\n          delete currentJson.policy[\"blocking-settings\"];\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new EvasionsFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.gridFieldValueFactory.createLabelFieldControl(\n        \"Description\",\n        \"description\"\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Enabled\",\n        \"enabled\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"Max Decoding Passes\",\n        \"maxDecodingPasses\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { EvasionsFieldResolver } from \"../../imp/evasions-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\nimport { get as _get } from \"lodash\";\n\nexport class EvasionsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Description\", \"Enabled\", \"Max Decoding Passes\"];\n\n    const evasions = _get(this.json, \"policy['blocking-settings'].evasions\");\n    const visitors: FieldResolverVisitor[] = evasions\n      ? evasions.map((e: any, index: number) => {\n          return new EvasionsFieldResolver(index, this.dispatch, e);\n        })\n      : [];\n\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.blocking-settings.evasions\",\n      \"description\",\n      (json: any) => new EvasionsFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Popover } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\n\nexport type MenuSearchPopupProps = {\n  open: boolean;\n  anchorEl: any;\n  items: string[];\n  onClose: () => void;\n  onSelect: (item: string, index: number) => void;\n};\n\nexport const MenuSearchPopupControl: React.FunctionComponent<MenuSearchPopupProps> =\n  ({ open, anchorEl, items, onSelect, onClose }) => {\n    const [filter, setFilter] = useState(\"\");\n    const [selectedIndex, setSelectedIndex] = useState<number>(0);\n    const selectedRef = useRef<null | HTMLElement>(null);\n\n    const strItems = JSON.stringify(items);\n    const filteredItems = items\n      .filter((x) => x.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n      .sort((a, b) => {\n        if (a < b) return -1;\n        if (a > b) return 1;\n        return 0;\n      });\n\n    function getIndex(item: string) {\n      return items.indexOf(item);\n    }\n\n    useEffect(() => {\n      if (!open) return; // avoid blinking....\n      setFilter(\"\");\n      setSelectedIndex(0);\n    }, [open]);\n\n    useEffect(() => {\n      setSelectedIndex(0);\n    }, [strItems, filter]);\n\n    useEffect(() => {\n      selectedRef?.current &&\n        scrollIntoView(selectedRef?.current, {\n          scrollMode: \"if-needed\",\n          block: \"nearest\",\n          inline: \"nearest\",\n        });\n    }, [selectedIndex]);\n\n    function handleKeyDown(e: any) {\n      if (e.key === \"ArrowUp\") {\n        if (selectedIndex > 0) {\n          setSelectedIndex(selectedIndex - 1);\n        }\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (e.key === \"ArrowDown\") {\n        if (selectedIndex < filteredItems.length - 1) {\n          setSelectedIndex(selectedIndex + 1);\n        }\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (e.key === \"Enter\") {\n        const x = filteredItems[selectedIndex];\n        onSelect(x, getIndex(x));\n\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n\n    return (\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={() => {\n          onClose();\n        }}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <Box style={{ overflow: \"hidden\" }}>\n          <Box>\n            <TextField\n              InputProps={{\n                margin: \"dense\",\n              }}\n              InputLabelProps={{\n                margin: \"dense\",\n              }}\n              value={filter}\n              onChange={(x) => setFilter(x.target.value)}\n              variant=\"outlined\"\n              label=\"Filter...\"\n              style={{\n                width: \"calc(100% - 20px)\",\n                margin: \"10px\",\n              }}\n            />\n          </Box>\n          <Box style={{ overflowY: \"auto\", maxHeight: \"60vh\" }}>\n            <List>\n              {filteredItems.map((x, index: number) =>\n                index === selectedIndex ? (\n                  <>\n                    <ListItem\n                      button\n                      key={x}\n                      onClick={() => onSelect(x, getIndex(x))}\n                      selected={index === selectedIndex}\n                    >\n                      <ListItemText primary={x} ref={selectedRef} />\n                    </ListItem>\n                  </>\n                ) : (\n                  <ListItem\n                    button\n                    key={x}\n                    onClick={() => onSelect(x, getIndex(x))}\n                  >\n                    <ListItemText primary={x} />\n                  </ListItem>\n                )\n              )}\n            </List>\n          </Box>\n        </Box>\n      </Popover>\n    );\n  };\n","import React, { useRef, useState } from \"react\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../../controls/grid.table-value.control\";\nimport { EvasionsFieldFactory } from \"../../../../store/policy-editor/visitor/imp/evasions-field.factory\";\nimport { EvasionsVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/evasions.visitor-factory\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { MenuSearchPopupControl } from \"../../controls/menu-search-popup.control\";\nimport { EvasionDescription } from \"../../../../model/policy-schema/policy.definitions\";\nimport { usePolicyEditorState } from \"../../../../store/policy-editor/policy-editor.hooks\";\nimport { ToolbarPageControl } from \"../../controls/page-controls/toolbar.page-control\";\nimport { ContentPageControl } from \"../../controls/page-controls/content.page-control\";\nimport { ToolbarButtonPageControl } from \"../../controls/page-controls/toolbar-button.page-control\";\n\nexport const EvasionsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const evasionsFieldFactory = useVisitor(EvasionsFieldFactory);\n  const evasionsVisitorFactory = useVisitor(EvasionsVisitorFactory);\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = evasionsVisitorFactory.getResolvers();\n  const allEvasions = Object.values(EvasionDescription);\n\n  const btnRef = useRef<null | HTMLDivElement>(null);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  function handleSelect(item: string) {\n    evasionsFieldFactory.create({\n      description: item as EvasionDescription,\n      enabled: true,\n      maxDecodingPasses: 2,\n    });\n    setAnchorEl(null);\n  }\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Evasions\">\n        <div ref={btnRef}>\n          <ToolbarButtonPageControl\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n            endIcon={<ExpandMore />}\n          >\n            Add Evasion\n          </ToolbarButtonPageControl>\n        </div>\n        <MenuSearchPopupControl\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          items={allEvasions}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          onSelect={(item) => handleSelect(item)}\n        />\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => btnRef.current && setAnchorEl(btnRef.current)}\n          addItemInscription=\"add Evasions\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { HTTPProtocol } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultHttpProtocols } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class HttpProtocolsFieldFactory extends VisitorFactoryBase<HTTPProtocol> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.blocking-settings.http-protocols\",\n      dispatch,\n      json,\n      defaultHttpProtocols\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { HttpProtocolsFieldFactory } from \"./http-protocols-field.factory\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { HTTPProtocol } from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class HttpProtocolsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<HTTPProtocol>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<HTTPProtocol>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.description;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"blocking-settings.http-protocols\";\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"blocking-settings\"][\"http-protocols\"].splice(\n          this.rowIndex,\n          1\n        );\n\n        if (\n          currentJson.policy[\"blocking-settings\"][\"http-protocols\"].length === 0\n        ) {\n          delete currentJson.policy[\"blocking-settings\"][\"http-protocols\"];\n        }\n\n        if (Object.keys(currentJson.policy[\"blocking-settings\"]).length === 0) {\n          delete currentJson.policy[\"blocking-settings\"];\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new HttpProtocolsFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createLabelFieldControl(\n        \"Description\",\n        \"description\"\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Enabled\",\n        \"enabled\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"Max Headers\",\n        \"maxHeaders\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"Max Params\",\n        \"maxParams\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\n\nimport { get as _get } from \"lodash\";\nimport { HttpProtocolsFieldResolver } from \"../../imp/http-protocols-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class HttpProtocolsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Description\", \"Enabled\", \"Max Headers\", \"Max Params\"];\n\n    const httpProtocols = _get(\n      this.json,\n      \"policy.blocking-settings.http-protocols\"\n    );\n    const visitors: FieldResolverVisitor[] = httpProtocols\n      ? httpProtocols.map((e: any, index: number) => {\n          return new HttpProtocolsFieldResolver(index, this.dispatch, e);\n        })\n      : [];\n\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.blocking-settings.http-protocols\",\n      \"description\",\n      (json: any) => new HttpProtocolsFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import React, { useRef, useState } from \"react\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../../controls/grid.table-value.control\";\nimport { HttpProtocolsFieldFactory } from \"../../../../store/policy-editor/visitor/imp/http-protocols-field.factory\";\nimport { HttpProtocolsVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/http-protocols.visitor-factory\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { MenuSearchPopupControl } from \"../../controls/menu-search-popup.control\";\nimport { HTTPProtocolDescription } from \"../../../../model/policy-schema/policy.definitions\";\nimport { usePolicyEditorState } from \"../../../../store/policy-editor/policy-editor.hooks\";\nimport { ContentPageControl } from \"../../controls/page-controls/content.page-control\";\nimport { ToolbarPageControl } from \"../../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../../controls/page-controls/toolbar-button.page-control\";\n\nexport const HttpProtocolsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const httpProtocolsFieldFactory = useVisitor(HttpProtocolsFieldFactory);\n  const httpProtocolsVisitorFactory = useVisitor(HttpProtocolsVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n  const btnRef = useRef<null | HTMLDivElement>(null);\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = httpProtocolsVisitorFactory.getResolvers();\n  const allHttpProtocols = Object.values(HTTPProtocolDescription);\n\n  function handleSelect(description: string) {\n    httpProtocolsFieldFactory.create({\n      maxParams: 1,\n      maxHeaders: 1,\n      enabled: true,\n      description: description as HTTPProtocolDescription,\n    });\n\n    setAnchorEl(null);\n  }\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"HTTP Compliance\">\n        <div ref={btnRef}>\n          <ToolbarButtonPageControl\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n            endIcon={<ExpandMore />}\n          >\n            Add Http Protocol Compliance\n          </ToolbarButtonPageControl>\n        </div>\n        <MenuSearchPopupControl\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          items={allHttpProtocols}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          onSelect={(item) => handleSelect(item)}\n        />\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => btnRef.current && setAnchorEl(btnRef.current)}\n          addItemInscription=\"add Protocol Compliance\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","export class ViolationsNginxConst {\n  static getAllViolations: () => {\n    name: string;\n    title: string;\n    alarm: boolean;\n    block: boolean;\n    disabled: boolean;\n  }[] = () => {\n    return [\n      {\n        name: \"VIOL_ASM_COOKIE_MODIFIED\",\n        title: \"Modified ASM cookie\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_ATTACK_SIGNATURE\",\n        title: \"Attack signature detected\",\n        alarm: false,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_BLACKLISTED_IP\",\n        title: \"IP is in the deny list\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_BOT_CLIENT\",\n        title: \"Bot Client Detected\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_COOKIE_EXPIRED\",\n        title: \"Expired timestamp\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_COOKIE_LENGTH\",\n        title: \"Illegal cookie length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_COOKIE_MALFORMED\",\n        title: \"Cookie not RFC-compliant\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_COOKIE_MODIFIED\",\n        title: \"Modified domain cookie(s)\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_DATA_GUARD\",\n        title: \"Data Guard: Information leakage detected\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_ENCODING\",\n        title: \"Failed to convert character\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_EVASION\",\n        title: \"Evasion technique detected\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_FILETYPE\",\n        title: \"Illegal file type\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_FILE_UPLOAD\",\n        title: \"Disallowed file upload content detected\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_FILE_UPLOAD_IN_BODY\",\n        title: \"Disallowed file upload content detected in body\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_GRPC_FORMAT\",\n        title: \"gRPC data does not comply with format settings\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_GRPC_MALFORMED\",\n        title: \"Malformed gRPC data\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_GRPC_METHOD\",\n        title: \"Illegal gRPC method\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_HEADER_LENGTH\",\n        title: \"Illegal header length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_HEADER_METACHAR\",\n        title: \"Illegal meta character in header\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_HTTP_PROTOCOL\",\n        title: \"HTTP protocol compliance failed\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_HTTP_RESPONSE_STATUS\",\n        title: \"Illegal HTTP response status\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_JSON_FORMAT\",\n        title: \"JSON data does not comply with format settings\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_JSON_MALFORMED\",\n        title: \"Malformed JSON data\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_JSON_SCHEMA\",\n        title: \"JSON data does not comply with JSON schema\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_MANDATORY_PARAMETER\",\n        title: \"Mandatory parameter is missing\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_MANDATORY_REQUEST_BODY\",\n        title: \"Mandatory request body is missing\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_METHOD\",\n        title: \"Illegal method\tAlarm\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER\",\n        title: \"Illegal parameter\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_ARRAY_VALUE\",\n        title: \"Illegal parameter array value\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_DATA_TYPE\",\n        title: \"Illegal parameter data type\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_EMPTY_VALUE\",\n        title: \"Illegal empty parameter value\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_LOCATION\",\n        title: \"Illegal parameter location\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_MULTIPART_NULL_VALUE\",\n        title: \"Null in multi-part parameter value\",\n        alarm: false,\n        block: false,\n        disabled: true,\n      },\n      {\n        name: \"VIOL_PARAMETER_NAME_METACHAR\",\n        title: \"Illegal meta character in parameter name\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_NUMERIC_VALUE\",\n        title: \"Illegal parameter numeric value\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_REPEATED\",\n        title: \"Illegal repeated parameter name\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_STATIC_VALUE\",\n        title: \"Illegal static parameter value\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_VALUE_BASE64\",\n        title: \"Illegal Base64 value\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_VALUE_LENGTH\",\n        title: \"Illegal parameter value length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_VALUE_METACHAR\",\n        title: \"Illegal meta character in value\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_PARAMETER_VALUE_REGEXP\",\n        title: \"Parameter value does not comply with regular expression\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_POST_DATA_LENGTH\",\n        title: \"Illegal POST data length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_QUERY_STRING_LENGTH\",\n        title: \"Illegal query string length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_RATING_THREAT\",\n        title: \"Request is likely a threat\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_RATING_NEED_EXAMINATION\",\n        title: \"Request needs further examination\",\n        alarm: false,\n        block: false,\n        disabled: true,\n      },\n      {\n        name: \"VIOL_REQUEST_LENGTH\",\n        title: \"Illegal request length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_REQUEST_MAX_LENGTH\",\n        title: \"Request length exceeds defined buffer size\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_THREAT_CAMPAIGN\",\n        title: \"Threat Campaign detected\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_URL\",\n        title: \"Illegal URL\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_URL_CONTENT_TYPE\",\n        title: \"Illegal request content type\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_URL_LENGTH\",\n        title: \"Illegal URL length\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_URL_METACHAR\",\n        title: \"Illegal meta character in URL\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_XML_FORMAT\",\n        title: \"XML data does not comply with format settings\",\n        alarm: true,\n        block: false,\n        disabled: false,\n      },\n      {\n        name: \"VIOL_XML_MALFORMED\",\n        title: \"Malformed XML data\",\n        alarm: true,\n        block: true,\n        disabled: false,\n      },\n    ];\n  };\n\n  static getAllServerTechnologies: () => string[] = () => {\n    return [\n      \"ASP\",\n      \"ASP.NET\",\n      \"AngularJS\",\n      \"Apache Struts\",\n      \"Apache Tomcat\",\n      \"Apache/NCSA HTTP Server\",\n      \"BEA Systems WebLogic Server\",\n      \"Backbone.js\",\n      \"CGI\",\n      \"Cisco\",\n      \"Citrix\",\n      \"CodeIgniter\",\n      \"CouchDB\",\n      \"Django\",\n      \"Elasticsearch\",\n      \"Ember.js\",\n      \"Express.js\",\n      \"Front Page Server Extensions (FPSE)\",\n      \"Google Web Toolkit\",\n      \"GraphQL\",\n      \"Handlebars\",\n      \"IBM DB2\",\n      \"IIS\",\n      \"JBoss\",\n      \"Java Servlets/JSP\",\n      \"JavaScript\",\n      \"JavaServer Faces (JSF)\",\n      \"Jenkins\",\n      \"Jetty\",\n      \"Joomla\",\n      \"Laravel\",\n      \"Lotus Domino\",\n      \"Macromedia ColdFusion\",\n      \"Macromedia JRun\",\n      \"Microsoft SQL Server\",\n      \"Microsoft Windows\",\n      \"MongoDB\",\n      \"MooTools\",\n      \"Mustache\",\n      \"MySQL\",\n      \"Nginx\",\n      \"Node.js\",\n      \"Novell\",\n      \"Oracle\",\n      \"Oracle Application Server\",\n      \"Oracle Identity Manager\",\n      \"Outlook Web Access\",\n      \"PHP\",\n      \"PostgreSQL\",\n      \"Prototype\",\n      \"Proxy Servers\",\n      \"Python\",\n      \"React\",\n      \"Redis\",\n      \"RequireJS\",\n      \"Ruby\",\n      \"SQLite\",\n      \"SSI (Server Side Includes)\",\n      \"SharePoint\",\n      \"Spring Boot\",\n      \"Sybase/ASE\",\n      \"TYPO3 CMS\",\n      \"UIKit\",\n      \"Underscore.js\",\n      \"Unix/Linux\",\n      \"Vue.js\",\n      \"WebDAV\",\n      \"WordPress\",\n      \"XML\",\n      \"ZURB Foundation\",\n      \"Zend\",\n      \"ef.js\",\n      \"jQuery\",\n    ];\n  };\n}\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { ServerTechnology } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultServerTechnologies } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class ServerTechnologiesFieldFactory extends VisitorFactoryBase<ServerTechnology> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.server-technologies\",\n      dispatch,\n      json,\n      defaultServerTechnologies\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { ServerTechnology } from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class ServerTechnologiesFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<ServerTechnology>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<ServerTechnology>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"server-technologies\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      this.gridFieldValueFactory.createLabelFieldControl(\n        \"\",\n        \"serverTechnologyName\"\n      ),\n    ];\n  }\n\n  remove() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"server-technologies\"].splice(this.rowIndex, 1);\n        if (currentJson.policy[\"server-technologies\"].length === 0) {\n          delete currentJson.policy[\"server-technologies\"];\n        }\n      })\n    );\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\n\nimport { get as _get } from \"lodash\";\nimport { ServerTechnologiesFieldResolver } from \"../../imp/server-technologies-field.resolver\";\n\nexport class ServerTechnologiesVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Server Technology Name\"];\n\n    if (_get(this.json, \"policy.server-technologies\") === undefined)\n      return {\n        titles: [],\n        visitors: [] as FieldResolverVisitor[],\n        default: [] as FieldResolverVisitor[],\n      };\n\n    const visitors: FieldResolverVisitor[] = this.json.policy[\n      \"server-technologies\"\n    ].map((s: any, index: number) => {\n      return new ServerTechnologiesFieldResolver(index, this.dispatch, s);\n    });\n\n    return {\n      titles,\n      visitors,\n      default: [] as FieldResolverVisitor[],\n    };\n  }\n}\n","import * as React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport Box from \"@mui/material/Box\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { useRef, useState } from \"react\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { ViolationsNginxConst } from \"../../../model/nginx-const/violations.nginx-const\";\nimport { ServerTechnologiesFieldFactory } from \"../../../store/policy-editor/visitor/imp/server-technologies-field.factory\";\nimport { ServerTechnologiesVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/server-technologies.visitor-factory\";\nimport { MenuSearchPopupControl } from \"../controls/menu-search-popup.control\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const ServerTechnologiesPage: React.VoidFunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const allServerTechnologies = ViolationsNginxConst.getAllServerTechnologies();\n\n  const classes = useStyles();\n\n  const fieldFactoryVisitor = useVisitor(ServerTechnologiesFieldFactory);\n  const serverTechnologiesVisitorFactory = useVisitor(\n    ServerTechnologiesVisitorFactory\n  );\n\n  const { titles, visitors } = serverTechnologiesVisitorFactory.getResolvers();\n  const btnRef = useRef<null | HTMLDivElement>(null);\n\n  function handleSelect(item: string) {\n    fieldFactoryVisitor.create({\n      serverTechnologyName: item,\n    });\n    setAnchorEl(null);\n  }\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Server Technologies\">\n        <div ref={btnRef}>\n          <ToolbarButtonPageControl\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n            endIcon={<ExpandMore />}\n          >\n            Add Server Technology\n          </ToolbarButtonPageControl>\n        </div>\n        <MenuSearchPopupControl\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          items={allServerTechnologies}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          onSelect={(item) => handleSelect(item)}\n        />\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          onAddItem={() => btnRef.current && setAnchorEl(btnRef.current)}\n          addItemInscription=\"add Server Technology\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { SignatureSet } from \"../../../../model/policy-schema/policy.definitions\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultSignatureSets } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class SignatureSetsFieldFactory extends VisitorFactoryBase<SignatureSet> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.signature-sets\", dispatch, json, defaultSignatureSets);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { SignatureSetsFieldFactory } from \"./signature-sets-field.factory\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { SignatureSet } from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class SignatureSetsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<SignatureSet>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<SignatureSet>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"signature-sets\";\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"signature-sets\"].splice(this.rowIndex, 1);\n\n        if (currentJson.policy[\"signature-sets\"].length === 0)\n          delete currentJson.policy[\"signature-sets\"];\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const signatureSetsFieldFactory = new SignatureSetsFieldFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.gridFieldValueFactory.createLabelFieldControl(\"Name\", \"name\"),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Alarm\",\n        \"alarm\",\n        signatureSetsFieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Block\",\n        \"block\",\n        signatureSetsFieldFactory\n      ),\n    ];\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { SignatureSetsFieldResolver } from \"../../imp/signature-sets-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nexport class SignatureSetsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Name\", \"Alarm\", \"Block\"];\n\n    const signatureSets = _get(this.json, \"policy.signature-sets\");\n\n    const visitors: FieldResolverVisitor[] = signatureSets\n      ? this.json.policy[\"signature-sets\"].map((e: any, index: number) => {\n          return new SignatureSetsFieldResolver(index, this.dispatch, e);\n        })\n      : [];\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.signature-sets\",\n      \"name\",\n      (json: any) => new SignatureSetsFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","export class SignatureSetsNginxConst {\n  static getAllNames: () => string[] = () => {\n    return [\n      \"All Response Signatures\",\n      \"All Signatures\",\n      \"Command Execution Signatures\",\n      \"Cross Site Scripting Signatures\",\n      \"Directory Indexing Signatures\",\n      \"Generic Detection Signatures\",\n      \"Generic Detection Signatures (High Accuracy)\",\n      \"Generic Detection Signatures (High/Medium Accuracy)\",\n      \"HTTP Response Splitting Signatures\",\n      \"High Accuracy Detection Evasion Signatures\",\n      \"High Accuracy Signatures\",\n      \"Information Leakage Signatures\",\n      \"Low Accuracy Signatures\",\n      \"Medium Accuracy Signatures\",\n      \"OS Command Injection Signatures\",\n      \"OWA Signatures\",\n      \"Other Application Attacks Signatures\",\n      \"Path Traversal Signatures\",\n      \"Predictable Resource Location Signatures\",\n      \"Remote File Include Signatures\",\n      \"SQL Injection Signatures\",\n      \"Server Side Code Injection Signatures\",\n      \"WebSphere signatures\",\n      \"XPath Injection Signatures\",\n    ];\n  };\n}\n","import React, { useRef, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../../controls/grid.table-value.control\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { SignatureSetsFieldFactory } from \"../../../../store/policy-editor/visitor/imp/signature-sets-field.factory\";\nimport { SignatureSetsVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/signature-sets.visitor-factory\";\nimport { usePolicyEditorState } from \"../../../../store/policy-editor/policy-editor.hooks\";\nimport { MenuSearchPopupControl } from \"../../controls/menu-search-popup.control\";\nimport { SignatureSetsNginxConst } from \"../../../../model/nginx-const/signature-sets.nginx-const\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { ToolbarPageControl } from \"../../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../../controls/page-controls/content.page-control\";\n\nexport const SignatureSetsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const signatureSetsFieldFactory = useVisitor(SignatureSetsFieldFactory);\n  const signatureSetsVisitorFactory = useVisitor(SignatureSetsVisitorFactory);\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = signatureSetsVisitorFactory.getResolvers();\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n  const allSignatureSets = SignatureSetsNginxConst.getAllNames();\n  const btnRef = useRef<null | HTMLDivElement>(null);\n\n  function handleSelect(item: string) {\n    signatureSetsFieldFactory.create({\n      name: item,\n      alarm: true,\n      block: true,\n    });\n    setAnchorEl(null);\n  }\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Signature Sets\">\n        <div ref={btnRef}>\n          <ToolbarButtonPageControl\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n            endIcon={<ExpandMore />}\n          >\n            Add Signature Set\n          </ToolbarButtonPageControl>\n        </div>\n        <MenuSearchPopupControl\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          items={allSignatureSets}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          onSelect={(item) => handleSelect(item)}\n        />\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => btnRef.current && setAnchorEl(btnRef.current)}\n          addItemInscription=\"add Signature\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDeploy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 21,\n    viewBox: \"0 0 20 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.8665 0.878095C18.5461 0.654044 18.1673 0.528389 17.7765 0.516547C17.3857 0.504704 16.9999 0.607189 16.6665 0.811428L1.23321 10.4364C0.860739 10.6666 0.573714 11.0123 0.415842 11.4207C0.257969 11.8291 0.237899 12.2779 0.358689 12.6988C0.47948 13.1197 0.734511 13.4896 1.08494 13.7521C1.43538 14.0146 1.86201 14.1554 2.29987 14.1531H6.54154V17.8364C6.54073 18.2025 6.63959 18.5619 6.8275 18.8761C7.01541 19.1902 7.28529 19.4473 7.60821 19.6198C7.8999 19.7691 8.22219 19.849 8.54987 19.8531C8.95435 19.8537 9.34951 19.7317 9.68321 19.5031L11.8415 18.0031L13.0915 19.6698C13.2761 19.9245 13.5176 20.1325 13.7969 20.2772C14.0761 20.4219 14.3854 20.4992 14.6999 20.5031C14.854 20.503 15.0077 20.4862 15.1582 20.4531C15.5393 20.3588 15.8847 20.1558 16.1525 19.8688C16.4203 19.5818 16.5989 19.2231 16.6665 18.8364L19.6665 2.86143C19.7326 2.48908 19.6926 2.10568 19.5511 1.75498C19.4096 1.40429 19.1724 1.10043 18.8665 0.878095ZM1.56654 12.3531C1.52795 12.1976 1.53849 12.034 1.59669 11.8848C1.65488 11.7356 1.75789 11.6081 1.89154 11.5198L17.2999 1.86976L8.94154 12.9031H2.27487C2.11367 12.8987 1.95807 12.8429 1.83069 12.744C1.70331 12.6451 1.61078 12.5082 1.56654 12.3531ZM8.98321 18.4698C8.86884 18.5475 8.73541 18.5924 8.59735 18.5998C8.45928 18.6071 8.32183 18.5766 8.19987 18.5114C8.07703 18.4465 7.97415 18.3494 7.90222 18.2305C7.8303 18.1116 7.79204 17.9754 7.79154 17.8364V14.1531H8.93321L11.0915 17.0281L8.98321 18.4698ZM15.4499 18.6364C15.4208 18.7805 15.3509 18.9131 15.2485 19.0186C15.1461 19.1241 15.0156 19.1979 14.8725 19.2312C14.7293 19.2646 14.5796 19.2561 14.4412 19.2068C14.3027 19.1575 14.1814 19.0694 14.0915 18.9531L9.99987 13.5281L18.4582 2.43643C18.4708 2.5081 18.4708 2.58142 18.4582 2.6531L15.4499 18.6364Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeploy);\nexport default __webpack_public_path__ + \"static/media/deploy.47c4c243.svg\";\nexport { ForwardRef as ReactComponent };","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicySignature } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultSignatures } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class SignaturesFieldFactory extends VisitorFactoryBase<PolicySignature> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.signatures\", dispatch, json, defaultSignatures);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { PolicySignature } from \"../../../../model/policy-schema/policy.definitions\";\nimport { SignaturesFieldFactory } from \"./signatures-field.factory\";\n\nexport class SignaturesFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<PolicySignature>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<PolicySignature>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"signatures\";\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy.signatures.splice(this.rowIndex, 1);\n\n        if (currentJson.policy.signatures.length === 0)\n          delete currentJson.policy.signatures;\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new SignaturesFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Enabled\",\n        \"enabled\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createNumberEditControl(\n        \"Signature Id\",\n        \"signatureId\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createTextEditControl(\n        \"Tag\",\n        \"tag\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { get as _get } from \"lodash\";\nimport { SignaturesFieldResolver } from \"../../imp/signatures-field.resolver\";\n\nexport class SignaturesVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Name\", \"Enabled\", \"Signature Id\", \"Tag\"];\n\n    if (_get(this.json, \"policy.signatures\") === undefined)\n      return {\n        titles: [],\n        visitors: [],\n        default: [] as FieldResolverVisitor[],\n      };\n\n    const visitors: FieldResolverVisitor[] = this.json.policy[\"signatures\"].map(\n      (e: any, index: number) => {\n        return new SignaturesFieldResolver(index, this.dispatch, e);\n      }\n    );\n\n    return {\n      titles,\n      visitors,\n      default: [] as FieldResolverVisitor[],\n    };\n  }\n}\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../../controls/grid.table-value.control\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { SignaturesFieldFactory } from \"../../../../store/policy-editor/visitor/imp/signatures-field.factory\";\nimport { SignaturesVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/signatures.visitor-factory\";\nimport { ToolbarPageControl } from \"../../controls/page-controls/toolbar.page-control\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarButtonPageControl } from \"../../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../../controls/page-controls/content.page-control\";\n\nexport const SignaturesPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const signaturesFieldFactory = useVisitor(SignaturesFieldFactory);\n  const signaturesVisitorFactory = useVisitor(SignaturesVisitorFactory);\n\n  const { titles, visitors } = signaturesVisitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Signatures\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => signaturesFieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add Signature\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={visitors}\n          onAddItem={() => signaturesFieldFactory.create(undefined)}\n          addItemInscription=\"add Signature\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { BlockingSettingsViolation } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultBlockingSettingsViolations } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class ViolationsFieldFactory extends VisitorFactoryBase<BlockingSettingsViolation> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.blocking-settings.violations\",\n      dispatch,\n      json,\n      defaultBlockingSettingsViolations\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { LabelFieldControl } from \"../../../../component/policy-editor/controls/field-control/label.field-control\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { ViolationsNginxConst } from \"../../../../model/nginx-const/violations.nginx-const\";\nimport { ViolationsFieldFactory } from \"./violations-field.factory\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { BlockingSettingsViolation } from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class ViolationsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private allViolations: any;\n  private gridFieldValueFactory: GridFieldValueFactory<BlockingSettingsViolation>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.allViolations = ViolationsNginxConst.getAllViolations();\n\n    this.gridFieldValueFactory =\n      new GridFieldValueFactory<BlockingSettingsViolation>(\n        this.rowIndex,\n        this.dispatch,\n        this.json,\n        this.basePath\n      );\n  }\n\n  private resolveViolationTitle(name: string): string {\n    const item = this.allViolations.find((x: any) => x.name === name);\n    if (!item) return name;\n\n    return item.title;\n  }\n\n  get basePath(): string {\n    return \"blocking-settings.violations\";\n  }\n\n  key(): string {\n    return this.resolveViolationTitle(this.json.name);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new ViolationsFieldFactory(this.dispatch, this.json);\n\n    return [\n      {\n        title: \"\",\n        errorPath: [`instance.[${this.basePath}][${this.rowIndex}].name`],\n        controlInfo: new LabelFieldControl(\n          \"name\",\n          this.resolveViolationTitle(this.json.name)\n        ),\n      },\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Alarm\",\n        \"alarm\",\n        fieldFactory\n      ),\n      this.gridFieldValueFactory.createCheckBoxFieldControl(\n        \"Block\",\n        \"block\",\n        fieldFactory\n      ),\n    ];\n  }\n\n  remove() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        currentJson.policy[\"blocking-settings\"].violations.splice(\n          this.rowIndex,\n          1\n        );\n        if (currentJson.policy[\"blocking-settings\"].violations.length === 0) {\n          delete currentJson.policy[\"blocking-settings\"].violations;\n        }\n        if (Object.keys(currentJson.policy[\"blocking-settings\"]).length === 0) {\n          delete currentJson.policy[\"blocking-settings\"];\n        }\n      })\n    );\n  }\n}\n","import { FieldResolverVisitor } from \"../../interface/field-resolver.visitor\";\nimport { BaseFieldResolverVisitorFactory } from \"../interface/base.field-resolver-visitor-factory\";\nimport { ViolationsFieldResolver } from \"../../imp/violations-field.resolver\";\nimport { createDefaultValues } from \"../default-values.factory\";\n\nimport { get as _get } from \"lodash\";\n\nexport class ViolationsVisitorFactory extends BaseFieldResolverVisitorFactory {\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const titles = [\"Violation\", \"Alarm\", \"Block\"];\n\n    const violations = _get(\n      this.json,\n      \"policy['blocking-settings'].violations\"\n    );\n    const visitors: FieldResolverVisitor[] = violations\n      ? violations.map((s: any, index: number) => {\n          return new ViolationsFieldResolver(index, this.dispatch, s);\n        })\n      : [];\n\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      \"policy.blocking-settings.violations\",\n      \"name\",\n      (json: any) => new ViolationsFieldResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import * as React from \"react\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport Box from \"@mui/material/Box\";\nimport { GridTableValueControl } from \"../../controls/grid.table-value.control\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { useRef, useState } from \"react\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { ViolationsNginxConst } from \"../../../../model/nginx-const/violations.nginx-const\";\nimport { ViolationsFieldFactory } from \"../../../../store/policy-editor/visitor/imp/violations-field.factory\";\nimport { MenuSearchPopupControl } from \"../../controls/menu-search-popup.control\";\nimport { ViolationsVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/violations.visitor-factory\";\nimport { usePolicyEditorState } from \"../../../../store/policy-editor/policy-editor.hooks\";\nimport { ToolbarPageControl } from \"../../controls/page-controls/toolbar.page-control\";\nimport { ContentPageControl } from \"../../controls/page-controls/content.page-control\";\nimport { ToolbarButtonPageControl } from \"../../controls/page-controls/toolbar-button.page-control\";\n\nexport const ViolationsPage: React.VoidFunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const allViolations = ViolationsNginxConst.getAllViolations();\n\n  const classes = useStyles();\n\n  const fieldFactoryVisitor = useVisitor(ViolationsFieldFactory);\n  const blockingSettingsVisitorFactory = useVisitor(ViolationsVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n  const btnRef = useRef<null | HTMLDivElement>(null);\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = blockingSettingsVisitorFactory.getResolvers();\n\n  function handleSelect(item: string) {\n    const v = allViolations.find((x) => x.title === item);\n    if (!v) return;\n\n    fieldFactoryVisitor.create({\n      name: v.name,\n      alarm: v.alarm,\n      block: v.block,\n    });\n    setAnchorEl(null);\n  }\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Violations\">\n        <Box>\n          <div ref={btnRef}>\n            <ToolbarButtonPageControl\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => setAnchorEl(e.currentTarget)}\n              endIcon={<ExpandMore />}\n            >\n              Add Violation\n            </ToolbarButtonPageControl>\n          </div>\n          <MenuSearchPopupControl\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            items={allViolations.map((x) => x.title)}\n            onClose={() => {\n              setAnchorEl(null);\n            }}\n            onSelect={(item) => handleSelect(item)}\n          />\n        </Box>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => btnRef.current && setAnchorEl(btnRef.current)}\n          addItemInscription=\"add Violation\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { MitigationBrowser } from \"../../../../model/policy-schema/policy.definitions.nap.custom\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { defaultMitigationsBrowser } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class BotDefenseBrowsersFactory extends VisitorFactoryBase<MitigationBrowser> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.bot-defense.mitigations.browsers\",\n      dispatch,\n      json,\n      defaultMitigationsBrowser\n    );\n  }\n}\n","import { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { BaseFieldResolverVisitorFactory } from \"../factory/interface/base.field-resolver-visitor-factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { get as _get } from \"lodash\";\nimport { createDefaultValues } from \"../factory/default-values.factory\";\n\nexport class FieldResolverVisitorFactory<\n  T extends FieldResolverVisitor\n> extends BaseFieldResolverVisitorFactory {\n  constructor(\n    protected TResolver: {\n      new (rowNumber: number, dispatch: PolicyEditorDispatch, json: any): T;\n    },\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any,\n    protected titles: string[],\n    protected policyPath: string,\n    protected keyField?: ((json: any) => string) | string\n  ) {\n    super(dispatch, json);\n  }\n\n  getResolvers(): {\n    titles: string[];\n    visitors: FieldResolverVisitor[];\n    default: FieldResolverVisitor[];\n  } {\n    const anomalies = _get(this.json, this.policyPath);\n    const visitors: FieldResolverVisitor[] = anomalies\n      ? anomalies.map((e: any, index: number) => {\n          return new this.TResolver(index, this.dispatch, e);\n        })\n      : [];\n\n    const defValues: FieldResolverVisitor[] = createDefaultValues(\n      this.json,\n      this.policyPath,\n      this.keyField,\n      (json: any) => new this.TResolver(-1, this.dispatch, json)\n    );\n\n    return {\n      titles: this.titles,\n      visitors,\n      default: defValues,\n    };\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { MitigationBrowser } from \"../../../../model/policy-schema/policy.definitions.nap.custom\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { BotDefenseBrowsersFactory } from \"./bot-defense.browsers.factory\";\nimport { get as _get, unset as _unset } from \"lodash\";\n\nexport class BotDefenseBrowsersResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<MitigationBrowser>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<MitigationBrowser>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"bot-defense.mitigations.browsers\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new BotDefenseBrowsersFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Action\",\n        \"action\",\n        fieldFactory,\n        [\"alarm\", \"block\", \"detect\"]\n      ),\n      this.visitorControlFactory.createNumberEditControl(\n        \"Max Version\",\n        \"maxVersion\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createNumberEditControl(\n        \"Min Version\",\n        \"minVersion\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { PolicyEditorDispatch } from \"../../../policy-editor.types\";\nimport { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { BotDefenseBrowsersResolver } from \"../../imp/bot-defense.browsers.resolver\";\n\nexport class BotDefenseBrowsersVisitorFactory extends FieldResolverVisitorFactory<BotDefenseBrowsersResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      BotDefenseBrowsersResolver,\n      dispatch,\n      json,\n      [\"Name\", \"Action\", \"Max Version\", \"Min Version\"],\n      \"policy.bot-defense.mitigations.browsers\",\n      \"name\"\n    );\n  }\n}\n","import { VisitorFactoryBase } from \"../../../store/policy-editor/visitor/base/visitor-factory.base\";\nimport { BaseFieldResolverVisitorFactory } from \"../../../store/policy-editor/visitor/factory/interface/base.field-resolver-visitor-factory\";\nimport React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box, Button } from \"@mui/material\";\nimport { GridTableValueControl } from \"./grid.table-value.control\";\n\nexport type GridValuesPageProps = {\n  fieldFactory: VisitorFactoryBase<any>;\n  fieldsVisitorFactory: BaseFieldResolverVisitorFactory;\n  addButtonTitle: string;\n  settingsName: string;\n  defaultValueFactory: any;\n};\n\nexport const GridValuesPageControl: React.FunctionComponent<GridValuesPageProps> =\n  ({\n    fieldFactory,\n    fieldsVisitorFactory,\n    addButtonTitle,\n    settingsName,\n    defaultValueFactory,\n  }) => {\n    const classes = useStyles();\n\n    const {\n      titles,\n      visitors,\n      default: defValues,\n    } = fieldsVisitorFactory.getResolvers();\n\n    const { showDefaultPolicy } = usePolicyEditorState();\n\n    return (\n      <Box className={classes.pageContent}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => fieldFactory.create(undefined)}\n        >\n          {addButtonTitle}\n        </Button>\n        <Box>\n          <GridTableValueControl\n            titles={titles}\n            visitors={\n              showDefaultPolicy ? [...visitors, ...defValues] : visitors\n            }\n            settingsName={settingsName}\n          />\n        </Box>\n      </Box>\n    );\n  };\n","import React from \"react\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { BotDefenseBrowsersFactory } from \"../../../../store/policy-editor/visitor/imp/bot-defense.browsers.factory\";\nimport { BotDefenseBrowsersVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/bot-defense.browsers.visitor-factory\";\nimport { GridValuesPageControl } from \"../../controls/grid-value-page.control\";\nimport { defaultMitigationsBrowser } from \"../../../../model/policy-editor.defaults.model\";\n\nexport const BotDefenseMitigationsBrowsersPage: React.VoidFunctionComponent =\n  () => {\n    const fieldFactory = useVisitor(BotDefenseBrowsersFactory);\n    const visitorFactory = useVisitor(BotDefenseBrowsersVisitorFactory);\n\n    return (\n      <GridValuesPageControl\n        settingsName=\"Bot Defense Mitigations Browser\"\n        addButtonTitle=\"Add Browser\"\n        defaultValueFactory={defaultMitigationsBrowser}\n        fieldFactory={fieldFactory}\n        fieldsVisitorFactory={visitorFactory}\n      />\n    );\n  };\n","import { set as _set } from \"lodash\";\nimport { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { defaultBotDefenceSettings } from \"../../../../model/policy-editor.defaults.model\";\nimport { TableFieldValueFactory } from \"../base/table-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { Settings } from \"../../../../model/policy-schema/policy.definitions\";\n\nexport class BotDefenseSettingsVisitor\n  extends BaseVisitor\n  implements FieldResolverVisitor, FieldFactoryVisitor<Settings>\n{\n  private tableFieldValueFactory: TableFieldValueFactory<Settings>;\n\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(dispatch, json);\n\n    this.tableFieldValueFactory = new TableFieldValueFactory(\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n  get rowIndex() {\n    return 0;\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"bot-defense.settings\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"Enabled\",\n        \"isEnabled\"\n      ),\n    ];\n  }\n\n  create() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _set(\n          currentJson,\n          \"policy.bot-defense.settings\",\n          defaultBotDefenceSettings(0, undefined)\n        );\n      })\n    );\n  }\n\n  remove() {}\n\n  callDefault(order?: number, item?: Settings): Settings {\n    return defaultBotDefenceSettings(order ?? 0, item);\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\n\nimport Box from \"@mui/material/Box\";\nimport { GridFieldValueControl } from \"../../controls/grid.field-value.control\";\nimport { BotDefenseSettingsVisitor } from \"../../../../store/policy-editor/visitor/imp/bot-defense.settings.visitor\";\n\nexport const BotDefenseSettingsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const botDefenseVisitor = useVisitor(BotDefenseSettingsVisitor);\n\n  return (\n    <Box className={classes.pageContent}>\n      <GridFieldValueControl rows={botDefenseVisitor.getBasicRows()} />\n    </Box>\n  );\n};\n","import { MitigationAnomaly } from \"../../../../model/policy-schema/policy.definitions.nap.custom\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { defaultMitigationsAnomaly } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class BotDefenseAnomaliesFactory extends VisitorFactoryBase<MitigationAnomaly> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.bot-defense.mitigations.anomalies\",\n      dispatch,\n      json,\n      defaultMitigationsAnomaly\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { BotDefenseAnomaliesFactory } from \"./bot-defense.anomalies.factory\";\nimport { MitigationAnomaly } from \"../../../../model/policy-schema/policy.definitions.nap.custom\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\n\nimport { get as _get, unset as _unset } from \"lodash\";\n\nexport class BotDefenseAnomaliesResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<MitigationAnomaly>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<MitigationAnomaly>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"bot-defense.mitigations.anomalies\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new BotDefenseAnomaliesFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Action\",\n        \"action\",\n        fieldFactory,\n        [\"alarm\", \"block\", \"default\", \"detect\", \"ignore\"]\n      ),\n      this.visitorControlFactory.createNumberEditControl(\n        \"Score Threshold\",\n        \"scoreThreshold\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { BotDefenseAnomaliesResolver } from \"../../imp/bot-defense.anomalies.resolver\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\nimport { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\n\nexport class BotDefenseAnomaliesVisitorFactory extends FieldResolverVisitorFactory<BotDefenseAnomaliesResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      BotDefenseAnomaliesResolver,\n      dispatch,\n      json,\n      [\"Name\", \"Action\", \"Score Threshold\"],\n      \"policy.bot-defense.mitigations.anomalies\",\n      \"name\"\n    );\n  }\n}\n","import React from \"react\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { BotDefenseAnomaliesFactory } from \"../../../../store/policy-editor/visitor/imp/bot-defense.anomalies.factory\";\nimport { BotDefenseAnomaliesVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/bot-defense.anomalies.visitor-factory\";\nimport { defaultMitigationsAnomaly } from \"../../../../model/policy-editor.defaults.model\";\nimport { GridValuesPageControl } from \"../../controls/grid-value-page.control\";\n\nexport const BotDefenseMitigationsAnomaliesPage: React.VoidFunctionComponent =\n  () => {\n    const fieldFactory = useVisitor(BotDefenseAnomaliesFactory);\n    const visitorFactory = useVisitor(BotDefenseAnomaliesVisitorFactory);\n\n    return (\n      <GridValuesPageControl\n        settingsName=\"Bot Defense Mitigations Anomaly\"\n        addButtonTitle=\"Add Anomaly\"\n        defaultValueFactory={defaultMitigationsAnomaly}\n        fieldFactory={fieldFactory}\n        fieldsVisitorFactory={visitorFactory}\n      />\n    );\n  };\n","import { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { Class } from \"../../../../model/policy-schema/policy.definitions\";\nimport { defaultMitigationsClass } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class BotDefenseClassesFactory extends VisitorFactoryBase<Class> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.bot-defense.mitigations.classes\",\n      dispatch,\n      json,\n      defaultMitigationsClass\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport {\n  Class,\n  ClassAction,\n} from \"../../../../model/policy-schema/policy.definitions\";\nimport { BotDefenseClassesFactory } from \"./bot-defense.classes.factory\";\nimport { get as _get, unset as _unset } from \"lodash\";\n\nexport class BotDefenseClassesResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<Class>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<Class>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"bot-defense.mitigations.classes\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new BotDefenseClassesFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Action\",\n        \"action\",\n        fieldFactory,\n        Object.values(ClassAction)\n      ),\n    ];\n  }\n}\n","import { PolicyEditorDispatch } from \"../../../policy-editor.types\";\nimport { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { BotDefenseClassesResolver } from \"../../imp/bot-defense.classes.resolver\";\n\nexport class BotDefenseClassesVisitorFactory extends FieldResolverVisitorFactory<BotDefenseClassesResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      BotDefenseClassesResolver,\n      dispatch,\n      json,\n      [\"Name\", \"Action\"],\n      \"policy.bot-defense.mitigations.classes\",\n      \"name\"\n    );\n  }\n}\n","import React from \"react\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { BotDefenseClassesFactory } from \"../../../../store/policy-editor/visitor/imp/bot-defense.classes.factory\";\nimport { BotDefenseClassesVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/bot-defense.classes.visitor-factory\";\nimport { GridValuesPageControl } from \"../../controls/grid-value-page.control\";\nimport { defaultMitigationsClass } from \"../../../../model/policy-editor.defaults.model\";\n\nexport const BotDefenseMitigationsClassesPage: React.VoidFunctionComponent =\n  () => {\n    const fieldFactory = useVisitor(BotDefenseClassesFactory);\n    const visitorFactory = useVisitor(BotDefenseClassesVisitorFactory);\n\n    return (\n      <GridValuesPageControl\n        settingsName=\"Bot Defense Mitigations Class\"\n        addButtonTitle=\"Add Class\"\n        defaultValueFactory={defaultMitigationsClass}\n        fieldFactory={fieldFactory}\n        fieldsVisitorFactory={visitorFactory}\n      />\n    );\n  };\n","import { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { MitigationsSignature } from \"../../../../model/policy-schema/policy.definitions\";\nimport { defaultMitigationsSignature } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class BotDefenseSignaturesFactory extends VisitorFactoryBase<MitigationsSignature> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.bot-defense.mitigations.signatures\",\n      dispatch,\n      json,\n      defaultMitigationsSignature\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport {\n  ClassAction,\n  MitigationsSignature,\n} from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { BotDefenseClassesFactory } from \"./bot-defense.classes.factory\";\nimport { get as _get, unset as _unset } from \"lodash\";\n\nexport class BotDefenseSignaturesResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<MitigationsSignature>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory =\n      new GridFieldValueFactory<MitigationsSignature>(\n        rowIndex,\n        dispatch,\n        json,\n        this.basePath\n      );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"bot-defense.mitigations.signatures\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new BotDefenseClassesFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Action\",\n        \"action\",\n        fieldFactory,\n        Object.values(ClassAction)\n      ),\n    ];\n  }\n}\n","import { PolicyEditorDispatch } from \"../../../policy-editor.types\";\nimport { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { BotDefenseSignaturesResolver } from \"../../imp/bot-defense.signatures.resolver\";\n\nexport class BotDefenseSignaturesVisitorFactory extends FieldResolverVisitorFactory<BotDefenseSignaturesResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      BotDefenseSignaturesResolver,\n      dispatch,\n      json,\n      [\"Name\", \"Action\"],\n      \"policy.bot-defense.mitigations.signatures\",\n      \"name\"\n    );\n  }\n}\n","import React from \"react\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { GridValuesPageControl } from \"../../controls/grid-value-page.control\";\nimport { BotDefenseSignaturesFactory } from \"../../../../store/policy-editor/visitor/imp/bot-defense.signatures.factory\";\nimport { BotDefenseSignaturesVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/bot-defense.signatures.visitor-factory\";\nimport { defaultMitigationsSignature } from \"../../../../model/policy-editor.defaults.model\";\n\nexport const BotDefenseMitigationsSignaturesPage: React.VoidFunctionComponent =\n  () => {\n    const fieldFactory = useVisitor(BotDefenseSignaturesFactory);\n    const visitorFactory = useVisitor(BotDefenseSignaturesVisitorFactory);\n\n    return (\n      <GridValuesPageControl\n        settingsName=\"Bot Defense Mitigations Signature\"\n        addButtonTitle=\"Add Signature\"\n        defaultValueFactory={defaultMitigationsSignature}\n        fieldFactory={fieldFactory}\n        fieldsVisitorFactory={visitorFactory}\n      />\n    );\n  };\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultXffHeader } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class CustomXffHeadersFactory extends VisitorFactoryBase<string> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.general.customXffHeaders\", dispatch, json, defaultXffHeader);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, unset as _unset } from \"lodash\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { CustomXffHeadersFactory } from \"./custom-xff-headers.factory\";\n\nexport class CustomXffHeadersResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<string>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<string>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"general.customXffHeaders\";\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new CustomXffHeadersFactory(this.dispatch, this.json);\n\n    return [\n      this.rowIndex === -1\n        ? this.gridFieldValueFactory.createLabelFieldControl(\"\", this.json)\n        : this.gridFieldValueFactory.createTextEditControl(\n            this.json,\n            \"\",\n            fieldFactory\n          ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { CustomXffHeadersResolver } from \"../../imp/custom-xff-headers.resolver\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\n\nexport class CustomXffHeadersVisitorFactory extends FieldResolverVisitorFactory<CustomXffHeadersResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      CustomXffHeadersResolver,\n      dispatch,\n      json,\n      [\"XFF Header\"],\n      \"policy.general.customXffHeaders\",\n      undefined\n    );\n  }\n}\n","import { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport * as React from \"react\";\nimport { CustomXffHeadersFactory } from \"../../../store/policy-editor/visitor/imp/custom-xff-headers.factory\";\nimport { CustomXffHeadersVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/custom-xff-headers.visitor-factory\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const CustomXffHeadersPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const fieldFactory = useVisitor(CustomXffHeadersFactory);\n  const visitorFactory = useVisitor(CustomXffHeadersVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = visitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"XFF Headers\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => fieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add XFF Header\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => fieldFactory.create(undefined)}\n          addItemInscription=\"add XFF Header\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultResponseCode } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class ResponseCodesFactory extends VisitorFactoryBase<number> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.general.allowedResponseCodes\",\n      dispatch,\n      json,\n      defaultResponseCode\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, unset as _unset } from \"lodash\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { ResponseCodesFactory } from \"./response-codes.factory\";\n\nexport class ResponseCodesResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<number>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<number>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"general.allowedResponseCodes\";\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const responseCodesFieldFactory = new ResponseCodesFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.rowIndex === -1\n        ? this.gridFieldValueFactory.createLabelFieldControl(\"\", this.json)\n        : this.gridFieldValueFactory.createNumberEditControl(\n            \"\",\n            \"\",\n            responseCodesFieldFactory\n          ),\n    ];\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { ResponseCodesResolver } from \"../../imp/response-codes.resolver\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\n\nexport class ResponseCodesVisitorFactory extends FieldResolverVisitorFactory<ResponseCodesResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      ResponseCodesResolver,\n      dispatch,\n      json,\n      [\"Response Code\"],\n      \"policy.general.allowedResponseCodes\",\n      undefined\n    );\n  }\n}\n","export const allServerResponseCodes: { code: number; description: string }[] = [\n  { code: 100, description: \"Continue\" },\n  { code: 101, description: \"Switching Protocol\" },\n  { code: 102, description: \"Processing\" },\n  { code: 103, description: \"Early Hints\" },\n  { code: 200, description: \"OK\" },\n  { code: 201, description: \"Created\" },\n  { code: 202, description: \"Accepted\" },\n  { code: 203, description: \"Non-Authoritative Information\" },\n  { code: 204, description: \"No Content\" },\n  { code: 205, description: \"Reset Content\" },\n  { code: 206, description: \"Partial Content\" },\n  { code: 207, description: \"Multi-Status\" },\n  { code: 208, description: \"Already Reported\" },\n  { code: 226, description: \"IM Used\" },\n  { code: 300, description: \"Multiple Choice\" },\n  { code: 301, description: \"Moved Permanently\" },\n  { code: 302, description: \"Found\" },\n  { code: 303, description: \"See Other\" },\n  { code: 304, description: \"Not Modified\" },\n  { code: 305, description: \"Use Proxy\" },\n  { code: 307, description: \"Temporary Redirect\" },\n  { code: 308, description: \"Permanent Redirect\" },\n  { code: 400, description: \"Bad Request\" },\n  { code: 401, description: \"Unauthorized\" },\n  { code: 402, description: \"Payment Required\" },\n  { code: 403, description: \"Forbidden\" },\n  { code: 404, description: \"Not Found\" },\n  { code: 405, description: \"Method Not Allowed\" },\n  { code: 406, description: \"Not Acceptable\" },\n  { code: 407, description: \"Proxy Authentication Required\" },\n  { code: 408, description: \"Request Timeout\" },\n  { code: 409, description: \"Conflict\" },\n  { code: 410, description: \"Gone\" },\n  { code: 411, description: \"Length Required\" },\n  { code: 412, description: \"Precondition Failed\" },\n  { code: 413, description: \"Payload Too Large\" },\n  { code: 414, description: \"URI Too Long\" },\n  { code: 415, description: \"Unsupported Media Type\" },\n  { code: 416, description: \"Range Not Satisfiable\" },\n  { code: 417, description: \"Expectation Failed\" },\n  { code: 418, description: \"I'm a teapot\" },\n  { code: 421, description: \"Misdirected Request\" },\n  { code: 422, description: \"Unprocessable Entity \" },\n  { code: 423, description: \"Locked\" },\n  { code: 424, description: \"Failed Dependency\" },\n  { code: 425, description: \"Too Early\" },\n  { code: 426, description: \"Upgrade Required\" },\n  { code: 428, description: \"Precondition Required\" },\n  { code: 429, description: \"Too Many Requests\" },\n  { code: 431, description: \"Request Header Fields Too Large\" },\n  { code: 451, description: \"Unavailable For Legal Reasons\" },\n  { code: 500, description: \"Internal Server Error\" },\n  { code: 501, description: \"Not Implemented\" },\n  { code: 502, description: \"Bad Gateway\" },\n  { code: 503, description: \"Service Unavailable\" },\n  { code: 504, description: \"Gateway Timeout\" },\n  { code: 505, description: \"HTTP Version Not Supported\" },\n  { code: 506, description: \"Variant Also Negotiates\" },\n  { code: 507, description: \"Insufficient Storage\" },\n  { code: 508, description: \"Loop Detected\" },\n  { code: 510, description: \"Not Extended\" },\n  { code: 511, description: \"Network Authentication Required\" },\n];\n","import { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport * as React from \"react\";\nimport { ResponseCodesFactory } from \"../../../store/policy-editor/visitor/imp/response-codes.factory\";\nimport { ResponseCodesVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/response-codes.visitor-factory\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { useRef, useState } from \"react\";\nimport { MenuSearchPopupControl } from \"../controls/menu-search-popup.control\";\nimport { allServerResponseCodes } from \"../../../model/nginx-const/response-codes.const\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const AllowedResponseCodesPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const fieldFactory = useVisitor(ResponseCodesFactory);\n  const visitorFactory = useVisitor(ResponseCodesVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n  const btnRef = useRef<null | HTMLDivElement>(null);\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = visitorFactory.getResolvers();\n\n  function handleSelect(item: number) {\n    fieldFactory.create(item);\n    setAnchorEl(null);\n  }\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Response codes\">\n        <div ref={btnRef}>\n          <ToolbarButtonPageControl\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n            endIcon={<ExpandMore />}\n          >\n            Add Response Code\n          </ToolbarButtonPageControl>\n        </div>\n        <MenuSearchPopupControl\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          items={allServerResponseCodes.map(\n            (x) => `${x.code} - ${x.description}`\n          )}\n          onClose={() => {\n            setAnchorEl(null);\n          }}\n          onSelect={(_, index) =>\n            handleSelect(allServerResponseCodes[index].code)\n          }\n        />\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors} //.sort((a, b) => stringCompare(a.key(), b.key()))}\n          onAddItem={() => btnRef.current && setAnchorEl(btnRef.current)}\n          addItemInscription=\"add Response Code\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { WhitelistIP } from \"../../../../model/policy-schema/policy.definitions\";\nimport { defaultWhitelistIPs } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class WhitelistIpFactory extends VisitorFactoryBase<WhitelistIP> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.whitelist-ips\", dispatch, json, defaultWhitelistIPs);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { WhitelistIP } from \"../../../../model/policy-schema/policy.definitions\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, unset as _unset } from \"lodash\";\nimport { WhitelistIpFactory } from \"./whitelist-ip.factory\";\n\nexport class WhitelistIpResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<WhitelistIP>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<WhitelistIP>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return JSON.stringify(this.json);\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n  get basePath(): string {\n    return \"whitelist-ips\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new WhitelistIpFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Block Requests\",\n        \"blockRequests\",\n        fieldFactory,\n        [\"always\", \"never\", \"policy-default\"]\n      ),\n      this.visitorControlFactory.createTextEditControl(\n        \"Description\",\n        \"description\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createTextEditControl(\n        \"IP Address\",\n        \"ipAddress\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createTextEditControl(\n        \"IP Mask\",\n        \"ipMask\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\nimport { WhitelistIpResolver } from \"../../imp/whitelist-ip.resolver\";\n\nexport class WhitelistIpVisitorFactory extends FieldResolverVisitorFactory<WhitelistIpResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      WhitelistIpResolver,\n      dispatch,\n      json,\n      [\"Block Requests\", \"Description\", \"IP Address\", \"IP Mask\"],\n      \"policy.whitelist-ips\",\n      (json) => JSON.stringify(json)\n    );\n  }\n}\n","import { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport * as React from \"react\";\nimport { WhitelistIpFactory } from \"../../../store/policy-editor/visitor/imp/whitelist-ip.factory\";\nimport { WhitelistIpVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/whitelist-ip.visitor-factory\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\n\nexport const WhitelistIpsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const fieldFactory = useVisitor(WhitelistIpFactory);\n  const visitorFactory = useVisitor(WhitelistIpVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = visitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"IP addresses\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => fieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add IP\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => fieldFactory.create(undefined)}\n          addItemInscription=\"add IP\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { HostName } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultHostname } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class HostnamesFactory extends VisitorFactoryBase<HostName> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.host-names\", dispatch, json, defaultHostname);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { HostName } from \"../../../../model/policy-schema/policy.definitions\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { HostnamesFactory } from \"./hostnames.factory\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, unset as _unset } from \"lodash\";\n\nexport class HostnamesResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<HostName>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<HostName>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"host-names\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new HostnamesFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createCheckBoxFieldControl(\n        \"Include Subdomains\",\n        \"includeSubdomains\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { HostnamesResolver } from \"../../imp/hostnames.resolver\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\n\nexport class HostnamesVisitorFactory extends FieldResolverVisitorFactory<HostnamesResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      HostnamesResolver,\n      dispatch,\n      json,\n      [\"Name\", \"Include Subdomains\"],\n      \"policy.host-names\",\n      \"name\"\n    );\n  }\n}\n","import { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport * as React from \"react\";\nimport { HostnamesFactory } from \"../../../store/policy-editor/visitor/imp/hostnames.factory\";\nimport { HostnamesVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/hostnames.visitor-factory\";\nimport { ContentPageControl } from \"../controls/page-controls/content.page-control\";\nimport { ToolbarPageControl } from \"../controls/page-controls/toolbar.page-control\";\nimport { ToolbarButtonPageControl } from \"../controls/page-controls/toolbar-button.page-control\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nexport const HostnamesPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const fieldFactory = useVisitor(HostnamesFactory);\n  const visitorFactory = useVisitor(HostnamesVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = visitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <ToolbarPageControl headerText=\"Hostnames\">\n        <ToolbarButtonPageControl\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => fieldFactory.create(undefined)}\n          startIcon={<AddIcon />}\n        >\n          Add Hostname\n        </ToolbarButtonPageControl>\n      </ToolbarPageControl>\n      <ContentPageControl>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          onAddItem={() => fieldFactory.create(undefined)}\n          addItemInscription=\"add Hostname\"\n        />\n      </ContentPageControl>\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultDataGuardEnforcementUrls } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class DataGuardEnforcementUrlsFactory extends VisitorFactoryBase<string> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      \"policy.data-guard.enforcementUrls\",\n      dispatch,\n      json,\n      defaultDataGuardEnforcementUrls\n    );\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { get as _get, unset as _unset } from \"lodash\";\nimport { DataGuardEnforcementUrlsFactory } from \"./data-guard.enforcementUrls.factory\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\n\nexport class DataGuardEnforcementUrlsResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private gridFieldValueFactory: GridFieldValueFactory<string>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.gridFieldValueFactory = new GridFieldValueFactory<string>(\n      this.rowIndex,\n      this.dispatch,\n      this.json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"data-guard.enforcementUrls\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _get(currentJson, `policy.${this.basePath}`).splice(this.rowIndex, 1);\n        if (_get(currentJson, `policy.${this.basePath}`).length === 0) {\n          _unset(currentJson, `policy.${this.basePath}`);\n        }\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new DataGuardEnforcementUrlsFactory(\n      this.dispatch,\n      this.json\n    );\n\n    return [\n      this.rowIndex === -1\n        ? this.gridFieldValueFactory.createLabelFieldControl(\"\", this.json)\n        : this.gridFieldValueFactory.createTextEditControl(\n            this.json,\n            \"\",\n            fieldFactory\n          ),\n    ];\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\nimport { DataGuardEnforcementUrlsResolver } from \"../../imp/data-guard.enforcementUrls.resolver\";\n\nexport class DataGuardEnforcementUrlsVisitorFactory extends FieldResolverVisitorFactory<DataGuardEnforcementUrlsResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      DataGuardEnforcementUrlsResolver,\n      dispatch,\n      json,\n      [\"Enforcement Url\"],\n      \"policy.data-guard.enforcementUrls\",\n      undefined\n    );\n  }\n}\n","import * as React from \"react\";\nimport { DataGuardEnforcementUrlsFactory } from \"../../../../store/policy-editor/visitor/imp/data-guard.enforcementUrls.factory\";\nimport { DataGuardEnforcementUrlsVisitorFactory } from \"../../../../store/policy-editor/visitor/factory/imp/data-guard.enforcementUrls.visitor-factory\";\nimport { Button } from \"@mui/material\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport { GridTableValueControl } from \"../../controls/grid.table-value.control\";\nimport { usePolicyEditorState } from \"../../../../store/policy-editor/policy-editor.hooks\";\nimport Box from \"@mui/material/Box\";\n\nexport const DataGuardEnforcementUrlsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const fieldFactory = useVisitor(DataGuardEnforcementUrlsFactory);\n  const visitorFactory = useVisitor(DataGuardEnforcementUrlsVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = visitorFactory.getResolvers();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => fieldFactory.create(undefined)}\n      >\n        Add Enforcement URL\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n        />\n      </Box>\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { DataGuard } from \"../../../../model/policy-schema/policy.definitions\";\nimport { TableFieldValueFactory } from \"../base/table-field-value.factory\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { set as _set } from \"lodash\";\nimport { defaultDataGuard } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class DataGuardVisitor\n  extends BaseVisitor\n  implements FieldResolverVisitor, FieldFactoryVisitor<DataGuard>\n{\n  private tableFieldValueFactory: TableFieldValueFactory<DataGuard>;\n\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(dispatch, json);\n\n    this.tableFieldValueFactory = new TableFieldValueFactory(\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  get rowIndex() {\n    return 0;\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"data-guard\";\n  }\n\n  remove(): void {}\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"Credit Card Numbers\",\n        \"creditCardNumbers\"\n      ),\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"Enabled\",\n        \"enabled\"\n      ),\n      this.tableFieldValueFactory.createDropListFieldControl(\n        \"Enforcement Mode\",\n        \"enforcementMode\",\n        this,\n        [\"enforce-urls-in-list\", \"ignore-urls-in-list\"]\n      ),\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"Mask Data\",\n        \"maskData\"\n      ),\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"SSN\",\n        \"usSocialSecurityNumbers\"\n      ),\n    ];\n  }\n\n  create() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _set(\n          currentJson,\n          `policy.${this.basePath}`,\n          defaultDataGuard(0, undefined)\n        );\n      })\n    );\n  }\n\n  callDefault(order?: number, item?: DataGuard): DataGuard {\n    return defaultDataGuard(order ?? 0, item);\n  }\n}\n","import React from \"react\";\n\nimport { useStyles } from \"../../../../utils/styles.hook\";\nimport Box from \"@mui/material/Box\";\nimport { GridFieldValueControl } from \"../../controls/grid.field-value.control\";\nimport { useVisitor } from \"../../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { DataGuardVisitor } from \"../../../../store/policy-editor/visitor/imp/data-guard.visitor\";\n\nexport const DataGuardSettingsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const dataGuardSettingsVisitor = useVisitor(DataGuardVisitor);\n\n  return (\n    <Box className={classes.pageContent}>\n      <GridFieldValueControl rows={dataGuardSettingsVisitor.getBasicRows()} />\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { CSRFProtection } from \"../../../../model/policy-schema/policy.definitions\";\nimport { TableFieldValueFactory } from \"../base/table-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { set as _set } from \"lodash\";\nimport { defaultCsrfProtection } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class CsrfProtectionVisitor\n  extends BaseVisitor\n  implements FieldResolverVisitor, FieldFactoryVisitor<CSRFProtection>\n{\n  private tableFieldValueFactory: TableFieldValueFactory<CSRFProtection>;\n\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(dispatch, json);\n\n    this.tableFieldValueFactory = new TableFieldValueFactory(\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  callDefault(order?: number, item?: CSRFProtection): CSRFProtection {\n    return defaultCsrfProtection(order ?? 0, item);\n  }\n\n  get rowIndex() {\n    return 0;\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"csrf-protection\";\n  }\n\n  remove(): void {}\n\n  create() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _set(\n          currentJson,\n          `policy.${this.basePath}`,\n          defaultCsrfProtection(0, undefined)\n        );\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"CSRF Protection Enabled\",\n        \"enabled\"\n      ),\n      this.tableFieldValueFactory.createTextEditFieldControl(\n        \"Expiration time in seconds\",\n        \"expirationTimeInSeconds\",\n        this,\n        { makeNumber: true }\n      ),\n      this.tableFieldValueFactory.createCheckBoxFieldControl(\n        \"SSL Only\",\n        \"sslOnly\"\n      ),\n    ];\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport Box from \"@mui/material/Box\";\nimport { GridFieldValueControl } from \"../controls/grid.field-value.control\";\nimport { CsrfProtectionVisitor } from \"../../../store/policy-editor/visitor/imp/csrf-protection.visitor\";\n\nexport const CsrfProtectionPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n  const csrfProtectionVisitor = useVisitor(CsrfProtectionVisitor);\n\n  return (\n    <Box className={classes.pageContent}>\n      <GridFieldValueControl rows={csrfProtectionVisitor.getBasicRows()} />\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { CSRFURL } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultCsrfUrl } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class CsrfUrlsFieldFactory extends VisitorFactoryBase<CSRFURL> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.csrf-urls\", dispatch, json, defaultCsrfUrl);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { CSRFURL } from \"../../../../model/policy-schema/policy.definitions\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { CsrfUrlsFieldFactory } from \"./csrf-urls-field.factory\";\nimport { policyJsonFieldRemover } from \"../services/policy-json.field-remover\";\n\nexport class CsrfUrlsFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<CSRFURL>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<CSRFURL>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return `${this.json.url}::${this.json.method}`;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  get basePath(): string {\n    return \"csrf-urls\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) =>\n        policyJsonFieldRemover(currentJson, this.basePath, this.rowIndex)\n      )\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new CsrfUrlsFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Enforcement Action\",\n        \"enforcementAction\",\n        fieldFactory,\n        [\"none\", \"verify-origin\"]\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Method\",\n        \"method\",\n        fieldFactory,\n        [\"GET\", \"POST\", \"any\"]\n      ),\n      this.visitorControlFactory.createTextEditControl(\n        \"Url\",\n        \"url\",\n        fieldFactory\n      ),\n    ];\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { CsrfUrlsFieldResolver } from \"../../imp/csrf-urls-field.resolver\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\n\nexport class CsrfUrlsVisitorFactory extends FieldResolverVisitorFactory<CsrfUrlsFieldResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      CsrfUrlsFieldResolver,\n      dispatch,\n      json,\n      [\"Enforcement Action\", \"Method\", \"Url\"],\n      \"policy.csrf-urls\",\n      (json) => `${json.url}::${json.method}`\n    );\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { CsrfUrlsVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/csrf-urls.visitor-factory\";\nimport { CsrfUrlsFieldFactory } from \"../../../store/policy-editor/visitor/imp/csrf-urls-field.factory\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box, Button } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { policyEditorJsonVisit } from \"../../../store/policy-editor/policy-editor.actions\";\nimport { PolicyJsonReorderServices } from \"../../../store/policy-editor/visitor/services/policy-json.reorder.services\";\n\nexport const CsrfUrlsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const csrfUrlsFieldFactory = useVisitor(CsrfUrlsFieldFactory);\n  const csrfUrlsVisitorsFactory = useVisitor(CsrfUrlsVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = csrfUrlsVisitorsFactory.getResolvers();\n\n  const dispatch = usePolicyEditorDispatch();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => csrfUrlsFieldFactory.create(undefined)}\n      >\n        Add CSRF URL\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          settingsName=\"CSRF URLs\"\n          dnd={true}\n          onDragEnd={(result) =>\n            dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                const urlServices = new PolicyJsonReorderServices(\n                  currentJson.policy\n                );\n                urlServices.changeOrder(\n                  \"csrf-urls\",\n                  \"wildcardOrder\",\n                  result.source.index,\n                  result.destination?.index ?? 0\n                );\n              })\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n};\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { FieldFactoryVisitor } from \"../interface/field-factory.visitor\";\nimport { CookieSettings } from \"../../../../model/policy-schema/policy.definitions\";\nimport { TableFieldValueFactory } from \"../base/table-field-value.factory\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { set as _set } from \"lodash\";\nimport { defaultCookieSettings } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class CookieSettingsVisitor\n  extends BaseVisitor\n  implements FieldResolverVisitor, FieldFactoryVisitor<CookieSettings>\n{\n  private tableFieldValueFactory: TableFieldValueFactory<CookieSettings>;\n\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(dispatch, json);\n\n    this.tableFieldValueFactory = new TableFieldValueFactory(\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  get rowIndex() {\n    return 0;\n  }\n\n  key(): string {\n    return \"\";\n  }\n\n  get hasAdvancedRows(): boolean {\n    return false;\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    return [];\n  }\n\n  get basePath(): string {\n    return \"cookie-settings\";\n  }\n\n  remove(): void {}\n\n  create() {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) => {\n        _set(\n          currentJson,\n          `policy.${this.basePath}`,\n          defaultCookieSettings(0, undefined)\n        );\n      })\n    );\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    return [\n      this.tableFieldValueFactory.createTextEditFieldControl(\n        \"Maximum Cookie Header Length\",\n        \"maximumCookieHeaderLength\",\n        this,\n        { makeNumber: true }\n      ),\n    ];\n  }\n\n  callDefault(order?: number, item?: CookieSettings): CookieSettings {\n    return defaultCookieSettings(order ?? 0, item);\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport { CookieSettingsVisitor } from \"../../../store/policy-editor/visitor/imp/cookie-settings.visitor\";\nimport Box from \"@mui/material/Box\";\nimport { GridFieldValueControl } from \"../controls/grid.field-value.control\";\n\nexport const CookieSettingsPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const cookieSettingsVisitor = useVisitor(CookieSettingsVisitor);\n\n  return (\n    <Box className={classes.pageContent}>\n      <GridFieldValueControl rows={cookieSettingsVisitor.getBasicRows()} />\n    </Box>\n  );\n};\n","import { VisitorFactoryBase } from \"../base/visitor-factory.base\";\nimport { Cooky } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { defaultCookie } from \"../../../../model/policy-editor.defaults.model\";\n\nexport class CookiesFieldFactory extends VisitorFactoryBase<Cooky> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\"policy.cookies\", dispatch, json, defaultCookie);\n  }\n}\n","import { BaseVisitor } from \"../interface/base.visitor\";\nimport { FieldResolverVisitor } from \"../interface/field-resolver.visitor\";\nimport { GridFieldValueFactory } from \"../base/grid-field-value.factory\";\nimport { Cooky } from \"../../../../model/policy-schema/policy.definitions\";\nimport { PolicyEditorDispatch } from \"../../policy-editor.types\";\nimport { GridFieldValue } from \"../../../../component/policy-editor/controls/grid-field-value.type\";\nimport { CookiesFieldFactory } from \"./cookies-field.factory\";\nimport { policyEditorJsonVisit } from \"../../policy-editor.actions\";\nimport { policyJsonFieldRemover } from \"../services/policy-json.field-remover\";\n\nexport class CookiesFieldResolver\n  extends BaseVisitor\n  implements FieldResolverVisitor\n{\n  private visitorControlFactory: GridFieldValueFactory<Cooky>;\n\n  constructor(\n    public rowIndex: number,\n    protected dispatch: PolicyEditorDispatch,\n    protected json: any\n  ) {\n    super(dispatch, json);\n\n    this.visitorControlFactory = new GridFieldValueFactory<Cooky>(\n      rowIndex,\n      dispatch,\n      json,\n      this.basePath\n    );\n  }\n\n  key(): string {\n    return this.json.name;\n  }\n\n  get hasAdvancedRows(): boolean {\n    return true;\n  }\n\n  get basePath(): string {\n    return \"cookies\";\n  }\n\n  getAdvancedRows(): GridFieldValue[] {\n    const fieldFactory = new CookiesFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createCheckBoxFieldControl(\n        \"Accessible Only Through The Http Protocol\",\n        \"accessibleOnlyThroughTheHttpProtocol\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createCheckBoxFieldControl(\n        \"Attack Signatures Check\",\n        \"attackSignaturesCheck\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Decode Value As Base64\",\n        \"decodeValueAsBase64\",\n        fieldFactory,\n        [\"disabled\", \"enabled\", \"required\"]\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Enforcement Type\",\n        \"enforcementType\",\n        fieldFactory,\n        [\"allow\", \"enforce\"]\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Insert Same Site Attribute\",\n        \"insertSameSiteAttribute\",\n        fieldFactory,\n        [\"lax\", \"none\", \"none-value\", \"strict\"]\n      ),\n      this.visitorControlFactory.createCheckBoxFieldControl(\n        \"Secured Over Https Connection\",\n        \"securedOverHttpsConnection\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        fieldFactory,\n        [\"explicit\", \"wildcard\"]\n      ),\n    ];\n  }\n\n  getBasicRows(): GridFieldValue[] {\n    const fieldFactory = new CookiesFieldFactory(this.dispatch, this.json);\n\n    return [\n      this.visitorControlFactory.createTextEditControl(\n        \"Name\",\n        \"name\",\n        fieldFactory\n      ),\n      this.visitorControlFactory.createDropListFieldControl(\n        \"Type\",\n        \"type\",\n        fieldFactory,\n        [\"explicit\", \"wildcard\"]\n      ),\n    ];\n  }\n\n  remove(): void {\n    this.dispatch(\n      policyEditorJsonVisit((currentJson) =>\n        policyJsonFieldRemover(currentJson, this.basePath, this.rowIndex)\n      )\n    );\n  }\n}\n","import { FieldResolverVisitorFactory } from \"../../base/field-resolver-visitor.factory\";\nimport { CookiesFieldResolver } from \"../../imp/cookies-field.resolver\";\nimport { PolicyEditorDispatch } from \"../../../policy-editor.types\";\n\nexport class CookiesFieldVisitorFactory extends FieldResolverVisitorFactory<CookiesFieldResolver> {\n  constructor(protected dispatch: PolicyEditorDispatch, protected json: any) {\n    super(\n      CookiesFieldResolver,\n      dispatch,\n      json,\n      [\"Name\", \"Type\"],\n      \"policy.cookies\",\n      \"name\"\n    );\n  }\n}\n","import React from \"react\";\nimport { useStyles } from \"../../../utils/styles.hook\";\nimport { useVisitor } from \"../../../store/policy-editor/visitor/interface/base.visitor\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../../store/policy-editor/policy-editor.hooks\";\nimport { Box, Button } from \"@mui/material\";\nimport { GridTableValueControl } from \"../controls/grid.table-value.control\";\nimport { policyEditorJsonVisit } from \"../../../store/policy-editor/policy-editor.actions\";\nimport { PolicyJsonReorderServices } from \"../../../store/policy-editor/visitor/services/policy-json.reorder.services\";\nimport { CookiesFieldFactory } from \"../../../store/policy-editor/visitor/imp/cookies-field.factory\";\nimport { CookiesFieldVisitorFactory } from \"../../../store/policy-editor/visitor/factory/imp/cookies-field.visitor-factory\";\n\nexport const CookiesPage: React.VoidFunctionComponent = () => {\n  const classes = useStyles();\n\n  const cookiesFieldFactory = useVisitor(CookiesFieldFactory);\n  const cookiesVisitorsFactory = useVisitor(CookiesFieldVisitorFactory);\n\n  const { showDefaultPolicy } = usePolicyEditorState();\n\n  const {\n    titles,\n    visitors,\n    default: defValues,\n  } = cookiesVisitorsFactory.getResolvers();\n\n  const dispatch = usePolicyEditorDispatch();\n\n  return (\n    <Box className={classes.pageContent}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => cookiesFieldFactory.create(undefined)}\n      >\n        Add Cookie\n      </Button>\n      <Box>\n        <GridTableValueControl\n          titles={titles}\n          visitors={showDefaultPolicy ? [...visitors, ...defValues] : visitors}\n          settingsName=\"Cookies\"\n          dnd={true}\n          onDragEnd={(result) =>\n            dispatch(\n              policyEditorJsonVisit((currentJson) => {\n                const urlServices = new PolicyJsonReorderServices(\n                  currentJson.policy\n                );\n                urlServices.changeOrder(\n                  \"cookies\",\n                  \"wildcardOrder\",\n                  result.source.index,\n                  result.destination?.index ?? 0\n                );\n              })\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n\nimport { PolicyEditorPageEnum } from \"../../../store/policy-editor/policy-editor.types\";\nimport { GeneralSettingsPage } from \"../pages/general-settings.page\";\nimport { MethodsPage } from \"../pages/methods.page\";\nimport { UrlsPage } from \"../pages/urls.page\";\nimport { FileTypesPage } from \"../pages/file-types.page\";\nimport { HeadersPage } from \"../pages/headers.page\";\nimport { ParametersPage } from \"../pages/parameters.page\";\nimport { OpenApiPage } from \"../pages/open-api.page\";\nimport { EvasionsPage } from \"../pages/blocking-settings/evasions.page\";\nimport { HttpProtocolsPage } from \"../pages/blocking-settings/http-protocols.page\";\nimport { ServerTechnologiesPage } from \"../pages/server-technologies.page\";\nimport { SignatureSetsPage } from \"../pages/signatures/signature-sets.page\";\nimport { SignaturesPage } from \"../pages/signatures/signatures.page\";\nimport { ViolationsPage } from \"../pages/blocking-settings/violations.page\";\nimport { BotDefenseMitigationsBrowsersPage } from \"../pages/bot-defense/bot-defense.mitigations.browsers.page\";\nimport { BotDefenseSettingsPage } from \"../pages/bot-defense/bot-defense.settings.page\";\nimport { BotDefenseMitigationsAnomaliesPage } from \"../pages/bot-defense/bot-defense.mitigations.anomalies.page\";\nimport { BotDefenseMitigationsClassesPage } from \"../pages/bot-defense/bot-defense.mitigations.classes.page\";\nimport { BotDefenseMitigationsSignaturesPage } from \"../pages/bot-defense/bot-defense.mitigations.signatures.page\";\nimport { CustomXffHeadersPage } from \"../pages/custom-xff-headers.page\";\nimport { AllowedResponseCodesPage } from \"../pages/allowed-response-codes.page\";\nimport { WhitelistIpsPage } from \"../pages/whitelist-ips.page\";\nimport { HostnamesPage } from \"../pages/host-names.page\";\nimport { DataGuardEnforcementUrlsPage } from \"../pages/data-guard/data-guard.enforcement-urls.page\";\nimport { DataGuardSettingsPage } from \"../pages/data-guard/data-guard.settings.page\";\nimport { CsrfProtectionPage } from \"../pages/csrf-protection.page\";\nimport { CsrfUrlsPage } from \"../pages/csrf-urls.page\";\nimport { CookieSettingsPage } from \"../pages/cookie-settings.page\";\nimport { CookiesPage } from \"../pages/cookies.page\";\n\nexport class PolicyEditorPageFactory {\n  constructor(\n    private pages: { [key: number]: JSX.Element } = {\n      [PolicyEditorPageEnum.Summary]: <GeneralSettingsPage />,\n      [PolicyEditorPageEnum.Violations]: <ViolationsPage />,\n      [PolicyEditorPageEnum.Methods]: <MethodsPage />,\n      [PolicyEditorPageEnum.URLs]: <UrlsPage />,\n      [PolicyEditorPageEnum.Filetypes]: <FileTypesPage />,\n      [PolicyEditorPageEnum.Headers]: <HeadersPage />,\n      [PolicyEditorPageEnum.Parameters]: <ParametersPage />,\n      [PolicyEditorPageEnum.OpenAPI]: <OpenApiPage />,\n      [PolicyEditorPageEnum.Evasions]: <EvasionsPage />,\n      [PolicyEditorPageEnum.HttpProtocols]: <HttpProtocolsPage />,\n      [PolicyEditorPageEnum.ServerTechnologies]: <ServerTechnologiesPage />,\n      [PolicyEditorPageEnum.SignaturesSets]: <SignatureSetsPage />,\n      [PolicyEditorPageEnum.SignaturesPolicy]: <SignaturesPage />,\n      [PolicyEditorPageEnum.BotDefenseSettings]: <BotDefenseSettingsPage />,\n      [PolicyEditorPageEnum.BotDefenseMigrationsBrowsers]: (\n        <BotDefenseMitigationsBrowsersPage />\n      ),\n      [PolicyEditorPageEnum.BotDefenseMigrationsAnomalies]: (\n        <BotDefenseMitigationsAnomaliesPage />\n      ),\n      [PolicyEditorPageEnum.BotDefenseMigrationsClasses]: (\n        <BotDefenseMitigationsClassesPage />\n      ),\n      [PolicyEditorPageEnum.BotDefenseMigrationsSignatures]: (\n        <BotDefenseMitigationsSignaturesPage />\n      ),\n      [PolicyEditorPageEnum.CustomXffHeaders]: <CustomXffHeadersPage />,\n      [PolicyEditorPageEnum.AllowedResponseCodes]: <AllowedResponseCodesPage />,\n      [PolicyEditorPageEnum.WhitelistIp]: <WhitelistIpsPage />,\n      [PolicyEditorPageEnum.Hostnames]: <HostnamesPage />,\n      [PolicyEditorPageEnum.DataGuardEnforcementUrls]: (\n        <DataGuardEnforcementUrlsPage />\n      ),\n      [PolicyEditorPageEnum.DataGuardSettings]: <DataGuardSettingsPage />,\n      [PolicyEditorPageEnum.CsrfProtection]: <CsrfProtectionPage />,\n      [PolicyEditorPageEnum.CsrfUrls]: <CsrfUrlsPage />,\n      [PolicyEditorPageEnum.CookieSettings]: <CookieSettingsPage />,\n      [PolicyEditorPageEnum.Cookies]: <CookiesPage />,\n    }\n  ) {}\n\n  createPage(page: PolicyEditorPageEnum): JSX.Element {\n    return this.pages[page];\n  }\n}\n","import * as React from \"react\";\nimport Editor from \"react-simple-code-editor\";\nimport { useEffect, useState } from \"react\";\nimport { languages, highlight } from \"prismjs\";\n\nimport \"prismjs/themes/prism-solarizedlight.css\";\nimport \"prismjs/components/prism-json\";\nimport { usePolicyEditorState } from \"../../../store/policy-editor/policy-editor.hooks\";\n\nexport type CurrentPolicyProps = {\n  jsonText: string;\n  onTextChange?: (text: string) => void;\n};\n\nexport const CurrentPolicyControl: React.FunctionComponent<CurrentPolicyProps> =\n  ({ jsonText, onTextChange }) => {\n    const [code, setCode] = useState(jsonText);\n\n    const { jsonValidationErrors } = usePolicyEditorState();\n\n    useEffect(() => {\n      setCode(jsonText);\n    }, [jsonText]);\n\n    return (\n      <Editor\n        value={code}\n        onValueChange={(text) => {\n          if (text !== code && onTextChange) {\n            // check that this is called not because\n            // the props changed, but by the user event\n            // to avoid loops\n            onTextChange(text);\n          }\n          setCode(text);\n        }}\n        highlight={(code) =>\n          code && code.length > 0 && highlight(code, languages.json, \"json\")\n        }\n        padding={10}\n        className=\"container__editor\"\n        style={{\n          fontFamily: \"monospace\",\n          fontSize: 12,\n          position: \"relative\",\n          backgroundColor:\n            jsonValidationErrors.length > 0 ? \"#fde0dc\" : \"#DCF9FD\",\n        }}\n      />\n    );\n  };\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"../../store/policy-editor/policy-editor.hooks\";\nimport { PolicyEditorPageFactory } from \"./controls/policy-editor.page.factory\";\nimport Paper from \"@mui/material/Paper\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport SplitPane, { Pane } from \"react-split-pane\";\nimport { CurrentPolicyControl } from \"./controls/curren-policy.control\";\nimport { policyEditorJsonTextSet } from \"../../store/policy-editor/policy-editor.actions\";\nimport { useStyles } from \"../../utils/styles.hook\";\nimport { useState } from \"react\";\nimport { AppBar, Button, Toolbar } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\n\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport { ReactComponent as DownloadIcon } from \"../../resources/toolbar/download.svg\";\nimport { ReactComponent as DeployIcon } from \"../../resources/toolbar/deploy.svg\";\nimport { download } from \"../../utils/download.util\";\n\nconst JsonEditorContainer = withStyles((theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n  })\n)(Paper);\n\nconst ToolbarButton = withStyles(() => ({\n  root: {\n    marginLeft: \"10px\",\n    height: \"33px\",\n    fontSize: \"14px\",\n    lineHeight: \"20px\",\n    textTransform: \"capitalize\",\n  },\n}))(Button);\n\nconst CurrentPageContainer = withStyles((theme) =>\n  createStyles({\n    root: {\n      position: \"relative\",\n      marginTop: theme.spacing(1),\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n    },\n  })\n)(Box);\n\nconst ParseErrorOverlay = withStyles((theme) =>\n  createStyles({\n    root: {\n      position: \"absolute\",\n      backgroundColor: theme.palette.error.main,\n      opacity: 0.5,\n      top: \"0px\",\n      left: \"0px\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: theme.shape.borderRadius,\n      zIndex: 2,\n    },\n  })\n)(Box);\n\nexport const PolicyEditorComponent: React.VoidFunctionComponent = () => {\n  const { currentPage, strCurrentPolicy, jsonParseError } =\n    usePolicyEditorState();\n\n  const styles = useStyles();\n  const dispatch = usePolicyEditorDispatch();\n  const pageFactory = new PolicyEditorPageFactory();\n\n  const [pageHeight, setPageHeight] = useState<number>(500);\n\n  const handleDownload = () => {\n    const date = new Date();\n\n    download(`waf-${date.getTime()}.json`, strCurrentPolicy);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={styles.editorContainer}>\n        <SplitPane\n          defaultSize={500}\n          maxSize={800}\n          split=\"horizontal\"\n          onChange={(newSize) => {\n            setPageHeight(newSize);\n          }}\n        >\n          <Pane style={{ overflow: \"scroll\" }}>\n            <CurrentPageContainer\n              style={{\n                height: \"100%\",\n              }}\n            >\n              {pageFactory.createPage(currentPage)}\n              {jsonParseError && <ParseErrorOverlay />}\n            </CurrentPageContainer>\n          </Pane>\n          <Pane\n            style={{\n              height: `calc(100vh - 122px - ${pageHeight}px)`,\n              overflow: \"scroll\",\n            }}\n          >\n            <AppBar\n              position=\"sticky\"\n              elevation={0}\n              sx={{\n                backgroundColor: \"white\",\n                color: \"black\",\n              }}\n            >\n              <Toolbar variant={\"dense\"}>\n                <Typography\n                  style={{\n                    fontSize: \"18px\",\n                    lineHeight: \"26px\",\n                    fontWeight: 600,\n                  }}\n                >\n                  JSON\n                </Typography>\n                <div style={{ textAlign: \"right\", width: \"100%\" }}>\n                  <ToolbarButton startIcon={<ShareIcon />} disabled={true}>\n                    Share\n                  </ToolbarButton>\n                  <ToolbarButton\n                    startIcon={<DeployIcon style={{ width: \"15px\" }} />}\n                    variant=\"outlined\"\n                    href=\"https://github.com/f5devcentral/aws-waf-solution-template\"\n                  >\n                    Deploy\n                  </ToolbarButton>\n                  <ToolbarButton\n                    startIcon={<DownloadIcon style={{ width: \"15px\" }} />}\n                    variant=\"contained\"\n                    onClick={handleDownload}\n                  >\n                    Download\n                  </ToolbarButton>\n                </div>\n              </Toolbar>\n            </AppBar>\n            <JsonEditorContainer>\n              <CurrentPolicyControl\n                jsonText={strCurrentPolicy}\n                onTextChange={(text) => dispatch(policyEditorJsonTextSet(text))}\n              />\n            </JsonEditorContainer>\n          </Pane>\n        </SplitPane>\n      </div>\n    </React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport const PolicyWizardComponent: React.VoidFunctionComponent = () => {\n  return <Typography>Policy Wizard is under development</Typography>;\n};\n","export class PolicyEditorPreprocessorServices {\n  constructor(private body: string) {}\n\n  private sortByWildcardOrder(arr: any): any {\n    if (!arr) return arr;\n    return arr.sort(\n      (l: any, r: any) => (l.wildcardOrder ?? 0) - (r?.wildcardOrder ?? 0)\n    );\n  }\n\n  preprocess(): string {\n    try {\n      const parsed = JSON.parse(this.body);\n      const policy = parsed.policy as any;\n\n      Object.keys(policy).forEach((k) => {\n        if (\n          policy[k] !== undefined &&\n          Array.isArray(policy[k]) &&\n          policy[k].length > 0 &&\n          policy[k][0].wildcardOrder !== undefined\n        ) {\n          policy[k] = this.sortByWildcardOrder(policy[k]);\n        }\n      });\n\n      return JSON.stringify({ policy }, null, 2);\n    } catch (e) {\n      return this.body;\n    }\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { PolicyEditorDashboardComponent } from \"./component/dashboard/policy-editor.dashboard.component\";\nimport { useDashboardState } from \"./store/dashboard/dashboard.hooks\";\nimport { DashboardModuleEnum } from \"./store/dashboard/dashboard.types\";\nimport { PolicyTemplatesComponent } from \"./component/application-preset/policy-templates.component\";\nimport { PolicyEditorComponent } from \"./component/policy-editor/policy-editor.component\";\nimport { PolicyWizardComponent } from \"./component/policy-wizard/policy-wizard.component\";\nimport {\n  BrowserRouter,\n  Route,\n  RouteComponentProps,\n  Switch,\n} from \"react-router-dom\";\n\nimport queryString from \"query-string\";\nimport {\n  usePolicyEditorDispatch,\n  usePolicyEditorState,\n} from \"./store/policy-editor/policy-editor.hooks\";\nimport { Box } from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport {\n  policyEditorJsonSrcSet,\n  policyEditorJsonTextSet,\n} from \"./store/policy-editor/policy-editor.actions\";\nimport { defaultGeneralSettings } from \"./model/policy-editor.defaults.model\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\nimport { PolicyEditorPreprocessorServices } from \"./store/policy-editor/visitor/services/policy-editor-preprocessor.services\";\nimport {\n  ThemeProvider,\n  Theme,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\n\ndeclare module \"@mui/styles/defaultTheme\" {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme {}\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#4152B4\",\n    },\n  },\n  components: {\n    MuiSwitch: {\n      styleOverrides: {\n        track: {\n          borderRadius: 16 / 2,\n          boxSizing: \"border-box\",\n        },\n        thumb: {\n          boxShadow: \"0 2px 4px 0 rgb(0 35 11 / 20%)\",\n          width: 12,\n          height: 12,\n          borderRadius: 6,\n          margin: \"4px\",\n        },\n      },\n    },\n    MuiFormControlLabel: {\n      styleOverrides: {\n        label: {\n          fontSize: \"12px\",\n          lineHeight: \"18px\",\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        input: {\n          height: \"20px\",\n          padding: \"6px\",\n          fontsize: \"12px\",\n          lineHeight: \"20px\",\n          margin: \"0px\",\n        },\n      },\n    },\n  },\n});\n\ntype PolicyEditorParams = {};\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Dashboard: React.VoidFunctionComponent = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { currentModule } = useDashboardState();\n  const {\n    strCurrentPolicy,\n    policySrcUrl,\n    jsonValidationErrors,\n    jsonParseError,\n  } = usePolicyEditorState();\n  const dispatch = usePolicyEditorDispatch();\n  const qs = queryString.parse(window.location.search);\n\n  const handleErrorClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setErrorMessage(\"\");\n  };\n\n  useEffect(() => {\n    switch (true) {\n      case qs.ref && strCurrentPolicy === \"\":\n      case qs.ref && qs.ref !== \"\" && policySrcUrl !== qs.ref: {\n        fetch(decodeURI(qs.ref as string))\n          .then(async (x) => {\n            const body = await x.text();\n\n            const policyEditorPreprocessor =\n              new PolicyEditorPreprocessorServices(body);\n\n            dispatch(\n              policyEditorJsonSrcSet(\n                qs.ref as string,\n                policyEditorPreprocessor.preprocess()\n              )\n            );\n          })\n          .catch((e) => {\n            setErrorMessage(\n              `Cannot get the policy by the link. The default policy will be used`\n            );\n            dispatch(\n              policyEditorJsonSrcSet(\n                qs.ref as string,\n                JSON.stringify(defaultGeneralSettings(0), null, 2)\n              )\n            );\n          });\n        break;\n      }\n      case !qs.ref && strCurrentPolicy === \"\": {\n        dispatch(\n          policyEditorJsonTextSet(\n            JSON.stringify(defaultGeneralSettings(0), null, 2)\n          )\n        );\n        break;\n      }\n    }\n  }, [dispatch, policySrcUrl, qs.ref, strCurrentPolicy]);\n\n  if (\n    (qs.ref && strCurrentPolicy === \"\") ||\n    (qs.ref && qs.ref !== \"\" && policySrcUrl !== qs.ref)\n  ) {\n    return (\n      <Box>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const uiFactory: { [key: number]: JSX.Element } = {\n    [DashboardModuleEnum.PolicyTemplates]: <PolicyTemplatesComponent />,\n    [DashboardModuleEnum.PolicyEditor]: <PolicyEditorComponent />,\n    [DashboardModuleEnum.PolicyWizard]: <PolicyWizardComponent />,\n  };\n\n  return (\n    <PolicyEditorDashboardComponent>\n      <input\n        type=\"hidden\"\n        id=\"errJsonParse\"\n        name=\"errJsonParse\"\n        value={jsonParseError.toString()}\n      />\n      <input\n        type=\"hidden\"\n        id=\"errJsonValidation\"\n        name=\"errJsonValidation\"\n        value={JSON.stringify(jsonValidationErrors)}\n      />\n      {uiFactory[currentModule]}\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        open={errorMessage !== \"\"}\n        onClose={handleErrorClose}\n        message={errorMessage}\n      >\n        <Alert onClose={handleErrorClose} severity=\"error\">\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n    </PolicyEditorDashboardComponent>\n  );\n};\n\nconst DashboardThemeContainer: React.FunctionComponent<\n  RouteComponentProps<PolicyEditorParams>\n> = ({ match }) => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <Dashboard />\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={DashboardThemeContainer} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { Action } from \"redux\";\nimport produce, { Draft } from \"immer\";\n\nexport type ReducerHandler<\n  PolicyEditorAction extends Action,\n  PolicyEditorState\n> = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => Draft<PolicyEditorState>;\n\nexport abstract class ReducerBase<\n  PolicyEditorAction extends Action,\n  PolicyEditorState\n> {\n  protected constructor(\n    private _currentState: PolicyEditorState,\n    private _reducerFactory: {\n      [key: string]: ReducerHandler<PolicyEditorAction, PolicyEditorState>;\n    }\n  ) {}\n\n  process(action: PolicyEditorAction): PolicyEditorState {\n    const processor = this._reducerFactory[action.type];\n    if (!processor) return this._currentState;\n\n    return produce<PolicyEditorState>(this._currentState, (draft) =>\n      processor(draft, action)\n    );\n  }\n}\n","import {\n  DashboardAction,\n  DashboardReducerHandler,\n  DashboardState,\n} from \"../dashboard.types\";\nimport { Draft } from \"immer\";\n\nexport const dashboardModuleSetHandler: DashboardReducerHandler = (\n  currentState: Draft<DashboardState>,\n  action: DashboardAction\n) => {\n  if (action.currentModule === undefined) return currentState;\n\n  currentState.currentModule = action.currentModule;\n\n  return currentState;\n};\n","import {\n  DashboardAction,\n  DashboardModuleEnum,\n  DashboardState,\n} from \"./dashboard.types\";\nimport { ReducerBase } from \"../reducer.base\";\nimport { DASHBOARD_MODULE_SET } from \"../action-types\";\nimport { dashboardModuleSetHandler } from \"./handler/dashboard-module-set.handler\";\n\nexport function dashboardStateInit(): DashboardState {\n  return {\n    currentModule: DashboardModuleEnum.PolicyEditor,\n  };\n}\n\nclass DashboardReducerHandlerFactory extends ReducerBase<\n  DashboardAction,\n  DashboardState\n> {\n  constructor(state: DashboardState) {\n    super(state, {\n      [DASHBOARD_MODULE_SET]: dashboardModuleSetHandler,\n    });\n  }\n}\n\nexport const DashboardReducer = (\n  state: DashboardState = dashboardStateInit(),\n  action: DashboardAction\n): DashboardState => {\n  const dashboardReducerHandlerFactory = new DashboardReducerHandlerFactory(\n    state\n  );\n  return dashboardReducerHandlerFactory.process(action);\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\nimport { Draft } from \"immer\";\n\nexport const policyEditorPageSetHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  if (action.currentPage === undefined || action.currentTab === undefined)\n    return currentState;\n\n  currentState.currentTab = action.currentTab;\n  currentState.currentPage = action.currentPage;\n\n  return currentState;\n};\n","import { Validator } from \"jsonschema\";\nimport { PolicySchemaService } from \"../policy-schema/policy-schema.service\";\n\nexport type PolicyValidationError = {\n  message: string;\n  property: string;\n  path: any[];\n};\n\nexport class PolicyValidator {\n  validate(policy: any): PolicyValidationError[] {\n    try {\n      const schemaService = new PolicySchemaService();\n      const schema = schemaService.getSchema();\n\n      const validator = new Validator();\n      const errors = validator.validate(policy, schema as any, {\n        nestedErrors: true,\n      }).errors;\n\n      return errors.map((x) => {\n        const customMessage = (x.schema as any).message\n          ? (x.schema as any).message[x.name]\n          : undefined;\n\n        if (customMessage) {\n          return {\n            message: customMessage,\n            path: x.path,\n            property: x.property,\n          };\n        } else if (x.name === \"required\") {\n          return {\n            message: x.message,\n            path: x.path,\n            property: `${x.property}.${x.argument}`,\n          } as PolicyValidationError;\n        } else {\n          return {\n            message: x.message,\n            path: x.path,\n            property: x.property,\n          } as PolicyValidationError;\n        }\n      });\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\nimport { Draft } from \"immer\";\nimport { PolicyValidator } from \"../../../model/json-validate/policy.validator\";\n\nexport const policyEditorJsonTextSetHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  if (action.strPolicy === undefined || action.strPolicy === \"\")\n    return currentState;\n\n  currentState.strCurrentPolicy = action.strPolicy;\n\n  try {\n    currentState.jsonCurrentPolicy = JSON.parse(action.strPolicy);\n    currentState.jsonParseError = false;\n\n    const policyValidator = new PolicyValidator();\n    currentState.jsonValidationErrors = policyValidator.validate(\n      currentState.jsonCurrentPolicy.policy\n    );\n  } catch (e) {\n    currentState.jsonParseError = true;\n  }\n\n  return currentState;\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\nimport { Draft } from \"immer\";\nimport { PolicyValidator } from \"../../../model/json-validate/policy.validator\";\n\nexport const policyEditorJsonVisitHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  if (action.visitor === undefined) return currentState;\n\n  action.visitor(currentState.jsonCurrentPolicy);\n\n  currentState.strCurrentPolicy = JSON.stringify(\n    currentState.jsonCurrentPolicy,\n    null,\n    2\n  );\n\n  const policyValidator = new PolicyValidator();\n  currentState.jsonValidationErrors = policyValidator.validate(\n    currentState.jsonCurrentPolicy.policy\n  );\n\n  return currentState;\n};\n","import { PolicyEditorReducerHandler } from \"../policy-editor.types\";\n\nexport const policyEditorJsonSrcSetHandler: PolicyEditorReducerHandler = (\n  currentState,\n  action\n) => {\n  if (action.strPolicy === undefined || action.policySrcUrl === undefined)\n    return currentState;\n\n  currentState.strCurrentPolicy = action.strPolicy;\n  currentState.policySrcUrl = action.policySrcUrl;\n\n  try {\n    currentState.jsonCurrentPolicy = JSON.parse(action.strPolicy);\n    currentState.jsonParseError = false;\n  } catch (e) {\n    currentState.jsonParseError = true;\n  }\n\n  return currentState;\n};\n","import { Draft } from \"immer\";\nimport {\n  PolicyEditorAction,\n  PolicyEditorReducerHandler,\n  PolicyEditorState,\n} from \"../policy-editor.types\";\n\nexport const policyEditorDefaultPolicySetHandler: PolicyEditorReducerHandler = (\n  currentState: Draft<PolicyEditorState>,\n  action: PolicyEditorAction\n) => {\n  currentState.showDefaultPolicy = action.showDefaultPolicy ?? false;\n\n  return currentState;\n};\n","import {\n  PolicyEditorAction,\n  PolicyEditorPageEnum,\n  PolicyEditorState,\n} from \"./policy-editor.types\";\nimport { ReducerBase } from \"../reducer.base\";\nimport {\n  POLICY_EDITOR_JSON_SRC_SET,\n  POLICY_EDITOR_JSON_TEXT_SET,\n  POLICY_EDITOR_JSON_VISIT,\n  POLICY_EDITOR_PAGE_SET,\n  POLICY_EDITOR_UI_SHOW_DEFAULT_POLICY_SET,\n} from \"../action-types\";\nimport { policyEditorPageSetHandler } from \"./handler/policyeditor-page-set.handler\";\nimport { policyEditorJsonTextSetHandler } from \"./handler/policyeditor-jsontext-set.handler\";\nimport { policyEditorJsonVisitHandler } from \"./handler/policyeditor-json-visit.handler\";\nimport { policyEditorJsonSrcSetHandler } from \"./handler/policyeditor-jsonsrc-set.handler\";\nimport { policyEditorDefaultPolicySetHandler } from \"./handler/policyeditor-default-policy-set.handler\";\n\nexport function policyEditorStateInit(): PolicyEditorState {\n  return {\n    policySrcUrl: \"\",\n    currentTab: 0,\n    jsonParseError: false,\n    currentPage: PolicyEditorPageEnum.GeneralSettings,\n    jsonCurrentPolicy: {},\n    strCurrentPolicy: \"\",\n    jsonValidationErrors: [],\n    showDefaultPolicy: false,\n  };\n}\n\nclass PolicyEditorReducerHandlerFactory extends ReducerBase<\n  PolicyEditorAction,\n  PolicyEditorState\n> {\n  constructor(state: PolicyEditorState) {\n    super(state, {\n      [POLICY_EDITOR_PAGE_SET]: policyEditorPageSetHandler,\n      [POLICY_EDITOR_JSON_TEXT_SET]: policyEditorJsonTextSetHandler,\n      [POLICY_EDITOR_JSON_VISIT]: policyEditorJsonVisitHandler,\n      [POLICY_EDITOR_JSON_SRC_SET]: policyEditorJsonSrcSetHandler,\n      [POLICY_EDITOR_UI_SHOW_DEFAULT_POLICY_SET]:\n        policyEditorDefaultPolicySetHandler,\n    });\n  }\n}\n\nexport const PolicyEditorReducer = (\n  state: PolicyEditorState = policyEditorStateInit(),\n  action: PolicyEditorAction\n): PolicyEditorState => {\n  const policyEditorReducerHandlerFactory =\n    new PolicyEditorReducerHandlerFactory(state);\n\n  return policyEditorReducerHandlerFactory.process(action);\n};\n","import { combineReducers, Reducer } from \"redux\";\nimport { DashboardState } from \"./dashboard/dashboard.types\";\nimport {\n  DashboardReducer,\n  dashboardStateInit,\n} from \"./dashboard/dashboard.reducer\";\nimport { PolicyEditorState } from \"./policy-editor/policy-editor.types\";\nimport {\n  PolicyEditorReducer,\n  policyEditorStateInit,\n} from \"./policy-editor/policy-editor.reducer\";\n\nexport interface ApplicationState {\n  dashboardState: DashboardState;\n  policyEditorState: PolicyEditorState;\n}\n\nexport const ApplicationReducers: Reducer<ApplicationState> =\n  combineReducers<ApplicationState>({\n    dashboardState: DashboardReducer,\n    policyEditorState: PolicyEditorReducer,\n  });\n\nexport function DefaultApplicationState(): ApplicationState {\n  return {\n    dashboardState: dashboardStateInit(),\n    policyEditorState: policyEditorStateInit(),\n  };\n}\n","import { ApplicationState, DefaultApplicationState } from \"../store\";\n\nconst stateVar = \"editor-state#0.1\";\n\nexport class SessionStorage {\n  loadState(): ApplicationState {\n    try {\n      const serializedState = sessionStorage.getItem(stateVar);\n      return JSON.parse(serializedState ? serializedState : \"\");\n    } catch (e) {\n      return DefaultApplicationState();\n    }\n  }\n\n  saveState(state: ApplicationState) {\n    try {\n      const serializedState = JSON.stringify(state);\n      sessionStorage.setItem(stateVar, serializedState);\n    } catch (e) {}\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { SessionStorage } from \"./storage/session.storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, Store } from \"redux\";\nimport { ApplicationReducers, ApplicationState } from \"./store\";\n\nimport \"./resources/styles/main.scss\";\n\nconst sessionStorage = new SessionStorage();\nconst persistedState = sessionStorage.loadState();\n\nconst composeEnhancers = composeWithDevTools({ trace: true, traceLimit: 25 });\n\nconst store: Store<ApplicationState> = createStore(\n  ApplicationReducers,\n  persistedState,\n  composeEnhancers()\n);\n\nstore.subscribe(() => {\n  sessionStorage.saveState(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}